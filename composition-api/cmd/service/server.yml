openapi: 3.0.0
info:
  title: API med_ml сервера
  description: API для сервера med_ml
  version: "v0.0.1"
servers:
  - url: http://localhost:8080/api/v1
    description: Local development server

components:
  schemas:
    device:
      type: object
      description: узи аппарат
      required:
        - id
        - name
      properties:
        id:
          type: integer
          description: id устройства
        name:
          type: string
          maxLength: 255
          description: название устройства
      example:
        id: 1
        name: "ульпанатор 3000"

    uzi:
      type: object
      description: узи
      required:
        - id
        - projection
        - checked
        - external_id
        - author_id
        - device_id
        - status
        - create_at
      properties:
        id:
          type: string
          format: uuid
          description: id узи
        projection:
          type: string
          enum:
            - cross
            - long
          description: проекция узи
          maxLength: 255
        checked:
          type: boolean
          description: проверенно ли врачем
        external_id:
          type: string
          format: uuid
          description: id пациента/организации etc. Внешняя связсь
        author_id:
          type: string
          format: uuid
          description: id аккаунта, загрузившего узи
        device_id:
          type: integer
          description: id устройства
        status:
          type: string
          enum:
            - new
            - pending
            - completed
          description: >
            Статус узи
            **new** - новое узи
            **pending** - в обработке нейронкой
            **completed** - обработано
        create_at:
          type: string
          format: date-time
          description: дата создания в формате RFC3339
      example:
        id: "123e4567-e89b-12d3-a456-426614174000"
        projection: "cross"
        checked: false
        external_id: "123e4567-e89b-12d3-a456-426614174000"
        author_id: "123e4567-e89b-12d3-a456-426614174000"
        device_id: 1
        status: "pending"
        create_at: "2021-01-01T00:00:00Z" # RFC3339

    echographics:
      type: object
      description: эхографическая информация
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          description: id узи
        contors:
          type: string
          description: контуры
          maxLength: 255
        left_lobe_length:
          type: number
          description: длина левого доли
        left_lobe_width:
          type: number
          description: ширина левого доли
        left_lobe_thick:
          type: number
          description: толщина левого доли
        left_lobe_volum:
          type: number
          description: объем левого доли
        right_lobe_length:
          type: number
          description: длина правого доли
        right_lobe_width:
          type: number
          description: ширина правого доли
        right_lobe_thick:
          type: number
          description: толщина правого доли
        right_lobe_volum:
          type: number
          description: объем правого доли
        gland_volum:
          type: number
          description: объем железы
        isthmus:
          type: number
          description: перешеек
        struct:
          type: string
          description: структура
          maxLength: 255
        echogenicity:
          type: string
          description: эхогенность
          maxLength: 255
        regional_lymph:
          type: string
          description: регионарные лимфоузлы
          maxLength: 255
        vascularization:
          type: string
          description: васкуляризация по ЦДК
          maxLength: 255
        location:
          type: string
          description: расположение
          maxLength: 255
        additional:
          type: string
          description: дополнительная информация
          maxLength: 255
        conclusion:
          type: string
          description: заключение
          maxLength: 255
      example:
        id: "123e4567-e89b-12d3-a456-426614174000"
        contors: "контуры"
        left_lobe_length: 100
        left_lobe_width: 100
        left_lobe_thick: 100
        left_lobe_volum: 100
        right_lobe_length: 100
        right_lobe_width: 100
        right_lobe_thick: 100
        right_lobe_volum: 100
        gland_volum: 100
        isthmus: 100
        struct: "квадрат"
        echogenicity: "эхогенность"
        regional_lymph: "в правой части"
        vascularization: "выраженная"
        location: "в правой части"
        additional: "видны последстввия нездорового образа жизни"
        conclusion: "требуется лечение"

    node:
      type: object
      description: узел
      required:
        - id
        - ai
        - uzi_id
        - tirads_23
        - tirads_4
        - tirads_5
      properties:
        id:
          type: string
          format: uuid
          description: id узла
        ai:
          type: boolean
          description: признак того, что узел был создан нейронкой
        uzi_id:
          type: string
          format: uuid
          description: id узи, к которому относится узел
        validation:
          type: string
          enum:
            - null
            - invalid
            - valid
          description: валидация нейроночного узла врачем
        tirads_23:
          type: number
          maximum: 1.0
          minimum: 0.0
          description: вероятность наличия опухоли в 23-й группе
        tirads_4:
          type: number
          maximum: 1.0
          minimum: 0.0
          description: вероятность наличия опухоли в 4-й группе
        tirads_5:
          type: number
          maximum: 1.0
          minimum: 0.0
          description: вероятность наличия опухоли в 5-й группе
        description:
          type: string
          description: описание узла
      example:
        id: "123e4567-e89b-12d3-a456-426614174000"
        ai: true
        uzi_id: "123e4567-e89b-12d3-a456-426614174000"
        validation: "invalid"
        tirads_23: 0.67
        tirads_4: 0.23
        tirads_5: 0.89
        description: "узел явно неправильный"

    contor:
      type: array
      description: контур сегмента в формате json
      items:
        type: object
        required:
          - x
          - y
        properties:
          x:
            type: integer
            minimum: 0
            description: x координата точки
          y:
            type: integer
            minimum: 0
            description: y координата точки
      example:
        - x: 100
          y: 100
        - x: 200
          y: 200

    segment:
      type: object
      description: сегмент узла на изображении
      required:
        - id
        - image_id
        - node_id
        - contor
        - ai
        - tirads_23
        - tirads_4
        - tirads_5
      properties:
        id:
          type: string
          format: uuid
          description: id сегмента
        image_id:
          type: string
          format: uuid
          description: id изображения, к которому относится сегмент
        node_id:
          type: string
          format: uuid
          description: id узла, к которому относится сегмент
        contor:
          $ref: '#/components/schemas/contor'
          description: контур сегмента
        ai:
          type: boolean
          description: признак того, что сегмент был создан нейронкой
        tirads_23:
          type: number
          maximum: 1.0
          minimum: 0.0
          description: вероятность наличия опухоли в 23-й группе
        tirads_4:
          type: number
          maximum: 1.0
          minimum: 0.0
          description: вероятность наличия опухоли в 4-й группе
        tirads_5:
          type: number
          maximum: 1.0
          minimum: 0.0
          description: вероятность наличия опухоли в 5-й группе
      example:
        id: "123e4567-e89b-12d3-a456-426614174000"
        image_id: "123e4567-e89b-12d3-a456-426614174000"
        node_id: "123e4567-e89b-12d3-a456-426614174000"
        contor:
          - x: 100
            y: 100
          - x: 200
            y: 200
        ai: false
        tirads_23: 0.45
        tirads_4: 0.78
        tirads_5: 0.12
    
    image:
      type: object
      description: изображение
      required:
        - id
        - uzi_id
        - page
      properties:
        id:
          type: string
          format: uuid
          description: id изображения
        uzi_id:
          type: string
          format: uuid
          description: id узи, к которому относится изображение
        page:
          type: integer
          description: номер страницы
      example:
        id: "123e4567-e89b-12d3-a456-426614174000"
        uzi_id: "123e4567-e89b-12d3-a456-426614174000"
        page: 1

    doctor:
      type: object
      description: врач
      required:
        - id
        - fullname
        - org
        - job
      properties:
        id:
          type: string
          format: uuid
          description: id врача
        fullname:
          type: string
          maxLength: 255
          description: полное имя врача
        org:
          type: string
          maxLength: 255
          description: организация врача
        job:
          type: string
          maxLength: 255
          description: работа врача
        description:
          type: string
          description: описание врача (раб. стаж)
      example:
        id: "123e4567-e89b-12d3-a456-426614174000"
        fullname: "Иван Иванов"
        org: "Медицинский центр"
        job: "Хирург"
        description: "работает в медицинском центре с 2010 года"

    patient:
      type: object
      description: пациент
      required:
        - id
        - fullname
        - email
        - policy
        - active
        - malignancy
        - birth_date
      properties:
        id:
          type: string
          format: uuid
          description: id пациента
        fullname:
          type: string
          maxLength: 255
          description: полное имя пациента
        email:
          type: string
          maxLength: 255
          description: email пациента
        policy:
          type: string
          maxLength: 255
          description: полис пациента
        active:
          type: boolean
          description: признак того, что пациент активен
        malignancy: 
          type: boolean
          description: признак того, что пациент имеет злокачественную опухоль
        birth_date:
          type: string
          format: date
          description: дата рождения пациента
        last_uzi_date:
          type: string
          format: date
          description: дата последнего узи
      example:
        id: "123e4567-e89b-12d3-a456-426614174000"
        fullname: "Иван Иванов"
        email: "ivan@example.com"
        policy: "1234567890"
        active: true
        malignancy: false
        birth_date: "2021-01-01"
        last_uzi_date: "2024-01-01"

    card:
      type: object
      description: карта пациента
      required:
        - patient_id
        - doctor_id
      properties:
        patient_id:
          type: string
          format: uuid
          description: id пациента
        doctor_id:
          type: string
          format: uuid
          description: id врача
        diagnosis:
          type: string
          description: диагноз
      example:
        patient_id: "123e4567-e89b-12d3-a456-426614174000"
        doctor_id: "123e4567-e89b-12d3-a456-426614174000"
        diagnosis: "опухоль"

    simpleUuid:
      type: object
      description: uuid
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
      example:
        id: "123e4567-e89b-12d3-a456-426614174000"
    
    error:
      description: Ошибка
      type: object
      properties:
        code:
          type: integer
          format: int64
        message:
          type: string
      required:
        - code
        - message

  responses:
    error:
      description: Ошибка
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []

paths:
  /login:
    post:
      summary: авторизация
      tags:
        - auth
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email 
                - password
              properties:
                email:
                  type: string
                  maxLength: 255
                  format: email
                  description: email аккаунта
                password:
                  type: string
                  maxLength: 255
                  description: пароль аккаунта
              example:
                email: "test@test.com"
                password: "qwerty123"
      responses:
        '200':
          description: авторизация прошла успешно
          content:
            application/json:
              schema:
                type: object
                required:
                  - access_token
                  - refresh_token
                properties:
                  access_token:
                    type: string
                    format: jwt
                    description: access токен
                  refresh_token:
                    type: string
                    format: jwt
                    description: refresh токен
        '500':
          $ref: "#/components/responses/error"
        default:
          $ref: "#/components/responses/error"

  /refresh:
    post:
      summary: обновить access token
      tags:
        - auth
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - refresh_token
              properties:
                refresh_token:
                  type: string
                  format: jwt
                  description: refresh токен
              example:
                refresh_token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
      responses:
        '200':
          description: новая пара access и refresh токенов
          content:
            application/json:
              schema:
                type: object
                required:
                  - access_token
                  - refresh_token
                properties:
                  access_token:
                    type: string
                    format: jwt
                    description: access токен
                  refresh_token:
                    type: string
                    format: jwt
                    description: refresh токен
        '500':
          $ref: "#/components/responses/error"
        default:
          $ref: "#/components/responses/error"

  /reg/doctor:
    post:
      summary: зарегистрировать врача (как пользователя)
      tags:
        - reg
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - fullname
                - org
                - job
                - email
                - password
              properties:
                email:
                  type: string
                  maxLength: 255
                  format: email
                  description: email врача
                password:
                  type: string
                  maxLength: 255
                  description: пароль врача
                fullname:
                  type: string
                  maxLength: 255
                  description: полное имя врача
                org:
                  type: string
                  maxLength: 255
                  description: организация врача
                job:
                  type: string
                  maxLength: 255
                  description: работа врача
                description:
                  type: string
                  description: описание врача (раб. стаж)
              example:
                fullname: "Иван Иванов"
                org: "Медицинский центр"
                job: "Хирург"
                email: "test@test.com"
                password: "qwerty123"
                description: "работает в медицинском центре с 2010 года"
      responses:
        '200':
          description: врач зарегистрирован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/simpleUuid"
        '500':
          $ref: "#/components/responses/error"
        default:
          $ref: "#/components/responses/error"

  /reg/patient:
    post:
      summary: зарегистрировать пациента (как пользователя). **Сделано под мобилки api**. Врачам регистрировать пациентов через /med/patient
      tags:
        - reg
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - fullname
                - policy
                - birth_date
                - email
                - password
              properties:
                fullname:
                  type: string
                  maxLength: 255
                  description: полное имя пациента
                policy:
                  type: string
                  maxLength: 255
                  description: полис пациента
                birth_date:
                  type: string
                  format: date
                  description: дата рождения пациента
                email:
                  type: string
                  maxLength: 255
                  format: email
                  description: email врача
                password:
                  type: string
                  maxLength: 255
                  description: пароль врача
              example:
                fullname: "Иван Иванов"
                policy: "1234567890"
                birth_date: "2021-01-01"
                email: "test@test.com"
                password: "qwerty123"
      responses:
        '200':
          description: пациент зарегистрирован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/simpleUuid"
        '500':
          $ref: "#/components/responses/error"
        default:
          $ref: "#/components/responses/error"

  /med/doctor/{id}:
    get:
      summary: получить врача
      tags:
        - med
      parameters:
        - name: id
          in: path
          required: true
          description: id врача
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: врач
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/doctor"
        '500':
          $ref: "#/components/responses/error"
        default:
          $ref: "#/components/responses/error"
     
  /med/patient:
    post:
      summary: зарегистрировать пациента
      tags:
        - med
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - fullname
                - email
                - policy
                - active
                - malignancy
                - birth_date
              properties:
                fullname:
                  type: string
                  maxLength: 255
                  description: полное имя пациента
                email:
                  type: string
                  maxLength: 255
                  format: email
                  description: email пациента
                policy:
                  type: string
                  maxLength: 255
                  description: полис пациента
                active:
                  type: boolean
                  description: признак того, что пациент активен
                malignancy:
                  type: boolean
                  description: признак того, что пациент имеет злокачественную опухоль
                birth_date:
                  type: string
                  format: date
                  description: дата рождения пациента в формате ISO 8601
      responses:
        '200':
          description: пациент зарегистрирован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/simpleUuid"
        '500':
          $ref: "#/components/responses/error"
        default:
          $ref: "#/components/responses/error"

  /med/patient/{id}:
    get:
      summary: получить пациента
      tags:
        - med
      
      parameters:
        - name: id
          in: path
          required: true
          description: id пациента
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: пациент
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/patient"
        '500':
          $ref: "#/components/responses/error"
        default:
          $ref: "#/components/responses/error"

    patch:
      summary: обновить пациента
      tags:
        - med
      
      parameters:
        - name: id
          in: path
          required: true
          description: id пациента
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                active:
                  type: boolean
                  description: признак того, что пациент активен
                malignancy:
                  type: boolean
                  description: признак того, что пациент имеет злокачественную опухоль
      responses:
        '200':
          description: пациент обновлен
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/patient"
        '500':
          $ref: "#/components/responses/error"
        default:
          $ref: "#/components/responses/error"

  /med/doctor/{id}/patients:
    get:
      summary: получить пациентов врача
      tags:
        - med
      
      parameters:
        - name: id
          in: path
          required: true
          description: id врача
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: врач
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/patient'
        '404':
          $ref: "#/components/responses/error"
        '500':
          $ref: "#/components/responses/error"
        default:
          $ref: "#/components/responses/error"

  /med/card:
    post:
      summary: создать карту пациента
      tags:
        - med
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/card"
      responses:
        '200':
          description: карта пациента создана
        '500':
          $ref: "#/components/responses/error"
        default:
          $ref: "#/components/responses/error"
    
  /med/card/{doctor_id}/{patient_id}:
    get:
      summary: получить карту пациента
      tags:
        - med
      
      parameters:
        - name: doctor_id
          in: path
          required: true
          description: id врача
          schema:
            type: string
            format: uuid
        - name: patient_id  
          in: path
          required: true
          description: id пациента
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: карта пациента
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/card"
        '500':
          $ref: "#/components/responses/error"
        default:
          $ref: "#/components/responses/error"

    patch:
      summary: обновить карту пациента
      tags:
        - med
      
      parameters:
        - name: doctor_id
          in: path
          required: true
          description: id врача
          schema:
            type: string
            format: uuid
        - name: patient_id  
          in: path
          required: true
          description: id пациента
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - diagnosis
              properties:
                diagnosis:
                  type: string
                  description: диагноз пациента
      responses:
        '200':
          description: карта пациента обновлена
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/card"
        '500':
          $ref: "#/components/responses/error"
        default:
          $ref: "#/components/responses/error"
  /uzi:
    post:
      summary: загрузить узи на обработку
      tags:
        - uzi
      
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: файл узи. **обязательно с .tiff/.png**
                projection:
                  type: string
                  enum:
                    - cross
                    - long
                  description: проекция узи
                external_id:
                  type: string
                  format: uuid
                  description: внешний id пациента/организации etc.
                device_id:
                  type: integer
                  description: id узи аппарата
                description:
                  type: string
                  description: описание узи
              required:
                - file
                - projection
                - external_id
                - device_id
      responses:
        '200':
          description: id узи
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/simpleUuid"
        '500':
          $ref: "#/components/responses/error"
        default:
          $ref: "#/components/responses/error"

  /uzi/{id}:
    get:
      summary: получить узи
      tags:
        - uzi
      
      parameters:
        - name: id
          in: path
          required: true
          description: id узи
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: узи
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/uzi"
        '500':
          $ref: "#/components/responses/error"
        default:
          $ref: "#/components/responses/error"
    
    patch:
      summary: обновить узи
      tags:
        - uzi
      
      parameters:
        - name: id
          in: path
          required: true
          description: id узи
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                projection:
                  type: string
                  enum:
                    - cross
                    - long
                  description: проекция узи
                checked:
                  type: boolean
                  description: признак того, что узи проверено врачом
              example:
                projection: "cross"
                checked: true
      responses:
        '200':
          description: узи
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/uzi"
        '500':
          $ref: "#/components/responses/error"
        default:
          $ref: "#/components/responses/error"

    delete:
      summary: удалить узи
      tags:
        - uzi
      
      parameters:
        - name: id
          in: path
          required: true
          description: id узи
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: узи удалено
        '500':
          $ref: "#/components/responses/error"
        default:
          $ref: "#/components/responses/error"

  /uzis/external/{id}:
    get:
      summary: получить узи по внешнему id
      tags:
        - uzi
      
      parameters:
        - name: id
          in: path
          required: true
          description: внешний id пациента/организации etc.
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: узи
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/uzi'
        '500':
          $ref: "#/components/responses/error"
        default:
          $ref: "#/components/responses/error"
  
  /uzis/author/{id}:
    get:
      summary: получить узи по id автора
      tags:
        - uzi
      
      parameters:
        - name: id
          in: path
          required: true
          description: id аккаунта, загрузившего узи
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: узи
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/uzi'
        '500':
          $ref: "#/components/responses/error"
        default:
          $ref: "#/components/responses/error"

  /uzi/{id}/echographics:
    get:
      summary: получить эхографику uzi
      tags:
        - uzi
      
      parameters:
        - name: id
          in: path
          required: true
          description: id узи
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: echographics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echographics'
        '500':
          $ref: "#/components/responses/error"
        default:
          $ref: "#/components/responses/error"
    
    patch:
      summary: обновить эхографику
      tags:
        - uzi
      
      parameters:
        - name: id
          in: path
          required: true
          description: id узи
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/echographics'
      responses:
        '200':
          description: echographic
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echographics'
        '500':
          $ref: "#/components/responses/error"
        default:
          $ref: "#/components/responses/error"

  /uzi/device:
    post:
      summary: добавить uzi аппарат
      tags:
        - uzi
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  maxLength: 255
                  description: именование модели узи аппарата
              example:
                name: "Siemens"
      responses:
        '200':
          description: id uzi аппарата
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                properties:
                  id:
                    type: integer
                    description: id uzi аппарата
              example:
                id: 1
        '500':
          $ref: "#/components/responses/error"
        default:
          $ref: "#/components/responses/error"

  /uzi/devices:              
    get:
      summary: получит список uzi апппапапратов
      tags:
        - uzi
      
      responses:
        '200':
          description: uzi аппараты
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/device"
        '500':
          $ref: "#/components/responses/error"
        default:
          $ref: "#/components/responses/error"

  /uzi/{id}/images:
    get:
      summary: получает списк изображений uzi
      tags:
        - uzi
      
      parameters:
        - name: id
          in: path
          required: true
          description: id узи
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: images
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/image'
        '500':
          $ref: "#/components/responses/error"
        default:
          $ref: "#/components/responses/error"

  /uzi/image/{id}/nodes-segments:
    get:
      summary: получит узлы и сегменты на указанном изображении
      tags:
        - uzi
      
      parameters:
        - name: id
          in: path
          required: true
          description: id изображения
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: узлы и сегменты
          content:
            application/json:
              schema:
                type: object
                properties:
                  nodes:
                    type: array
                    items:
                      $ref: '#/components/schemas/node'
                  segments:
                    type: array
                    items:
                      $ref: '#/components/schemas/segment'
        '500':
          $ref: "#/components/responses/error"
        default:
          $ref: "#/components/responses/error"

  /uzi/{id}/nodes-segments:
    post:
      summary: добавить узел с сегментами
      tags:
        - uzi
      
      parameters:
        - name: id
          in: path
          required: true
          description: id узи
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - node
                - segments
              properties:
                node:
                  type: object
                  required:
                    - tirads_23
                    - tirads_4
                    - tirads_5
                  properties:
                    tirads_23:
                      type: number
                      maximum: 1.0
                      minimum: 0.0
                    tirads_4:
                      type: number
                      maximum: 1.0
                      minimum: 0.0
                    tirads_5:
                      type: number
                      maximum: 1.0
                      minimum: 0.0
                    description:
                      type: string
                      description: описание узла
                segments:
                  type: array
                  items:
                    type: object
                    required:
                      - image_id
                      - contor
                      - tirads_23
                      - tirads_4
                      - tirads_5
                    properties:
                      image_id:
                        type: string
                        format: uuid
                      contor:
                        $ref: '#/components/schemas/contor'
                      tirads_23:
                        type: number
                        maximum: 1.0
                        minimum: 0.0
                      tirads_4:
                        type: number
                        maximum: 1.0
                        minimum: 0.0
                      tirads_5:
                        type: number
                        maximum: 1.0
                        minimum: 0.0
      responses:
        '200':
          description: id узла
          content:
            application/json:
              schema:
                type: object
                required:
                  - node_id
                  - segment_ids
                properties:
                  node_id:
                    type: string
                    format: uuid
                  segment_ids:
                    type: array
                    items:
                      type: string
                      format: uuid
        '500':
          $ref: "#/components/responses/error"
        default:
          $ref: "#/components/responses/error"

  /uzi/{id}/nodes:
    get:
      summary: получить все узлы узи
      tags:
        - uzi
      
      parameters:
        - name: id
          in: path
          required: true
          description: uzi_id
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: id узла
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/node'
        '500':
          $ref: "#/components/responses/error"
        default:
          $ref: "#/components/responses/error"

  /uzi/nodes/{id}:
    patch:
      summary: обновить узел
      tags:
        - uzi
      
      parameters:
        - name: id
          in: path
          required: true
          description: id узла
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                validation:
                  type: string
                  enum:
                    - null
                    - invalid
                    - valid
                tirads_23:
                  type: number
                  maximum: 1.0
                  minimum: 0.0
                tirads_4:
                  type: number
                  maximum: 1.0
                  minimum: 0.0
                tirads_5:
                  type: number
                  maximum: 1.0
                  minimum: 0.0
              example:
                validation: "invalid"
                tirads_23: 0.67
                tirads_4: 0.23
                tirads_5: 0.89
            
      responses:
        '200':
          description: обновленный узел
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/node'
        '500':
          $ref: "#/components/responses/error"
        default:
          $ref: "#/components/responses/error"

    delete:
      summary: удалить узел
      description: сегменты узла будут также удалены
      tags:
        - uzi
      
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: узел удален
        '500':
          $ref: "#/components/responses/error"
        default:
          $ref: "#/components/responses/error"

  /uzi/nodes/{id}/segments:
    get:
      summary: получить сегменты узла
      tags:
        - uzi
      
      parameters:
        - name: id
          in: path
          required: true
          description: id узла
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: сегменты узла
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/segment'
        '500':
          $ref: "#/components/responses/error"
        default:
          $ref: "#/components/responses/error"

  /uzi/segment:
    post:
      summary: добавить новый сегмент
      tags:
        - uzi
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - image_id
                - node_id
                - contor
                - tirads_23
                - tirads_4
                - tirads_5
              properties:
                image_id:
                  type: string
                  format: uuid
                node_id:
                  type: string
                  format: uuid
                contor:
                  $ref: '#/components/schemas/contor'
                tirads_23:
                  type: number
                  maximum: 1.0
                  minimum: 0.0
                tirads_4:
                  type: number
                  maximum: 1.0
                  minimum: 0.0
                tirads_5:
                  type: number
                  maximum: 1.0
                  minimum: 0.0
      responses:
        '200':
          description: id сегмента
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/simpleUuid"
        '500':
          $ref: "#/components/responses/error"
        default:
          $ref: "#/components/responses/error"

  /uzi/segment/{id}:
    patch:
      summary: обновить сегмент
      tags:
        - uzi
      
      parameters:
        - name: id
          in: path
          required: true
          description: id сегмента
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                contor:
                  $ref: '#/components/schemas/contor'
                tirads_23:
                  type: number
                  maximum: 1.0
                  minimum: 0.0
                tirads_4:
                  type: number
                  maximum: 1.0
                  minimum: 0.0
                tirads_5:
                  type: number
                  maximum: 1.0
                  minimum: 0.0
              example:
                contor:
                  - x: 100
                    y: 100
                  - x: 200
                    y: 200
                tirads_23: 0.67
                tirads_4: 0.23
                tirads_5: 0.89
      responses:
        '200':
          description: обновленный узел
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/segment'
        '500':
          $ref: "#/components/responses/error"
        default:
          $ref: "#/components/responses/error"

    delete:
      summary: удалить сегмент
      description: если у узла не останется сегментов, он будет **удален**
      tags:
        - uzi
      
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: сегмент удален
        '500':
          $ref: "#/components/responses/error"
        default:
          $ref: "#/components/responses/error"
  
  /download/{uzi_id}/{image_id}:
    get:
      summary: получить кадр узи
      tags:
        - download
      
      parameters:
        - name: uzi_id
          in: path
          required: true
          description: id узи
          schema:
            type: string
            format: uuid
        - name: image_id
          in: path
          required: true
          description: id кадра
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: кадр узи
          content:
            image/png:
              schema:
                type: string
                format: binary
        '500':
          $ref: "#/components/responses/error"
        default:
          $ref: "#/components/responses/error"