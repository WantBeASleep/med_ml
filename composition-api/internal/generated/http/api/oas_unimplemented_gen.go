// Code generated by ogen, DO NOT EDIT.

package api

import (
	"context"

	ht "github.com/ogen-go/ogen/http"
)

// UnimplementedHandler is no-op Handler which returns http.ErrNotImplemented.
type UnimplementedHandler struct{}

var _ Handler = UnimplementedHandler{}

// MedCardDoctorDoctorIDPatientPatientIDGet implements GET /med/card/doctor/{doctor_id}/patient/{patient_id} operation.
//
// Получить карту пациента.
//
// GET /med/card/doctor/{doctor_id}/patient/{patient_id}
func (UnimplementedHandler) MedCardDoctorDoctorIDPatientPatientIDGet(ctx context.Context, params MedCardDoctorDoctorIDPatientPatientIDGetParams) (r MedCardDoctorDoctorIDPatientPatientIDGetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// MedCardDoctorDoctorIDPatientPatientIDPatch implements PATCH /med/card/doctor/{doctor_id}/patient/{patient_id} operation.
//
// Обновить карту пациента.
//
// PATCH /med/card/doctor/{doctor_id}/patient/{patient_id}
func (UnimplementedHandler) MedCardDoctorDoctorIDPatientPatientIDPatch(ctx context.Context, req *MedCardDoctorDoctorIDPatientPatientIDPatchReq, params MedCardDoctorDoctorIDPatientPatientIDPatchParams) (r MedCardDoctorDoctorIDPatientPatientIDPatchRes, _ error) {
	return r, ht.ErrNotImplemented
}

// MedCardPost implements POST /med/card operation.
//
// Создать карту пациента.
//
// POST /med/card
func (UnimplementedHandler) MedCardPost(ctx context.Context, req *Card) (r MedCardPostRes, _ error) {
	return r, ht.ErrNotImplemented
}

// MedDoctorIDGet implements GET /med/doctor/{id} operation.
//
// Получить врача.
//
// GET /med/doctor/{id}
func (UnimplementedHandler) MedDoctorIDGet(ctx context.Context, params MedDoctorIDGetParams) (r MedDoctorIDGetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// MedDoctorPost implements POST /med/doctor operation.
//
// Зарегистрировать врача.
//
// POST /med/doctor
func (UnimplementedHandler) MedDoctorPost(ctx context.Context, req *MedDoctorPostReq) (r MedDoctorPostRes, _ error) {
	return r, ht.ErrNotImplemented
}

// MedPatientIDGet implements GET /med/patient/{id} operation.
//
// Получить пациента.
//
// GET /med/patient/{id}
func (UnimplementedHandler) MedPatientIDGet(ctx context.Context, params MedPatientIDGetParams) (r MedPatientIDGetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// MedPatientIDPatch implements PATCH /med/patient/{id} operation.
//
// Обновить пациента.
//
// PATCH /med/patient/{id}
func (UnimplementedHandler) MedPatientIDPatch(ctx context.Context, req *MedPatientIDPatchReq, params MedPatientIDPatchParams) (r MedPatientIDPatchRes, _ error) {
	return r, ht.ErrNotImplemented
}

// MedPatientPost implements POST /med/patient operation.
//
// Зарегистрировать пациента.
//
// POST /med/patient
func (UnimplementedHandler) MedPatientPost(ctx context.Context, req *MedPatientPostReq) (r MedPatientPostRes, _ error) {
	return r, ht.ErrNotImplemented
}

// MedPatientsDoctorIDGet implements GET /med/patients/{doctor_id} operation.
//
// Получить пациентов врача.
//
// GET /med/patients/{doctor_id}
func (UnimplementedHandler) MedPatientsDoctorIDGet(ctx context.Context, params MedPatientsDoctorIDGetParams) (r MedPatientsDoctorIDGetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UziDevicePost implements POST /uzi/device operation.
//
// Добавить uzi аппарат.
//
// POST /uzi/device
func (UnimplementedHandler) UziDevicePost(ctx context.Context, req *UziDevicePostReq) (r UziDevicePostRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UziDevicesGet implements GET /uzi/devices operation.
//
// Получит список uzi апппапапратов.
//
// GET /uzi/devices
func (UnimplementedHandler) UziDevicesGet(ctx context.Context) (r UziDevicesGetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UziIDDelete implements DELETE /uzi/{id} operation.
//
// Удалить узи.
//
// DELETE /uzi/{id}
func (UnimplementedHandler) UziIDDelete(ctx context.Context, params UziIDDeleteParams) (r UziIDDeleteRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UziIDEchographicsGet implements GET /uzi/{id}/echographics operation.
//
// Получить эхографику uzi.
//
// GET /uzi/{id}/echographics
func (UnimplementedHandler) UziIDEchographicsGet(ctx context.Context, params UziIDEchographicsGetParams) (r UziIDEchographicsGetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UziIDEchographicsPatch implements PATCH /uzi/{id}/echographics operation.
//
// Обновить эхографику.
//
// PATCH /uzi/{id}/echographics
func (UnimplementedHandler) UziIDEchographicsPatch(ctx context.Context, req *Echographics, params UziIDEchographicsPatchParams) (r UziIDEchographicsPatchRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UziIDGet implements GET /uzi/{id} operation.
//
// Получить узи.
//
// GET /uzi/{id}
func (UnimplementedHandler) UziIDGet(ctx context.Context, params UziIDGetParams) (r UziIDGetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UziIDImagesGet implements GET /uzi/{id}/images operation.
//
// Получает списк изображений uzi.
//
// GET /uzi/{id}/images
func (UnimplementedHandler) UziIDImagesGet(ctx context.Context, params UziIDImagesGetParams) (r UziIDImagesGetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UziIDNodesGet implements GET /uzi/{id}/nodes operation.
//
// Получить все узлы узи.
//
// GET /uzi/{id}/nodes
func (UnimplementedHandler) UziIDNodesGet(ctx context.Context, params UziIDNodesGetParams) (r UziIDNodesGetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UziIDNodesSegmentsPost implements POST /uzi/{id}/nodes-segments operation.
//
// Добавить узел с сегментами.
//
// POST /uzi/{id}/nodes-segments
func (UnimplementedHandler) UziIDNodesSegmentsPost(ctx context.Context, req *UziIDNodesSegmentsPostReq, params UziIDNodesSegmentsPostParams) (r UziIDNodesSegmentsPostRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UziIDPatch implements PATCH /uzi/{id} operation.
//
// Обновить узи.
//
// PATCH /uzi/{id}
func (UnimplementedHandler) UziIDPatch(ctx context.Context, req *UziIDPatchReq, params UziIDPatchParams) (r UziIDPatchRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UziImageIDNodesSegmentsGet implements GET /uzi/image/{id}/nodes-segments operation.
//
// Получит узлы и сегменты на указанном изображении.
//
// GET /uzi/image/{id}/nodes-segments
func (UnimplementedHandler) UziImageIDNodesSegmentsGet(ctx context.Context, params UziImageIDNodesSegmentsGetParams) (r UziImageIDNodesSegmentsGetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UziNodesIDDelete implements DELETE /uzi/nodes/{id} operation.
//
// Сегменты узла будут также удалены.
//
// DELETE /uzi/nodes/{id}
func (UnimplementedHandler) UziNodesIDDelete(ctx context.Context, params UziNodesIDDeleteParams) (r UziNodesIDDeleteRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UziNodesIDPatch implements PATCH /uzi/nodes/{id} operation.
//
// Обновить узел.
//
// PATCH /uzi/nodes/{id}
func (UnimplementedHandler) UziNodesIDPatch(ctx context.Context, req *UziNodesIDPatchReq, params UziNodesIDPatchParams) (r UziNodesIDPatchRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UziNodesIDSegmentsGet implements GET /uzi/nodes/{id}/segments operation.
//
// Получить сегменты узла.
//
// GET /uzi/nodes/{id}/segments
func (UnimplementedHandler) UziNodesIDSegmentsGet(ctx context.Context, params UziNodesIDSegmentsGetParams) (r UziNodesIDSegmentsGetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UziPost implements POST /uzi operation.
//
// Загрузить узи на обработку.
//
// POST /uzi
func (UnimplementedHandler) UziPost(ctx context.Context, req *UziPostReq) (r UziPostRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UziSegmentIDDelete implements DELETE /uzi/segment/{id} operation.
//
// Если у узла не останется сегментов, он будет **удален**.
//
// DELETE /uzi/segment/{id}
func (UnimplementedHandler) UziSegmentIDDelete(ctx context.Context, params UziSegmentIDDeleteParams) (r UziSegmentIDDeleteRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UziSegmentIDPatch implements PATCH /uzi/segment/{id} operation.
//
// Обновить сегмент.
//
// PATCH /uzi/segment/{id}
func (UnimplementedHandler) UziSegmentIDPatch(ctx context.Context, req *UziSegmentIDPatchReq, params UziSegmentIDPatchParams) (r UziSegmentIDPatchRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UziSegmentPost implements POST /uzi/segment operation.
//
// Добавить новый сегмент.
//
// POST /uzi/segment
func (UnimplementedHandler) UziSegmentPost(ctx context.Context, req *UziSegmentPostReq) (r UziSegmentPostRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UzisAuthorAuthorIDGet implements GET /uzis/author/{author_id} operation.
//
// Получить узи по id автора.
//
// GET /uzis/author/{author_id}
func (UnimplementedHandler) UzisAuthorAuthorIDGet(ctx context.Context, params UzisAuthorAuthorIDGetParams) (r UzisAuthorAuthorIDGetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UzisExternalExternalIDGet implements GET /uzis/external/{external_id} operation.
//
// Получить узи по внешнему id.
//
// GET /uzis/external/{external_id}
func (UnimplementedHandler) UzisExternalExternalIDGet(ctx context.Context, params UzisExternalExternalIDGetParams) (r UzisExternalExternalIDGetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// NewError creates *ErrorStatusCode from error returned by handler.
//
// Used for common default response.
func (UnimplementedHandler) NewError(ctx context.Context, err error) (r *ErrorStatusCode) {
	r = new(ErrorStatusCode)
	return r
}
