version: '3'

<<<<<<< HEAD
tasks:
  generate:
    vars:
      VENDOR_PROTOGEN: '{{joinPath .TASKFILE_DIR "vendor.protogen"}}'

      PROTO_LIBS:
        sh: find {{.VENDOR_PROTOGEN}} -mindepth 1 -maxdepth 1 -type d | xargs echo

      SOURCE_FILES:
        sh: find {{joinPath .USER_WORKING_DIR "api"}} -type f -name "*.proto" | xargs echo

    cmds:
      - for: { var: SOURCE_FILES }
        cmd: >
              protoc
              -I {{dir .ITEM}}
              {{range $PROTO_LIB := splitList " " .PROTO_LIBS}}-I {{$PROTO_LIB}} {{end}}
              --go_out {{dir .ITEM}} --go_opt=paths=source_relative
              --go-grpc_out {{dir .ITEM}} --go-grpc_opt=paths=source_relative
              --grpc-gateway_out {{dir .ITEM}} --grpc-gateway_opt logtostderr=true,paths=source_relative
              --openapiv2_out {{dir .ITEM}} --openapiv2_opt=logtostderr=true
              {{.ITEM}}

  style:
    cmds:
      - go fmt {{.USER_WORKING_DIR}}/...
      - goimports -w {{.USER_WORKING_DIR}}

  build:
    deps: [generate]

    vars:
      SOURCE_FILES:
        sh: find {{joinPath .USER_WORKING_DIR "cmd"}} -mindepth 1 -maxdepth 2 -type f | xargs

    cmds:
      - task: style
      - for: { var: SOURCE_FILES }
        cmd: go build -v -o {{joinPath .USER_WORKING_DIR "bin" (base (dir .ITEM))}} {{.ITEM}}

  default:
    cmds:
      - task: build
      
=======
vars:
  proto_libs_path: '{{.proto_libs | default "../vendor.protogen"}}'
  proto_target: '{{.proto_target | default "api/medservice.proto"}}'
  proto_out: '{{.proto_out | default "api"}}'
  swagger_out: '{{.swagger_out | default "api"}}'

env:
  DB_PASS: 1234

tasks:
  generate:
    vars:
      LIBS_DIRS:
        sh: find {{.proto_libs_path}} -mindepth 1 -maxdepth 1 -type d | xargs echo
    cmds:
      - > 
        protoc
        -I {{dir .proto_target}}
        {{range $proto_lib := splitList " " .LIBS_DIRS}} -I {{$proto_lib}} {{end}}
        --go_out {{.proto_out}} --go_opt paths=source_relative
        --go-grpc_out {{.proto_out}} --go-grpc_opt paths=source_relative
        --grpc-gateway_out {{.proto_out}} --grpc-gateway_opt logtostderr=true,paths=source_relative
        --openapiv2_out {{.proto_out}} --openapiv2_opt logtostderr=true,allow_merge=true,merge_file_name={{trimSuffix (ext (base .proto_target)) (base .proto_target)}}
        {{.proto_target}}
    sources:
      - '{{.proto_target}}'

    generates:
      - '{{.proto_out}}/*.pb.go'
      - '{{.proto_out}}/*.pb.gw.go'
      - '{{.proto_out}}/*.swagger.json'

  build:
    cmds:
      - go fmt ./...
      - goimports -w .
      - go build -v -o bin/medservice cmd/main.go

  run:
      deps: [build]
      cmds:
        - ./bin/medservice


  default:
    cmds:
      - task: generate
>>>>>>> dac836a (added 3 medservices)
