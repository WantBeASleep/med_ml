{
  "swagger": "2.0",
  "info": {
    "title": "patient.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "MedPatient"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/med/patient/create": {
      "post": {
        "summary": "Добавить пациента",
        "description": "Принимает данные пациента и его карты.",
        "operationId": "MedPatient_AddPatient",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/medCreatePatientRequest"
            }
          }
        ],
        "tags": [
          "MedPatient"
        ]
      }
    },
    "/med/patient/info": {
      "get": {
        "summary": "Получить пациента и его карту",
        "description": "Получает id пациента. Возвращает пациента и его карту",
        "operationId": "MedPatient_GetPatientInfoByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/medPatientInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "MedPatient"
        ]
      }
    },
    "/med/patient/list": {
      "get": {
        "summary": "Получить список пациентов",
        "description": "Принимает пагинацию (Пока без нее). Возвращает список пациентов",
        "operationId": "MedPatient_GetPatientList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/medPatientListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "MedPatient"
        ]
      }
    },
    "/med/patient/update": {
      "put": {
        "summary": "UNIMPLEMENTED!!!",
        "description": "Получает id пациента. Возвращает пациента, карту, снимки\nrpc PatientShots (google.protobuf.Empty) returns (google.protobuf.Empty) {\n  option (google.api.http) = {\n    get: \"/med/patient/shots\"\n  };\n}\nОбновить данные пациента\n\nПолучает пациента, карту. Возвращает id",
        "operationId": "MedPatient_UpdatePatient",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/medPatientUpdateRequest"
            }
          }
        ],
        "tags": [
          "MedPatient"
        ]
      }
    }
  },
  "definitions": {
    "medCreatePatientRequest": {
      "type": "object",
      "properties": {
        "patient": {
          "$ref": "#/definitions/medPatient",
          "title": "PatientCard patient_card = 2 [json_name = \"patient_card\"];"
        }
      }
    },
    "medPatient": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "father_name": {
          "type": "string"
        },
        "medical_policy": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "is_active": {
          "type": "boolean"
        }
      }
    },
    "medPatientInfoResponse": {
      "type": "object",
      "properties": {
        "patient": {
          "$ref": "#/definitions/medPatient",
          "title": "PatientCard patient_card = 2 [json_name = \"patient_card\"];"
        }
      }
    },
    "medPatientListResponse": {
      "type": "object",
      "properties": {
        "patients": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/medPatient"
          }
        }
      }
    },
    "medPatientUpdateRequest": {
      "type": "object",
      "properties": {
        "patient": {
          "$ref": "#/definitions/medPatient",
          "title": "PatientCard patient_card = 2 [json_name = \"patient_card\"];"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
