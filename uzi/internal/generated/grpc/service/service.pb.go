// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.21.12
// source: proto/grpc/service.proto

package service

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UziStatus int32

const (
	UziStatus_UZI_STATUS_NEW       UziStatus = 0
	UziStatus_UZI_STATUS_PENDING   UziStatus = 1
	UziStatus_UZI_STATUS_COMPLETED UziStatus = 2
)

// Enum value maps for UziStatus.
var (
	UziStatus_name = map[int32]string{
		0: "UZI_STATUS_NEW",
		1: "UZI_STATUS_PENDING",
		2: "UZI_STATUS_COMPLETED",
	}
	UziStatus_value = map[string]int32{
		"UZI_STATUS_NEW":       0,
		"UZI_STATUS_PENDING":   1,
		"UZI_STATUS_COMPLETED": 2,
	}
)

func (x UziStatus) Enum() *UziStatus {
	p := new(UziStatus)
	*p = x
	return p
}

func (x UziStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UziStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_grpc_service_proto_enumTypes[0].Descriptor()
}

func (UziStatus) Type() protoreflect.EnumType {
	return &file_proto_grpc_service_proto_enumTypes[0]
}

func (x UziStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UziStatus.Descriptor instead.
func (UziStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{0}
}

type NodeValidation int32

const (
	NodeValidation_NODE_VALIDATION_NULL    NodeValidation = 0
	NodeValidation_NODE_VALIDATION_VALID   NodeValidation = 1
	NodeValidation_NODE_VALIDATION_INVALID NodeValidation = 2
)

// Enum value maps for NodeValidation.
var (
	NodeValidation_name = map[int32]string{
		0: "NODE_VALIDATION_NULL",
		1: "NODE_VALIDATION_VALID",
		2: "NODE_VALIDATION_INVALID",
	}
	NodeValidation_value = map[string]int32{
		"NODE_VALIDATION_NULL":    0,
		"NODE_VALIDATION_VALID":   1,
		"NODE_VALIDATION_INVALID": 2,
	}
)

func (x NodeValidation) Enum() *NodeValidation {
	p := new(NodeValidation)
	*p = x
	return p
}

func (x NodeValidation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeValidation) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_grpc_service_proto_enumTypes[1].Descriptor()
}

func (NodeValidation) Type() protoreflect.EnumType {
	return &file_proto_grpc_service_proto_enumTypes[1]
}

func (x NodeValidation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NodeValidation.Descriptor instead.
func (NodeValidation) EnumDescriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{1}
}

type UziProjection int32

const (
	UziProjection_UZI_PROJECTION_LONG  UziProjection = 0
	UziProjection_UZI_PROJECTION_CROSS UziProjection = 1
)

// Enum value maps for UziProjection.
var (
	UziProjection_name = map[int32]string{
		0: "UZI_PROJECTION_LONG",
		1: "UZI_PROJECTION_CROSS",
	}
	UziProjection_value = map[string]int32{
		"UZI_PROJECTION_LONG":  0,
		"UZI_PROJECTION_CROSS": 1,
	}
)

func (x UziProjection) Enum() *UziProjection {
	p := new(UziProjection)
	*p = x
	return p
}

func (x UziProjection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UziProjection) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_grpc_service_proto_enumTypes[2].Descriptor()
}

func (UziProjection) Type() protoreflect.EnumType {
	return &file_proto_grpc_service_proto_enumTypes[2]
}

func (x UziProjection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UziProjection.Descriptor instead.
func (UziProjection) EnumDescriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{2}
}

type Device struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,200,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Device) Reset() {
	*x = Device{}
	mi := &file_proto_grpc_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{0}
}

func (x *Device) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Device) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateDeviceIn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,100,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDeviceIn) Reset() {
	*x = CreateDeviceIn{}
	mi := &file_proto_grpc_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDeviceIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeviceIn) ProtoMessage() {}

func (x *CreateDeviceIn) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeviceIn.ProtoReflect.Descriptor instead.
func (*CreateDeviceIn) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateDeviceIn) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateDeviceOut struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDeviceOut) Reset() {
	*x = CreateDeviceOut{}
	mi := &file_proto_grpc_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDeviceOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeviceOut) ProtoMessage() {}

func (x *CreateDeviceOut) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeviceOut.ProtoReflect.Descriptor instead.
func (*CreateDeviceOut) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreateDeviceOut) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetDeviceListOut struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Devices       []*Device              `protobuf:"bytes,100,rep,name=devices,proto3" json:"devices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDeviceListOut) Reset() {
	*x = GetDeviceListOut{}
	mi := &file_proto_grpc_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeviceListOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceListOut) ProtoMessage() {}

func (x *GetDeviceListOut) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceListOut.ProtoReflect.Descriptor instead.
func (*GetDeviceListOut) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetDeviceListOut) GetDevices() []*Device {
	if x != nil {
		return x.Devices
	}
	return nil
}

type Uzi struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,100,opt,name=id,proto3" json:"id,omitempty"`
	Projection    UziProjection          `protobuf:"varint,200,opt,name=projection,proto3,enum=UziProjection" json:"projection,omitempty"`
	Checked       bool                   `protobuf:"varint,300,opt,name=checked,proto3" json:"checked,omitempty"`
	ExternalId    string                 `protobuf:"bytes,400,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	Author        string                 `protobuf:"bytes,500,opt,name=author,proto3" json:"author,omitempty"`
	DeviceId      int64                  `protobuf:"varint,600,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Status        UziStatus              `protobuf:"varint,700,opt,name=status,proto3,enum=UziStatus" json:"status,omitempty"`
	Description   *string                `protobuf:"bytes,800,opt,name=description,proto3,oneof" json:"description,omitempty"`
	CreateAt      string                 `protobuf:"bytes,1000,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Uzi) Reset() {
	*x = Uzi{}
	mi := &file_proto_grpc_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Uzi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Uzi) ProtoMessage() {}

func (x *Uzi) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Uzi.ProtoReflect.Descriptor instead.
func (*Uzi) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{4}
}

func (x *Uzi) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Uzi) GetProjection() UziProjection {
	if x != nil {
		return x.Projection
	}
	return UziProjection_UZI_PROJECTION_LONG
}

func (x *Uzi) GetChecked() bool {
	if x != nil {
		return x.Checked
	}
	return false
}

func (x *Uzi) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *Uzi) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *Uzi) GetDeviceId() int64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

func (x *Uzi) GetStatus() UziStatus {
	if x != nil {
		return x.Status
	}
	return UziStatus_UZI_STATUS_NEW
}

func (x *Uzi) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Uzi) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

type Echographic struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              string                 `protobuf:"bytes,100,opt,name=id,proto3" json:"id,omitempty"`
	Contors         *string                `protobuf:"bytes,200,opt,name=contors,proto3,oneof" json:"contors,omitempty"`
	LeftLobeLength  *float64               `protobuf:"fixed64,300,opt,name=left_lobe_length,json=leftLobeLength,proto3,oneof" json:"left_lobe_length,omitempty"`
	LeftLobeWidth   *float64               `protobuf:"fixed64,400,opt,name=left_lobe_width,json=leftLobeWidth,proto3,oneof" json:"left_lobe_width,omitempty"`
	LeftLobeThick   *float64               `protobuf:"fixed64,500,opt,name=left_lobe_thick,json=leftLobeThick,proto3,oneof" json:"left_lobe_thick,omitempty"`
	LeftLobeVolum   *float64               `protobuf:"fixed64,600,opt,name=left_lobe_volum,json=leftLobeVolum,proto3,oneof" json:"left_lobe_volum,omitempty"`
	RightLobeLength *float64               `protobuf:"fixed64,700,opt,name=right_lobe_length,json=rightLobeLength,proto3,oneof" json:"right_lobe_length,omitempty"`
	RightLobeWidth  *float64               `protobuf:"fixed64,800,opt,name=right_lobe_width,json=rightLobeWidth,proto3,oneof" json:"right_lobe_width,omitempty"`
	RightLobeThick  *float64               `protobuf:"fixed64,900,opt,name=right_lobe_thick,json=rightLobeThick,proto3,oneof" json:"right_lobe_thick,omitempty"`
	RightLobeVolum  *float64               `protobuf:"fixed64,1000,opt,name=right_lobe_volum,json=rightLobeVolum,proto3,oneof" json:"right_lobe_volum,omitempty"`
	GlandVolum      *float64               `protobuf:"fixed64,1100,opt,name=gland_volum,json=glandVolum,proto3,oneof" json:"gland_volum,omitempty"`
	Isthmus         *float64               `protobuf:"fixed64,1200,opt,name=isthmus,proto3,oneof" json:"isthmus,omitempty"`
	Struct          *string                `protobuf:"bytes,1300,opt,name=struct,proto3,oneof" json:"struct,omitempty"`
	Echogenicity    *string                `protobuf:"bytes,1400,opt,name=echogenicity,proto3,oneof" json:"echogenicity,omitempty"`
	RegionalLymph   *string                `protobuf:"bytes,1500,opt,name=regional_lymph,json=regionalLymph,proto3,oneof" json:"regional_lymph,omitempty"`
	Vascularization *string                `protobuf:"bytes,1600,opt,name=vascularization,proto3,oneof" json:"vascularization,omitempty"`
	Location        *string                `protobuf:"bytes,1700,opt,name=location,proto3,oneof" json:"location,omitempty"`
	Additional      *string                `protobuf:"bytes,1800,opt,name=additional,proto3,oneof" json:"additional,omitempty"`
	Conclusion      *string                `protobuf:"bytes,1900,opt,name=conclusion,proto3,oneof" json:"conclusion,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Echographic) Reset() {
	*x = Echographic{}
	mi := &file_proto_grpc_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Echographic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Echographic) ProtoMessage() {}

func (x *Echographic) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Echographic.ProtoReflect.Descriptor instead.
func (*Echographic) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{5}
}

func (x *Echographic) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Echographic) GetContors() string {
	if x != nil && x.Contors != nil {
		return *x.Contors
	}
	return ""
}

func (x *Echographic) GetLeftLobeLength() float64 {
	if x != nil && x.LeftLobeLength != nil {
		return *x.LeftLobeLength
	}
	return 0
}

func (x *Echographic) GetLeftLobeWidth() float64 {
	if x != nil && x.LeftLobeWidth != nil {
		return *x.LeftLobeWidth
	}
	return 0
}

func (x *Echographic) GetLeftLobeThick() float64 {
	if x != nil && x.LeftLobeThick != nil {
		return *x.LeftLobeThick
	}
	return 0
}

func (x *Echographic) GetLeftLobeVolum() float64 {
	if x != nil && x.LeftLobeVolum != nil {
		return *x.LeftLobeVolum
	}
	return 0
}

func (x *Echographic) GetRightLobeLength() float64 {
	if x != nil && x.RightLobeLength != nil {
		return *x.RightLobeLength
	}
	return 0
}

func (x *Echographic) GetRightLobeWidth() float64 {
	if x != nil && x.RightLobeWidth != nil {
		return *x.RightLobeWidth
	}
	return 0
}

func (x *Echographic) GetRightLobeThick() float64 {
	if x != nil && x.RightLobeThick != nil {
		return *x.RightLobeThick
	}
	return 0
}

func (x *Echographic) GetRightLobeVolum() float64 {
	if x != nil && x.RightLobeVolum != nil {
		return *x.RightLobeVolum
	}
	return 0
}

func (x *Echographic) GetGlandVolum() float64 {
	if x != nil && x.GlandVolum != nil {
		return *x.GlandVolum
	}
	return 0
}

func (x *Echographic) GetIsthmus() float64 {
	if x != nil && x.Isthmus != nil {
		return *x.Isthmus
	}
	return 0
}

func (x *Echographic) GetStruct() string {
	if x != nil && x.Struct != nil {
		return *x.Struct
	}
	return ""
}

func (x *Echographic) GetEchogenicity() string {
	if x != nil && x.Echogenicity != nil {
		return *x.Echogenicity
	}
	return ""
}

func (x *Echographic) GetRegionalLymph() string {
	if x != nil && x.RegionalLymph != nil {
		return *x.RegionalLymph
	}
	return ""
}

func (x *Echographic) GetVascularization() string {
	if x != nil && x.Vascularization != nil {
		return *x.Vascularization
	}
	return ""
}

func (x *Echographic) GetLocation() string {
	if x != nil && x.Location != nil {
		return *x.Location
	}
	return ""
}

func (x *Echographic) GetAdditional() string {
	if x != nil && x.Additional != nil {
		return *x.Additional
	}
	return ""
}

func (x *Echographic) GetConclusion() string {
	if x != nil && x.Conclusion != nil {
		return *x.Conclusion
	}
	return ""
}

type CreateUziIn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Projection    UziProjection          `protobuf:"varint,100,opt,name=projection,proto3,enum=UziProjection" json:"projection,omitempty"`
	ExternalId    string                 `protobuf:"bytes,200,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	Author        string                 `protobuf:"bytes,300,opt,name=author,proto3" json:"author,omitempty"`
	DeviceId      int64                  `protobuf:"varint,400,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Description   *string                `protobuf:"bytes,500,opt,name=description,proto3,oneof" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUziIn) Reset() {
	*x = CreateUziIn{}
	mi := &file_proto_grpc_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUziIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUziIn) ProtoMessage() {}

func (x *CreateUziIn) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUziIn.ProtoReflect.Descriptor instead.
func (*CreateUziIn) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{6}
}

func (x *CreateUziIn) GetProjection() UziProjection {
	if x != nil {
		return x.Projection
	}
	return UziProjection_UZI_PROJECTION_LONG
}

func (x *CreateUziIn) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *CreateUziIn) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *CreateUziIn) GetDeviceId() int64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

func (x *CreateUziIn) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type CreateUziOut struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,100,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUziOut) Reset() {
	*x = CreateUziOut{}
	mi := &file_proto_grpc_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUziOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUziOut) ProtoMessage() {}

func (x *CreateUziOut) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUziOut.ProtoReflect.Descriptor instead.
func (*CreateUziOut) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{7}
}

func (x *CreateUziOut) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetUziByIdIn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,100,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUziByIdIn) Reset() {
	*x = GetUziByIdIn{}
	mi := &file_proto_grpc_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUziByIdIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUziByIdIn) ProtoMessage() {}

func (x *GetUziByIdIn) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUziByIdIn.ProtoReflect.Descriptor instead.
func (*GetUziByIdIn) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetUziByIdIn) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetUziByIdOut struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uzi           *Uzi                   `protobuf:"bytes,100,opt,name=uzi,proto3" json:"uzi,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUziByIdOut) Reset() {
	*x = GetUziByIdOut{}
	mi := &file_proto_grpc_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUziByIdOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUziByIdOut) ProtoMessage() {}

func (x *GetUziByIdOut) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUziByIdOut.ProtoReflect.Descriptor instead.
func (*GetUziByIdOut) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetUziByIdOut) GetUzi() *Uzi {
	if x != nil {
		return x.Uzi
	}
	return nil
}

type GetUzisByExternalIdIn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExternalId    string                 `protobuf:"bytes,100,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUzisByExternalIdIn) Reset() {
	*x = GetUzisByExternalIdIn{}
	mi := &file_proto_grpc_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUzisByExternalIdIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUzisByExternalIdIn) ProtoMessage() {}

func (x *GetUzisByExternalIdIn) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUzisByExternalIdIn.ProtoReflect.Descriptor instead.
func (*GetUzisByExternalIdIn) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetUzisByExternalIdIn) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

type GetUzisByExternalIdOut struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uzis          []*Uzi                 `protobuf:"bytes,100,rep,name=uzis,proto3" json:"uzis,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUzisByExternalIdOut) Reset() {
	*x = GetUzisByExternalIdOut{}
	mi := &file_proto_grpc_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUzisByExternalIdOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUzisByExternalIdOut) ProtoMessage() {}

func (x *GetUzisByExternalIdOut) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUzisByExternalIdOut.ProtoReflect.Descriptor instead.
func (*GetUzisByExternalIdOut) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetUzisByExternalIdOut) GetUzis() []*Uzi {
	if x != nil {
		return x.Uzis
	}
	return nil
}

type GetUzisByAuthorIn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Author        string                 `protobuf:"bytes,100,opt,name=author,proto3" json:"author,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUzisByAuthorIn) Reset() {
	*x = GetUzisByAuthorIn{}
	mi := &file_proto_grpc_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUzisByAuthorIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUzisByAuthorIn) ProtoMessage() {}

func (x *GetUzisByAuthorIn) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUzisByAuthorIn.ProtoReflect.Descriptor instead.
func (*GetUzisByAuthorIn) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetUzisByAuthorIn) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

type GetUzisByAuthorOut struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uzis          []*Uzi                 `protobuf:"bytes,100,rep,name=uzis,proto3" json:"uzis,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUzisByAuthorOut) Reset() {
	*x = GetUzisByAuthorOut{}
	mi := &file_proto_grpc_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUzisByAuthorOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUzisByAuthorOut) ProtoMessage() {}

func (x *GetUzisByAuthorOut) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUzisByAuthorOut.ProtoReflect.Descriptor instead.
func (*GetUzisByAuthorOut) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetUzisByAuthorOut) GetUzis() []*Uzi {
	if x != nil {
		return x.Uzis
	}
	return nil
}

type GetEchographicByUziIdIn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UziId         string                 `protobuf:"bytes,100,opt,name=uzi_id,json=uziId,proto3" json:"uzi_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEchographicByUziIdIn) Reset() {
	*x = GetEchographicByUziIdIn{}
	mi := &file_proto_grpc_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEchographicByUziIdIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEchographicByUziIdIn) ProtoMessage() {}

func (x *GetEchographicByUziIdIn) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEchographicByUziIdIn.ProtoReflect.Descriptor instead.
func (*GetEchographicByUziIdIn) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{14}
}

func (x *GetEchographicByUziIdIn) GetUziId() string {
	if x != nil {
		return x.UziId
	}
	return ""
}

type GetEchographicByUziIdOut struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Echographic   *Echographic           `protobuf:"bytes,100,opt,name=echographic,proto3" json:"echographic,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEchographicByUziIdOut) Reset() {
	*x = GetEchographicByUziIdOut{}
	mi := &file_proto_grpc_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEchographicByUziIdOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEchographicByUziIdOut) ProtoMessage() {}

func (x *GetEchographicByUziIdOut) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEchographicByUziIdOut.ProtoReflect.Descriptor instead.
func (*GetEchographicByUziIdOut) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{15}
}

func (x *GetEchographicByUziIdOut) GetEchographic() *Echographic {
	if x != nil {
		return x.Echographic
	}
	return nil
}

type UpdateUziIn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,100,opt,name=id,proto3" json:"id,omitempty"`
	Projection    *UziProjection         `protobuf:"varint,200,opt,name=projection,proto3,enum=UziProjection,oneof" json:"projection,omitempty"`
	Checked       *bool                  `protobuf:"varint,300,opt,name=checked,proto3,oneof" json:"checked,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUziIn) Reset() {
	*x = UpdateUziIn{}
	mi := &file_proto_grpc_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUziIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUziIn) ProtoMessage() {}

func (x *UpdateUziIn) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUziIn.ProtoReflect.Descriptor instead.
func (*UpdateUziIn) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateUziIn) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateUziIn) GetProjection() UziProjection {
	if x != nil && x.Projection != nil {
		return *x.Projection
	}
	return UziProjection_UZI_PROJECTION_LONG
}

func (x *UpdateUziIn) GetChecked() bool {
	if x != nil && x.Checked != nil {
		return *x.Checked
	}
	return false
}

type UpdateUziOut struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uzi           *Uzi                   `protobuf:"bytes,100,opt,name=uzi,proto3" json:"uzi,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUziOut) Reset() {
	*x = UpdateUziOut{}
	mi := &file_proto_grpc_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUziOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUziOut) ProtoMessage() {}

func (x *UpdateUziOut) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUziOut.ProtoReflect.Descriptor instead.
func (*UpdateUziOut) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateUziOut) GetUzi() *Uzi {
	if x != nil {
		return x.Uzi
	}
	return nil
}

type UpdateEchographicIn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Echographic   *Echographic           `protobuf:"bytes,100,opt,name=echographic,proto3" json:"echographic,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateEchographicIn) Reset() {
	*x = UpdateEchographicIn{}
	mi := &file_proto_grpc_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateEchographicIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEchographicIn) ProtoMessage() {}

func (x *UpdateEchographicIn) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEchographicIn.ProtoReflect.Descriptor instead.
func (*UpdateEchographicIn) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateEchographicIn) GetEchographic() *Echographic {
	if x != nil {
		return x.Echographic
	}
	return nil
}

type UpdateEchographicOut struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Echographic   *Echographic           `protobuf:"bytes,100,opt,name=echographic,proto3" json:"echographic,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateEchographicOut) Reset() {
	*x = UpdateEchographicOut{}
	mi := &file_proto_grpc_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateEchographicOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEchographicOut) ProtoMessage() {}

func (x *UpdateEchographicOut) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEchographicOut.ProtoReflect.Descriptor instead.
func (*UpdateEchographicOut) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateEchographicOut) GetEchographic() *Echographic {
	if x != nil {
		return x.Echographic
	}
	return nil
}

type DeleteUziIn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,100,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteUziIn) Reset() {
	*x = DeleteUziIn{}
	mi := &file_proto_grpc_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteUziIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUziIn) ProtoMessage() {}

func (x *DeleteUziIn) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUziIn.ProtoReflect.Descriptor instead.
func (*DeleteUziIn) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteUziIn) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Image struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,100,opt,name=id,proto3" json:"id,omitempty"`
	UziId         string                 `protobuf:"bytes,200,opt,name=uzi_id,json=uziId,proto3" json:"uzi_id,omitempty"`
	Page          int64                  `protobuf:"varint,300,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Image) Reset() {
	*x = Image{}
	mi := &file_proto_grpc_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{21}
}

func (x *Image) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Image) GetUziId() string {
	if x != nil {
		return x.UziId
	}
	return ""
}

func (x *Image) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetImagesByUziIdIn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UziId         string                 `protobuf:"bytes,100,opt,name=uzi_id,json=uziId,proto3" json:"uzi_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetImagesByUziIdIn) Reset() {
	*x = GetImagesByUziIdIn{}
	mi := &file_proto_grpc_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetImagesByUziIdIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetImagesByUziIdIn) ProtoMessage() {}

func (x *GetImagesByUziIdIn) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetImagesByUziIdIn.ProtoReflect.Descriptor instead.
func (*GetImagesByUziIdIn) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{22}
}

func (x *GetImagesByUziIdIn) GetUziId() string {
	if x != nil {
		return x.UziId
	}
	return ""
}

type GetImagesByUziIdOut struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Images        []*Image               `protobuf:"bytes,100,rep,name=images,proto3" json:"images,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetImagesByUziIdOut) Reset() {
	*x = GetImagesByUziIdOut{}
	mi := &file_proto_grpc_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetImagesByUziIdOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetImagesByUziIdOut) ProtoMessage() {}

func (x *GetImagesByUziIdOut) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetImagesByUziIdOut.ProtoReflect.Descriptor instead.
func (*GetImagesByUziIdOut) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{23}
}

func (x *GetImagesByUziIdOut) GetImages() []*Image {
	if x != nil {
		return x.Images
	}
	return nil
}

type Node struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,100,opt,name=id,proto3" json:"id,omitempty"`
	Ai            bool                   `protobuf:"varint,200,opt,name=ai,proto3" json:"ai,omitempty"`
	Validation    *NodeValidation        `protobuf:"varint,300,opt,name=validation,proto3,enum=NodeValidation,oneof" json:"validation,omitempty"`
	UziId         string                 `protobuf:"bytes,400,opt,name=uzi_id,json=uziId,proto3" json:"uzi_id,omitempty"`
	Tirads_23     float64                `protobuf:"fixed64,500,opt,name=tirads_23,json=tirads23,proto3" json:"tirads_23,omitempty"`
	Tirads_4      float64                `protobuf:"fixed64,600,opt,name=tirads_4,json=tirads4,proto3" json:"tirads_4,omitempty"`
	Tirads_5      float64                `protobuf:"fixed64,700,opt,name=tirads_5,json=tirads5,proto3" json:"tirads_5,omitempty"`
	Description   *string                `protobuf:"bytes,800,opt,name=description,proto3,oneof" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Node) Reset() {
	*x = Node{}
	mi := &file_proto_grpc_service_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{24}
}

func (x *Node) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Node) GetAi() bool {
	if x != nil {
		return x.Ai
	}
	return false
}

func (x *Node) GetValidation() NodeValidation {
	if x != nil && x.Validation != nil {
		return *x.Validation
	}
	return NodeValidation_NODE_VALIDATION_NULL
}

func (x *Node) GetUziId() string {
	if x != nil {
		return x.UziId
	}
	return ""
}

func (x *Node) GetTirads_23() float64 {
	if x != nil {
		return x.Tirads_23
	}
	return 0
}

func (x *Node) GetTirads_4() float64 {
	if x != nil {
		return x.Tirads_4
	}
	return 0
}

func (x *Node) GetTirads_5() float64 {
	if x != nil {
		return x.Tirads_5
	}
	return 0
}

func (x *Node) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type GetNodesByUziIdIn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UziId         string                 `protobuf:"bytes,100,opt,name=uzi_id,json=uziId,proto3" json:"uzi_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodesByUziIdIn) Reset() {
	*x = GetNodesByUziIdIn{}
	mi := &file_proto_grpc_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodesByUziIdIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodesByUziIdIn) ProtoMessage() {}

func (x *GetNodesByUziIdIn) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodesByUziIdIn.ProtoReflect.Descriptor instead.
func (*GetNodesByUziIdIn) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{25}
}

func (x *GetNodesByUziIdIn) GetUziId() string {
	if x != nil {
		return x.UziId
	}
	return ""
}

type GetNodesByUziIdOut struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*Node                `protobuf:"bytes,100,rep,name=nodes,proto3" json:"nodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodesByUziIdOut) Reset() {
	*x = GetNodesByUziIdOut{}
	mi := &file_proto_grpc_service_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodesByUziIdOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodesByUziIdOut) ProtoMessage() {}

func (x *GetNodesByUziIdOut) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodesByUziIdOut.ProtoReflect.Descriptor instead.
func (*GetNodesByUziIdOut) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{26}
}

func (x *GetNodesByUziIdOut) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type UpdateNodeIn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,100,opt,name=id,proto3" json:"id,omitempty"`
	Validation    *NodeValidation        `protobuf:"varint,200,opt,name=validation,proto3,enum=NodeValidation,oneof" json:"validation,omitempty"`
	Tirads_23     *float64               `protobuf:"fixed64,300,opt,name=tirads_23,json=tirads23,proto3,oneof" json:"tirads_23,omitempty"`
	Tirads_4      *float64               `protobuf:"fixed64,400,opt,name=tirads_4,json=tirads4,proto3,oneof" json:"tirads_4,omitempty"`
	Tirads_5      *float64               `protobuf:"fixed64,500,opt,name=tirads_5,json=tirads5,proto3,oneof" json:"tirads_5,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNodeIn) Reset() {
	*x = UpdateNodeIn{}
	mi := &file_proto_grpc_service_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNodeIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNodeIn) ProtoMessage() {}

func (x *UpdateNodeIn) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNodeIn.ProtoReflect.Descriptor instead.
func (*UpdateNodeIn) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{27}
}

func (x *UpdateNodeIn) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateNodeIn) GetValidation() NodeValidation {
	if x != nil && x.Validation != nil {
		return *x.Validation
	}
	return NodeValidation_NODE_VALIDATION_NULL
}

func (x *UpdateNodeIn) GetTirads_23() float64 {
	if x != nil && x.Tirads_23 != nil {
		return *x.Tirads_23
	}
	return 0
}

func (x *UpdateNodeIn) GetTirads_4() float64 {
	if x != nil && x.Tirads_4 != nil {
		return *x.Tirads_4
	}
	return 0
}

func (x *UpdateNodeIn) GetTirads_5() float64 {
	if x != nil && x.Tirads_5 != nil {
		return *x.Tirads_5
	}
	return 0
}

type UpdateNodeOut struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Node          *Node                  `protobuf:"bytes,100,opt,name=node,proto3" json:"node,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNodeOut) Reset() {
	*x = UpdateNodeOut{}
	mi := &file_proto_grpc_service_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNodeOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNodeOut) ProtoMessage() {}

func (x *UpdateNodeOut) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNodeOut.ProtoReflect.Descriptor instead.
func (*UpdateNodeOut) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{28}
}

func (x *UpdateNodeOut) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

type Segment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,100,opt,name=id,proto3" json:"id,omitempty"`
	ImageId       string                 `protobuf:"bytes,200,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	NodeId        string                 `protobuf:"bytes,300,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Contor        []byte                 `protobuf:"bytes,400,opt,name=contor,proto3" json:"contor,omitempty"`
	Ai            bool                   `protobuf:"varint,500,opt,name=ai,proto3" json:"ai,omitempty"`
	Tirads_23     float64                `protobuf:"fixed64,600,opt,name=tirads_23,json=tirads23,proto3" json:"tirads_23,omitempty"`
	Tirads_4      float64                `protobuf:"fixed64,700,opt,name=tirads_4,json=tirads4,proto3" json:"tirads_4,omitempty"`
	Tirads_5      float64                `protobuf:"fixed64,800,opt,name=tirads_5,json=tirads5,proto3" json:"tirads_5,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Segment) Reset() {
	*x = Segment{}
	mi := &file_proto_grpc_service_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Segment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Segment) ProtoMessage() {}

func (x *Segment) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Segment.ProtoReflect.Descriptor instead.
func (*Segment) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{29}
}

func (x *Segment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Segment) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *Segment) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *Segment) GetContor() []byte {
	if x != nil {
		return x.Contor
	}
	return nil
}

func (x *Segment) GetAi() bool {
	if x != nil {
		return x.Ai
	}
	return false
}

func (x *Segment) GetTirads_23() float64 {
	if x != nil {
		return x.Tirads_23
	}
	return 0
}

func (x *Segment) GetTirads_4() float64 {
	if x != nil {
		return x.Tirads_4
	}
	return 0
}

func (x *Segment) GetTirads_5() float64 {
	if x != nil {
		return x.Tirads_5
	}
	return 0
}

type CreateSegmentIn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ImageId       string                 `protobuf:"bytes,100,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	NodeId        string                 `protobuf:"bytes,200,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Contor        []byte                 `protobuf:"bytes,300,opt,name=contor,proto3" json:"contor,omitempty"`
	Tirads_23     float64                `protobuf:"fixed64,400,opt,name=tirads_23,json=tirads23,proto3" json:"tirads_23,omitempty"`
	Tirads_4      float64                `protobuf:"fixed64,500,opt,name=tirads_4,json=tirads4,proto3" json:"tirads_4,omitempty"`
	Tirads_5      float64                `protobuf:"fixed64,600,opt,name=tirads_5,json=tirads5,proto3" json:"tirads_5,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSegmentIn) Reset() {
	*x = CreateSegmentIn{}
	mi := &file_proto_grpc_service_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSegmentIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSegmentIn) ProtoMessage() {}

func (x *CreateSegmentIn) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSegmentIn.ProtoReflect.Descriptor instead.
func (*CreateSegmentIn) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{30}
}

func (x *CreateSegmentIn) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *CreateSegmentIn) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *CreateSegmentIn) GetContor() []byte {
	if x != nil {
		return x.Contor
	}
	return nil
}

func (x *CreateSegmentIn) GetTirads_23() float64 {
	if x != nil {
		return x.Tirads_23
	}
	return 0
}

func (x *CreateSegmentIn) GetTirads_4() float64 {
	if x != nil {
		return x.Tirads_4
	}
	return 0
}

func (x *CreateSegmentIn) GetTirads_5() float64 {
	if x != nil {
		return x.Tirads_5
	}
	return 0
}

type CreateSegmentOut struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,100,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSegmentOut) Reset() {
	*x = CreateSegmentOut{}
	mi := &file_proto_grpc_service_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSegmentOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSegmentOut) ProtoMessage() {}

func (x *CreateSegmentOut) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSegmentOut.ProtoReflect.Descriptor instead.
func (*CreateSegmentOut) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{31}
}

func (x *CreateSegmentOut) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetSegmentsByNodeIdIn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,100,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSegmentsByNodeIdIn) Reset() {
	*x = GetSegmentsByNodeIdIn{}
	mi := &file_proto_grpc_service_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSegmentsByNodeIdIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSegmentsByNodeIdIn) ProtoMessage() {}

func (x *GetSegmentsByNodeIdIn) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSegmentsByNodeIdIn.ProtoReflect.Descriptor instead.
func (*GetSegmentsByNodeIdIn) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{32}
}

func (x *GetSegmentsByNodeIdIn) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type GetSegmentsByNodeIdOut struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Segments      []*Segment             `protobuf:"bytes,100,rep,name=segments,proto3" json:"segments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSegmentsByNodeIdOut) Reset() {
	*x = GetSegmentsByNodeIdOut{}
	mi := &file_proto_grpc_service_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSegmentsByNodeIdOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSegmentsByNodeIdOut) ProtoMessage() {}

func (x *GetSegmentsByNodeIdOut) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSegmentsByNodeIdOut.ProtoReflect.Descriptor instead.
func (*GetSegmentsByNodeIdOut) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{33}
}

func (x *GetSegmentsByNodeIdOut) GetSegments() []*Segment {
	if x != nil {
		return x.Segments
	}
	return nil
}

type UpdateSegmentIn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,100,opt,name=id,proto3" json:"id,omitempty"`
	Contor        []byte                 `protobuf:"bytes,200,opt,name=contor,proto3,oneof" json:"contor,omitempty"`
	Tirads_23     *float64               `protobuf:"fixed64,300,opt,name=tirads_23,json=tirads23,proto3,oneof" json:"tirads_23,omitempty"`
	Tirads_4      *float64               `protobuf:"fixed64,400,opt,name=tirads_4,json=tirads4,proto3,oneof" json:"tirads_4,omitempty"`
	Tirads_5      *float64               `protobuf:"fixed64,500,opt,name=tirads_5,json=tirads5,proto3,oneof" json:"tirads_5,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSegmentIn) Reset() {
	*x = UpdateSegmentIn{}
	mi := &file_proto_grpc_service_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSegmentIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSegmentIn) ProtoMessage() {}

func (x *UpdateSegmentIn) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSegmentIn.ProtoReflect.Descriptor instead.
func (*UpdateSegmentIn) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{34}
}

func (x *UpdateSegmentIn) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateSegmentIn) GetContor() []byte {
	if x != nil {
		return x.Contor
	}
	return nil
}

func (x *UpdateSegmentIn) GetTirads_23() float64 {
	if x != nil && x.Tirads_23 != nil {
		return *x.Tirads_23
	}
	return 0
}

func (x *UpdateSegmentIn) GetTirads_4() float64 {
	if x != nil && x.Tirads_4 != nil {
		return *x.Tirads_4
	}
	return 0
}

func (x *UpdateSegmentIn) GetTirads_5() float64 {
	if x != nil && x.Tirads_5 != nil {
		return *x.Tirads_5
	}
	return 0
}

type UpdateSegmentOut struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Segment       *Segment               `protobuf:"bytes,100,opt,name=segment,proto3" json:"segment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSegmentOut) Reset() {
	*x = UpdateSegmentOut{}
	mi := &file_proto_grpc_service_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSegmentOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSegmentOut) ProtoMessage() {}

func (x *UpdateSegmentOut) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSegmentOut.ProtoReflect.Descriptor instead.
func (*UpdateSegmentOut) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{35}
}

func (x *UpdateSegmentOut) GetSegment() *Segment {
	if x != nil {
		return x.Segment
	}
	return nil
}

type CreateNodeWithSegmentsIn struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	UziId         string                              `protobuf:"bytes,100,opt,name=uzi_id,json=uziId,proto3" json:"uzi_id,omitempty"`
	Node          *CreateNodeWithSegmentsIn_Node      `protobuf:"bytes,200,opt,name=node,proto3" json:"node,omitempty"`
	Segments      []*CreateNodeWithSegmentsIn_Segment `protobuf:"bytes,300,rep,name=segments,proto3" json:"segments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNodeWithSegmentsIn) Reset() {
	*x = CreateNodeWithSegmentsIn{}
	mi := &file_proto_grpc_service_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNodeWithSegmentsIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNodeWithSegmentsIn) ProtoMessage() {}

func (x *CreateNodeWithSegmentsIn) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNodeWithSegmentsIn.ProtoReflect.Descriptor instead.
func (*CreateNodeWithSegmentsIn) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{36}
}

func (x *CreateNodeWithSegmentsIn) GetUziId() string {
	if x != nil {
		return x.UziId
	}
	return ""
}

func (x *CreateNodeWithSegmentsIn) GetNode() *CreateNodeWithSegmentsIn_Node {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *CreateNodeWithSegmentsIn) GetSegments() []*CreateNodeWithSegmentsIn_Segment {
	if x != nil {
		return x.Segments
	}
	return nil
}

type CreateNodeWithSegmentsOut struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,100,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	SegmentIds    []string               `protobuf:"bytes,200,rep,name=segment_ids,json=segmentIds,proto3" json:"segment_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNodeWithSegmentsOut) Reset() {
	*x = CreateNodeWithSegmentsOut{}
	mi := &file_proto_grpc_service_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNodeWithSegmentsOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNodeWithSegmentsOut) ProtoMessage() {}

func (x *CreateNodeWithSegmentsOut) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNodeWithSegmentsOut.ProtoReflect.Descriptor instead.
func (*CreateNodeWithSegmentsOut) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{37}
}

func (x *CreateNodeWithSegmentsOut) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *CreateNodeWithSegmentsOut) GetSegmentIds() []string {
	if x != nil {
		return x.SegmentIds
	}
	return nil
}

type GetNodesWithSegmentsByImageIdIn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,100,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodesWithSegmentsByImageIdIn) Reset() {
	*x = GetNodesWithSegmentsByImageIdIn{}
	mi := &file_proto_grpc_service_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodesWithSegmentsByImageIdIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodesWithSegmentsByImageIdIn) ProtoMessage() {}

func (x *GetNodesWithSegmentsByImageIdIn) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodesWithSegmentsByImageIdIn.ProtoReflect.Descriptor instead.
func (*GetNodesWithSegmentsByImageIdIn) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{38}
}

func (x *GetNodesWithSegmentsByImageIdIn) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetNodesWithSegmentsByImageIdOut struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*Node                `protobuf:"bytes,100,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Segments      []*Segment             `protobuf:"bytes,200,rep,name=segments,proto3" json:"segments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodesWithSegmentsByImageIdOut) Reset() {
	*x = GetNodesWithSegmentsByImageIdOut{}
	mi := &file_proto_grpc_service_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodesWithSegmentsByImageIdOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodesWithSegmentsByImageIdOut) ProtoMessage() {}

func (x *GetNodesWithSegmentsByImageIdOut) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodesWithSegmentsByImageIdOut.ProtoReflect.Descriptor instead.
func (*GetNodesWithSegmentsByImageIdOut) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{39}
}

func (x *GetNodesWithSegmentsByImageIdOut) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *GetNodesWithSegmentsByImageIdOut) GetSegments() []*Segment {
	if x != nil {
		return x.Segments
	}
	return nil
}

type DeleteNodeIn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,100,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNodeIn) Reset() {
	*x = DeleteNodeIn{}
	mi := &file_proto_grpc_service_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNodeIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNodeIn) ProtoMessage() {}

func (x *DeleteNodeIn) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNodeIn.ProtoReflect.Descriptor instead.
func (*DeleteNodeIn) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{40}
}

func (x *DeleteNodeIn) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteSegmentIn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,100,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSegmentIn) Reset() {
	*x = DeleteSegmentIn{}
	mi := &file_proto_grpc_service_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSegmentIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSegmentIn) ProtoMessage() {}

func (x *DeleteSegmentIn) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSegmentIn.ProtoReflect.Descriptor instead.
func (*DeleteSegmentIn) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{41}
}

func (x *DeleteSegmentIn) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateNodeWithSegmentsIn_Node struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tirads_23     float64                `protobuf:"fixed64,200,opt,name=tirads_23,json=tirads23,proto3" json:"tirads_23,omitempty"`
	Tirads_4      float64                `protobuf:"fixed64,300,opt,name=tirads_4,json=tirads4,proto3" json:"tirads_4,omitempty"`
	Tirads_5      float64                `protobuf:"fixed64,400,opt,name=tirads_5,json=tirads5,proto3" json:"tirads_5,omitempty"`
	Description   *string                `protobuf:"bytes,500,opt,name=description,proto3,oneof" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNodeWithSegmentsIn_Node) Reset() {
	*x = CreateNodeWithSegmentsIn_Node{}
	mi := &file_proto_grpc_service_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNodeWithSegmentsIn_Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNodeWithSegmentsIn_Node) ProtoMessage() {}

func (x *CreateNodeWithSegmentsIn_Node) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNodeWithSegmentsIn_Node.ProtoReflect.Descriptor instead.
func (*CreateNodeWithSegmentsIn_Node) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{36, 0}
}

func (x *CreateNodeWithSegmentsIn_Node) GetTirads_23() float64 {
	if x != nil {
		return x.Tirads_23
	}
	return 0
}

func (x *CreateNodeWithSegmentsIn_Node) GetTirads_4() float64 {
	if x != nil {
		return x.Tirads_4
	}
	return 0
}

func (x *CreateNodeWithSegmentsIn_Node) GetTirads_5() float64 {
	if x != nil {
		return x.Tirads_5
	}
	return 0
}

func (x *CreateNodeWithSegmentsIn_Node) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type CreateNodeWithSegmentsIn_Segment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ImageId       string                 `protobuf:"bytes,100,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	Contor        []byte                 `protobuf:"bytes,200,opt,name=contor,proto3" json:"contor,omitempty"`
	Tirads_23     float64                `protobuf:"fixed64,300,opt,name=tirads_23,json=tirads23,proto3" json:"tirads_23,omitempty"`
	Tirads_4      float64                `protobuf:"fixed64,400,opt,name=tirads_4,json=tirads4,proto3" json:"tirads_4,omitempty"`
	Tirads_5      float64                `protobuf:"fixed64,500,opt,name=tirads_5,json=tirads5,proto3" json:"tirads_5,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNodeWithSegmentsIn_Segment) Reset() {
	*x = CreateNodeWithSegmentsIn_Segment{}
	mi := &file_proto_grpc_service_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNodeWithSegmentsIn_Segment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNodeWithSegmentsIn_Segment) ProtoMessage() {}

func (x *CreateNodeWithSegmentsIn_Segment) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grpc_service_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNodeWithSegmentsIn_Segment.ProtoReflect.Descriptor instead.
func (*CreateNodeWithSegmentsIn_Segment) Descriptor() ([]byte, []int) {
	return file_proto_grpc_service_proto_rawDescGZIP(), []int{36, 1}
}

func (x *CreateNodeWithSegmentsIn_Segment) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *CreateNodeWithSegmentsIn_Segment) GetContor() []byte {
	if x != nil {
		return x.Contor
	}
	return nil
}

func (x *CreateNodeWithSegmentsIn_Segment) GetTirads_23() float64 {
	if x != nil {
		return x.Tirads_23
	}
	return 0
}

func (x *CreateNodeWithSegmentsIn_Segment) GetTirads_4() float64 {
	if x != nil {
		return x.Tirads_4
	}
	return 0
}

func (x *CreateNodeWithSegmentsIn_Segment) GetTirads_5() float64 {
	if x != nil {
		return x.Tirads_5
	}
	return 0
}

var File_proto_grpc_service_proto protoreflect.FileDescriptor

var file_proto_grpc_service_proto_rawDesc = string([]byte{
	0x0a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2d, 0x0a, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x13, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x24, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x21, 0x0a, 0x0f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x75, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x35, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x75, 0x74, 0x12, 0x21, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x64,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x07, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0xb5, 0x02, 0x0a, 0x03, 0x55, 0x7a, 0x69, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2f,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xc8, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x55, 0x7a, 0x69, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x19, 0x0a, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x18, 0xac, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x90, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x06,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0xf4, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0xd8, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0xbc, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x55, 0x7a, 0x69, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xa0, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0xe8, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xcf,
	0x08, 0x0a, 0x0b, 0x45, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x6f, 0x72, 0x73, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x6f, 0x72, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2e,
	0x0a, 0x10, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x6c, 0x6f, 0x62, 0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x18, 0xac, 0x02, 0x20, 0x01, 0x28, 0x01, 0x48, 0x01, 0x52, 0x0e, 0x6c, 0x65, 0x66,
	0x74, 0x4c, 0x6f, 0x62, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x2c,
	0x0a, 0x0f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x6c, 0x6f, 0x62, 0x65, 0x5f, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x18, 0x90, 0x03, 0x20, 0x01, 0x28, 0x01, 0x48, 0x02, 0x52, 0x0d, 0x6c, 0x65, 0x66, 0x74,
	0x4c, 0x6f, 0x62, 0x65, 0x57, 0x69, 0x64, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f,
	0x6c, 0x65, 0x66, 0x74, 0x5f, 0x6c, 0x6f, 0x62, 0x65, 0x5f, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x18,
	0xf4, 0x03, 0x20, 0x01, 0x28, 0x01, 0x48, 0x03, 0x52, 0x0d, 0x6c, 0x65, 0x66, 0x74, 0x4c, 0x6f,
	0x62, 0x65, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x6c, 0x65,
	0x66, 0x74, 0x5f, 0x6c, 0x6f, 0x62, 0x65, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x18, 0xd8, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x48, 0x04, 0x52, 0x0d, 0x6c, 0x65, 0x66, 0x74, 0x4c, 0x6f, 0x62, 0x65,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x11, 0x72, 0x69, 0x67, 0x68,
	0x74, 0x5f, 0x6c, 0x6f, 0x62, 0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0xbc, 0x05,
	0x20, 0x01, 0x28, 0x01, 0x48, 0x05, 0x52, 0x0f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x62,
	0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x10, 0x72, 0x69,
	0x67, 0x68, 0x74, 0x5f, 0x6c, 0x6f, 0x62, 0x65, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0xa0,
	0x06, 0x20, 0x01, 0x28, 0x01, 0x48, 0x06, 0x52, 0x0e, 0x72, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f,
	0x62, 0x65, 0x57, 0x69, 0x64, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x10, 0x72, 0x69,
	0x67, 0x68, 0x74, 0x5f, 0x6c, 0x6f, 0x62, 0x65, 0x5f, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x18, 0x84,
	0x07, 0x20, 0x01, 0x28, 0x01, 0x48, 0x07, 0x52, 0x0e, 0x72, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f,
	0x62, 0x65, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x10, 0x72, 0x69,
	0x67, 0x68, 0x74, 0x5f, 0x6c, 0x6f, 0x62, 0x65, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x18, 0xe8,
	0x07, 0x20, 0x01, 0x28, 0x01, 0x48, 0x08, 0x52, 0x0e, 0x72, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f,
	0x62, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x67, 0x6c,
	0x61, 0x6e, 0x64, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x18, 0xcc, 0x08, 0x20, 0x01, 0x28, 0x01,
	0x48, 0x09, 0x52, 0x0a, 0x67, 0x6c, 0x61, 0x6e, 0x64, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x88, 0x01,
	0x01, 0x12, 0x1e, 0x0a, 0x07, 0x69, 0x73, 0x74, 0x68, 0x6d, 0x75, 0x73, 0x18, 0xb0, 0x09, 0x20,
	0x01, 0x28, 0x01, 0x48, 0x0a, 0x52, 0x07, 0x69, 0x73, 0x74, 0x68, 0x6d, 0x75, 0x73, 0x88, 0x01,
	0x01, 0x12, 0x1c, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x18, 0x94, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x0b, 0x52, 0x06, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x28, 0x0a, 0x0c, 0x65, 0x63, 0x68, 0x6f, 0x67, 0x65, 0x6e, 0x69, 0x63, 0x69, 0x74, 0x79, 0x18,
	0xf8, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x0c, 0x65, 0x63, 0x68, 0x6f, 0x67, 0x65,
	0x6e, 0x69, 0x63, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0e, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6c, 0x79, 0x6d, 0x70, 0x68, 0x18, 0xdc, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x0d, 0x52, 0x0d, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4c, 0x79,
	0x6d, 0x70, 0x68, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x0f, 0x76, 0x61, 0x73, 0x63, 0x75, 0x6c,
	0x61, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xc0, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x0e, 0x52, 0x0f, 0x76, 0x61, 0x73, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0xa4, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0f, 0x52, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x88, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x10, 0x52,
	0x0a, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x24,
	0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0xec, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x11, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f,
	0x6e, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x6f, 0x72, 0x73,
	0x42, 0x13, 0x0a, 0x11, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x6c, 0x6f, 0x62, 0x65, 0x5f, 0x6c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x6c,
	0x6f, 0x62, 0x65, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6c, 0x65,
	0x66, 0x74, 0x5f, 0x6c, 0x6f, 0x62, 0x65, 0x5f, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x42, 0x12, 0x0a,
	0x10, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x6c, 0x6f, 0x62, 0x65, 0x5f, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x6c, 0x6f, 0x62, 0x65,
	0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x72, 0x69, 0x67, 0x68,
	0x74, 0x5f, 0x6c, 0x6f, 0x62, 0x65, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x42, 0x13, 0x0a, 0x11,
	0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x6c, 0x6f, 0x62, 0x65, 0x5f, 0x74, 0x68, 0x69, 0x63,
	0x6b, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x6c, 0x6f, 0x62, 0x65,
	0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x67, 0x6c, 0x61, 0x6e, 0x64,
	0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x69, 0x73, 0x74, 0x68, 0x6d,
	0x75, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x65, 0x63, 0x68, 0x6f, 0x67, 0x65, 0x6e, 0x69, 0x63, 0x69, 0x74, 0x79, 0x42, 0x11,
	0x0a, 0x0f, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6c, 0x79, 0x6d, 0x70,
	0x68, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x76, 0x61, 0x73, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6f, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0xce, 0x01, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x7a, 0x69, 0x49, 0x6e,
	0x12, 0x2e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x55, 0x7a, 0x69, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0xc8, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0xac, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x90, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xf4, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01,
	0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x1e, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x7a, 0x69, 0x4f, 0x75,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x1e, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x55, 0x7a, 0x69, 0x42, 0x79, 0x49, 0x64, 0x49,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x27, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x55, 0x7a, 0x69, 0x42, 0x79, 0x49, 0x64, 0x4f,
	0x75, 0x74, 0x12, 0x16, 0x0a, 0x03, 0x75, 0x7a, 0x69, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x04, 0x2e, 0x55, 0x7a, 0x69, 0x52, 0x03, 0x75, 0x7a, 0x69, 0x22, 0x38, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x55, 0x7a, 0x69, 0x73, 0x42, 0x79, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49,
	0x64, 0x49, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x7a, 0x69, 0x73, 0x42,
	0x79, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x4f, 0x75, 0x74, 0x12, 0x18,
	0x0a, 0x04, 0x75, 0x7a, 0x69, 0x73, 0x18, 0x64, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x04, 0x2e, 0x55,
	0x7a, 0x69, 0x52, 0x04, 0x75, 0x7a, 0x69, 0x73, 0x22, 0x2b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x55,
	0x7a, 0x69, 0x73, 0x42, 0x79, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x22, 0x2e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x7a, 0x69, 0x73,
	0x42, 0x79, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x4f, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x04, 0x75,
	0x7a, 0x69, 0x73, 0x18, 0x64, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x04, 0x2e, 0x55, 0x7a, 0x69, 0x52,
	0x04, 0x75, 0x7a, 0x69, 0x73, 0x22, 0x30, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x45, 0x63, 0x68, 0x6f,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x42, 0x79, 0x55, 0x7a, 0x69, 0x49, 0x64, 0x49, 0x6e,
	0x12, 0x15, 0x0a, 0x06, 0x75, 0x7a, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x75, 0x7a, 0x69, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x45, 0x63,
	0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x42, 0x79, 0x55, 0x7a, 0x69, 0x49, 0x64,
	0x4f, 0x75, 0x74, 0x12, 0x2e, 0x0a, 0x0b, 0x65, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x69, 0x63, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x45, 0x63, 0x68, 0x6f, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x52, 0x0b, 0x65, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x69, 0x63, 0x22, 0x8e, 0x01, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x7a,
	0x69, 0x49, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x55, 0x7a, 0x69, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x07, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x65, 0x64, 0x18, 0xac, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x07, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x65, 0x64, 0x22, 0x26, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x7a,
	0x69, 0x4f, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x03, 0x75, 0x7a, 0x69, 0x18, 0x64, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x04, 0x2e, 0x55, 0x7a, 0x69, 0x52, 0x03, 0x75, 0x7a, 0x69, 0x22, 0x45, 0x0a, 0x13,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69,
	0x63, 0x49, 0x6e, 0x12, 0x2e, 0x0a, 0x0b, 0x65, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x69, 0x63, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x45, 0x63, 0x68, 0x6f, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x52, 0x0b, 0x65, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x69, 0x63, 0x22, 0x46, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x63, 0x68,
	0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x4f, 0x75, 0x74, 0x12, 0x2e, 0x0a, 0x0b, 0x65,
	0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x45, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x52, 0x0b,
	0x65, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x22, 0x1d, 0x0a, 0x0b, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x7a, 0x69, 0x49, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x44, 0x0a, 0x05, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x7a, 0x69, 0x5f, 0x69, 0x64, 0x18, 0xc8, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x7a, 0x69, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0xac, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x22, 0x2b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x42, 0x79, 0x55,
	0x7a, 0x69, 0x49, 0x64, 0x49, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x75, 0x7a, 0x69, 0x5f, 0x69, 0x64,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x7a, 0x69, 0x49, 0x64, 0x22, 0x35, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x42, 0x79, 0x55, 0x7a, 0x69, 0x49,
	0x64, 0x4f, 0x75, 0x74, 0x12, 0x1e, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x64,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x06, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x22, 0x93, 0x02, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x0f, 0x0a,
	0x02, 0x61, 0x69, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x61, 0x69, 0x12, 0x35,
	0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xac, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x7a, 0x69, 0x5f, 0x69, 0x64, 0x18,
	0x90, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x7a, 0x69, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x5f, 0x32, 0x33, 0x18, 0xf4, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x08, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x32, 0x33, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x69, 0x72, 0x61, 0x64, 0x73, 0x5f, 0x34, 0x18, 0xd8, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07,
	0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x34, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x72, 0x61, 0x64,
	0x73, 0x5f, 0x35, 0x18, 0xbc, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x74, 0x69, 0x72, 0x61,
	0x64, 0x73, 0x35, 0x12, 0x26, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0xa0, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2a, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x42, 0x79, 0x55, 0x7a, 0x69, 0x49, 0x64, 0x49, 0x6e, 0x12,
	0x15, 0x0a, 0x06, 0x75, 0x7a, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x75, 0x7a, 0x69, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64,
	0x65, 0x73, 0x42, 0x79, 0x55, 0x7a, 0x69, 0x49, 0x64, 0x4f, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x05,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x64, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0xf1, 0x01, 0x0a, 0x0c, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x35, 0x0a, 0x0a, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x21, 0x0a, 0x09, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x5f, 0x32, 0x33, 0x18, 0xac,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x48, 0x01, 0x52, 0x08, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x32,
	0x33, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x5f, 0x34,
	0x18, 0x90, 0x03, 0x20, 0x01, 0x28, 0x01, 0x48, 0x02, 0x52, 0x07, 0x74, 0x69, 0x72, 0x61, 0x64,
	0x73, 0x34, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x5f,
	0x35, 0x18, 0xf4, 0x03, 0x20, 0x01, 0x28, 0x01, 0x48, 0x03, 0x52, 0x07, 0x74, 0x69, 0x72, 0x61,
	0x64, 0x73, 0x35, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73,
	0x5f, 0x32, 0x33, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x5f, 0x34,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x5f, 0x35, 0x22, 0x2a, 0x0a,
	0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x4f, 0x75, 0x74, 0x12, 0x19,
	0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x22, 0xcf, 0x01, 0x0a, 0x07, 0x53, 0x65,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0xac, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x06, 0x63,
	0x6f, 0x6e, 0x74, 0x6f, 0x72, 0x18, 0x90, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x63, 0x6f,
	0x6e, 0x74, 0x6f, 0x72, 0x12, 0x0f, 0x0a, 0x02, 0x61, 0x69, 0x18, 0xf4, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x02, 0x61, 0x69, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x5f,
	0x32, 0x33, 0x18, 0xd8, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x74, 0x69, 0x72, 0x61, 0x64,
	0x73, 0x32, 0x33, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x5f, 0x34, 0x18,
	0xbc, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x34, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x5f, 0x35, 0x18, 0xa0, 0x06, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x07, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x35, 0x22, 0xb5, 0x01, 0x0a, 0x0f,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x12,
	0x19, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f,
	0x64, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x74, 0x6f, 0x72, 0x18, 0xac,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x5f, 0x32, 0x33, 0x18, 0x90, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x08, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x32, 0x33, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x69, 0x72, 0x61, 0x64, 0x73, 0x5f, 0x34, 0x18, 0xf4, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07,
	0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x34, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x72, 0x61, 0x64,
	0x73, 0x5f, 0x35, 0x18, 0xd8, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x74, 0x69, 0x72, 0x61,
	0x64, 0x73, 0x35, 0x22, 0x22, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x49, 0x6e,
	0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x4f, 0x75, 0x74, 0x12, 0x24, 0x0a, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x64, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xd7, 0x01, 0x0a, 0x0f, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a,
	0x06, 0x63, 0x6f, 0x6e, 0x74, 0x6f, 0x72, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00,
	0x52, 0x06, 0x63, 0x6f, 0x6e, 0x74, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x74,
	0x69, 0x72, 0x61, 0x64, 0x73, 0x5f, 0x32, 0x33, 0x18, 0xac, 0x02, 0x20, 0x01, 0x28, 0x01, 0x48,
	0x01, 0x52, 0x08, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x32, 0x33, 0x88, 0x01, 0x01, 0x12, 0x1f,
	0x0a, 0x08, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x5f, 0x34, 0x18, 0x90, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x48, 0x02, 0x52, 0x07, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x34, 0x88, 0x01, 0x01, 0x12,
	0x1f, 0x0a, 0x08, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x5f, 0x35, 0x18, 0xf4, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x48, 0x03, 0x52, 0x07, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x35, 0x88, 0x01, 0x01,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x6f, 0x72, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x5f, 0x32, 0x33, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x74, 0x69,
	0x72, 0x61, 0x64, 0x73, 0x5f, 0x34, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x74, 0x69, 0x72, 0x61, 0x64,
	0x73, 0x5f, 0x35, 0x22, 0x36, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x12, 0x22, 0x0a, 0x07, 0x73, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x07, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xd3, 0x03, 0x0a, 0x18,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x57, 0x69, 0x74, 0x68, 0x53, 0x65,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x75, 0x7a, 0x69, 0x5f,
	0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x7a, 0x69, 0x49, 0x64, 0x12,
	0x33, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x57, 0x69, 0x74, 0x68, 0x53,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x6e, 0x6f, 0x64, 0x65, 0x12, 0x3e, 0x0a, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0xac, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4e, 0x6f, 0x64, 0x65, 0x57, 0x69, 0x74, 0x68, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x49, 0x6e, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x73, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x1a, 0x94, 0x01, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x5f, 0x32, 0x33, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x08, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x32, 0x33, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x69, 0x72, 0x61, 0x64, 0x73, 0x5f, 0x34, 0x18, 0xac, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07,
	0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x34, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x72, 0x61, 0x64,
	0x73, 0x5f, 0x35, 0x18, 0x90, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x74, 0x69, 0x72, 0x61,
	0x64, 0x73, 0x35, 0x12, 0x26, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0xf4, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x93, 0x01, 0x0a, 0x07,
	0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x74, 0x6f, 0x72, 0x18, 0xc8, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x72, 0x61, 0x64, 0x73, 0x5f, 0x32, 0x33, 0x18, 0xac, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x32, 0x33, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x72,
	0x61, 0x64, 0x73, 0x5f, 0x34, 0x18, 0x90, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x74, 0x69,
	0x72, 0x61, 0x64, 0x73, 0x34, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x5f,
	0x35, 0x18, 0xf4, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73,
	0x35, 0x22, 0x56, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x57,
	0x69, 0x74, 0x68, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4f, 0x75, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0xc8, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x22, 0x31, 0x0a, 0x1f, 0x47, 0x65, 0x74,
	0x4e, 0x6f, 0x64, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x42, 0x79, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x49, 0x6e, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x66, 0x0a, 0x20,
	0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68, 0x53, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x4f, 0x75, 0x74,
	0x12, 0x1b, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x64, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x05, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x25, 0x0a,
	0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0xc8, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x08, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x73, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x22, 0x1e, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f,
	0x64, 0x65, 0x49, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x21, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x2a, 0x51, 0x0a, 0x09, 0x55, 0x7a, 0x69, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x5a, 0x49, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x4e, 0x45, 0x57, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x55, 0x5a, 0x49, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01,
	0x12, 0x18, 0x0a, 0x14, 0x55, 0x5a, 0x49, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43,
	0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x02, 0x2a, 0x62, 0x0a, 0x0e, 0x4e, 0x6f,
	0x64, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x14,
	0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10,
	0x01, 0x12, 0x1b, 0x0a, 0x17, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x02, 0x2a, 0x42,
	0x0a, 0x0d, 0x55, 0x7a, 0x69, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x17, 0x0a, 0x13, 0x55, 0x5a, 0x49, 0x5f, 0x50, 0x52, 0x4f, 0x4a, 0x45, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x4c, 0x4f, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x55, 0x5a, 0x49, 0x5f,
	0x50, 0x52, 0x4f, 0x4a, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x52, 0x4f, 0x53, 0x53,
	0x10, 0x01, 0x32, 0xc2, 0x09, 0x0a, 0x06, 0x55, 0x7a, 0x69, 0x53, 0x72, 0x76, 0x12, 0x31, 0x0a,
	0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x0f, 0x2e,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x1a, 0x10,
	0x2e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x75, 0x74,
	0x12, 0x3a, 0x0a, 0x0d, 0x67, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x11, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x12, 0x28, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x7a, 0x69, 0x12, 0x0c, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x7a, 0x69, 0x49, 0x6e, 0x1a, 0x0d, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x55, 0x7a, 0x69, 0x4f, 0x75, 0x74, 0x12, 0x2b, 0x0a, 0x0a, 0x67, 0x65, 0x74, 0x55, 0x7a, 0x69,
	0x42, 0x79, 0x49, 0x64, 0x12, 0x0d, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x7a, 0x69, 0x42, 0x79, 0x49,
	0x64, 0x49, 0x6e, 0x1a, 0x0e, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x7a, 0x69, 0x42, 0x79, 0x49, 0x64,
	0x4f, 0x75, 0x74, 0x12, 0x46, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x55, 0x7a, 0x69, 0x73, 0x42, 0x79,
	0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x16, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x7a, 0x69, 0x73, 0x42, 0x79, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64,
	0x49, 0x6e, 0x1a, 0x17, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x7a, 0x69, 0x73, 0x42, 0x79, 0x45, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x4f, 0x75, 0x74, 0x12, 0x3a, 0x0a, 0x0f, 0x67,
	0x65, 0x74, 0x55, 0x7a, 0x69, 0x73, 0x42, 0x79, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x12,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x7a, 0x69, 0x73, 0x42, 0x79, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x49, 0x6e, 0x1a, 0x13, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x7a, 0x69, 0x73, 0x42, 0x79, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x4f, 0x75, 0x74, 0x12, 0x4c, 0x0a, 0x15, 0x67, 0x65, 0x74, 0x45, 0x63,
	0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x42, 0x79, 0x55, 0x7a, 0x69, 0x49, 0x64,
	0x12, 0x18, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69,
	0x63, 0x42, 0x79, 0x55, 0x7a, 0x69, 0x49, 0x64, 0x49, 0x6e, 0x1a, 0x19, 0x2e, 0x47, 0x65, 0x74,
	0x45, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x42, 0x79, 0x55, 0x7a, 0x69,
	0x49, 0x64, 0x4f, 0x75, 0x74, 0x12, 0x28, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x7a, 0x69, 0x12, 0x0c, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x7a, 0x69, 0x49, 0x6e,
	0x1a, 0x0d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x7a, 0x69, 0x4f, 0x75, 0x74, 0x12,
	0x40, 0x0a, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x69, 0x63, 0x12, 0x14, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x63, 0x68,
	0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x49, 0x6e, 0x1a, 0x15, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x4f, 0x75,
	0x74, 0x12, 0x31, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x7a, 0x69, 0x12, 0x0c,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x7a, 0x69, 0x49, 0x6e, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x3d, 0x0a, 0x10, 0x67, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x73, 0x42, 0x79, 0x55, 0x7a, 0x69, 0x49, 0x64, 0x12, 0x13, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x42, 0x79, 0x55, 0x7a, 0x69, 0x49, 0x64, 0x49, 0x6e, 0x1a, 0x14, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x42, 0x79, 0x55, 0x7a, 0x69, 0x49, 0x64,
	0x4f, 0x75, 0x74, 0x12, 0x3a, 0x0a, 0x0f, 0x67, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x42,
	0x79, 0x55, 0x7a, 0x69, 0x49, 0x64, 0x12, 0x12, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65,
	0x73, 0x42, 0x79, 0x55, 0x7a, 0x69, 0x49, 0x64, 0x49, 0x6e, 0x1a, 0x13, 0x2e, 0x47, 0x65, 0x74,
	0x4e, 0x6f, 0x64, 0x65, 0x73, 0x42, 0x79, 0x55, 0x7a, 0x69, 0x49, 0x64, 0x4f, 0x75, 0x74, 0x12,
	0x2b, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x0d, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x1a, 0x0e, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x4f, 0x75, 0x74, 0x12, 0x34, 0x0a, 0x0d,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x1a,
	0x11, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x4f,
	0x75, 0x74, 0x12, 0x46, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x42, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x16, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x49,
	0x6e, 0x1a, 0x17, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42,
	0x79, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x4f, 0x75, 0x74, 0x12, 0x34, 0x0a, 0x0d, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x1a, 0x11, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74,
	0x12, 0x4f, 0x0a, 0x16, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x57, 0x69,
	0x74, 0x68, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x19, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x57, 0x69, 0x74, 0x68, 0x53, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x49, 0x6e, 0x1a, 0x1a, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f,
	0x64, 0x65, 0x57, 0x69, 0x74, 0x68, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4f, 0x75,
	0x74, 0x12, 0x64, 0x0a, 0x1d, 0x67, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x57, 0x69, 0x74,
	0x68, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x49, 0x64, 0x12, 0x20, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x57, 0x69, 0x74,
	0x68, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x49, 0x64, 0x49, 0x6e, 0x1a, 0x21, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x57,
	0x69, 0x74, 0x68, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x49, 0x64, 0x4f, 0x75, 0x74, 0x12, 0x33, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x0d, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f,
	0x64, 0x65, 0x49, 0x6e, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x39, 0x0a, 0x0d,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x21, 0x5a, 0x1f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x67, 0x72,
	0x70, 0x63, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
})

var (
	file_proto_grpc_service_proto_rawDescOnce sync.Once
	file_proto_grpc_service_proto_rawDescData []byte
)

func file_proto_grpc_service_proto_rawDescGZIP() []byte {
	file_proto_grpc_service_proto_rawDescOnce.Do(func() {
		file_proto_grpc_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_grpc_service_proto_rawDesc), len(file_proto_grpc_service_proto_rawDesc)))
	})
	return file_proto_grpc_service_proto_rawDescData
}

var file_proto_grpc_service_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_proto_grpc_service_proto_msgTypes = make([]protoimpl.MessageInfo, 44)
var file_proto_grpc_service_proto_goTypes = []any{
	(UziStatus)(0),                           // 0: UziStatus
	(NodeValidation)(0),                      // 1: NodeValidation
	(UziProjection)(0),                       // 2: UziProjection
	(*Device)(nil),                           // 3: Device
	(*CreateDeviceIn)(nil),                   // 4: createDeviceIn
	(*CreateDeviceOut)(nil),                  // 5: createDeviceOut
	(*GetDeviceListOut)(nil),                 // 6: GetDeviceListOut
	(*Uzi)(nil),                              // 7: Uzi
	(*Echographic)(nil),                      // 8: Echographic
	(*CreateUziIn)(nil),                      // 9: CreateUziIn
	(*CreateUziOut)(nil),                     // 10: CreateUziOut
	(*GetUziByIdIn)(nil),                     // 11: GetUziByIdIn
	(*GetUziByIdOut)(nil),                    // 12: GetUziByIdOut
	(*GetUzisByExternalIdIn)(nil),            // 13: GetUzisByExternalIdIn
	(*GetUzisByExternalIdOut)(nil),           // 14: GetUzisByExternalIdOut
	(*GetUzisByAuthorIn)(nil),                // 15: GetUzisByAuthorIn
	(*GetUzisByAuthorOut)(nil),               // 16: GetUzisByAuthorOut
	(*GetEchographicByUziIdIn)(nil),          // 17: GetEchographicByUziIdIn
	(*GetEchographicByUziIdOut)(nil),         // 18: GetEchographicByUziIdOut
	(*UpdateUziIn)(nil),                      // 19: UpdateUziIn
	(*UpdateUziOut)(nil),                     // 20: UpdateUziOut
	(*UpdateEchographicIn)(nil),              // 21: UpdateEchographicIn
	(*UpdateEchographicOut)(nil),             // 22: UpdateEchographicOut
	(*DeleteUziIn)(nil),                      // 23: DeleteUziIn
	(*Image)(nil),                            // 24: Image
	(*GetImagesByUziIdIn)(nil),               // 25: GetImagesByUziIdIn
	(*GetImagesByUziIdOut)(nil),              // 26: GetImagesByUziIdOut
	(*Node)(nil),                             // 27: Node
	(*GetNodesByUziIdIn)(nil),                // 28: GetNodesByUziIdIn
	(*GetNodesByUziIdOut)(nil),               // 29: GetNodesByUziIdOut
	(*UpdateNodeIn)(nil),                     // 30: UpdateNodeIn
	(*UpdateNodeOut)(nil),                    // 31: UpdateNodeOut
	(*Segment)(nil),                          // 32: Segment
	(*CreateSegmentIn)(nil),                  // 33: CreateSegmentIn
	(*CreateSegmentOut)(nil),                 // 34: CreateSegmentOut
	(*GetSegmentsByNodeIdIn)(nil),            // 35: GetSegmentsByNodeIdIn
	(*GetSegmentsByNodeIdOut)(nil),           // 36: GetSegmentsByNodeIdOut
	(*UpdateSegmentIn)(nil),                  // 37: UpdateSegmentIn
	(*UpdateSegmentOut)(nil),                 // 38: UpdateSegmentOut
	(*CreateNodeWithSegmentsIn)(nil),         // 39: CreateNodeWithSegmentsIn
	(*CreateNodeWithSegmentsOut)(nil),        // 40: CreateNodeWithSegmentsOut
	(*GetNodesWithSegmentsByImageIdIn)(nil),  // 41: GetNodesWithSegmentsByImageIdIn
	(*GetNodesWithSegmentsByImageIdOut)(nil), // 42: GetNodesWithSegmentsByImageIdOut
	(*DeleteNodeIn)(nil),                     // 43: DeleteNodeIn
	(*DeleteSegmentIn)(nil),                  // 44: DeleteSegmentIn
	(*CreateNodeWithSegmentsIn_Node)(nil),    // 45: CreateNodeWithSegmentsIn.Node
	(*CreateNodeWithSegmentsIn_Segment)(nil), // 46: CreateNodeWithSegmentsIn.Segment
	(*emptypb.Empty)(nil),                    // 47: google.protobuf.Empty
}
var file_proto_grpc_service_proto_depIdxs = []int32{
	3,  // 0: GetDeviceListOut.devices:type_name -> Device
	2,  // 1: Uzi.projection:type_name -> UziProjection
	0,  // 2: Uzi.status:type_name -> UziStatus
	2,  // 3: CreateUziIn.projection:type_name -> UziProjection
	7,  // 4: GetUziByIdOut.uzi:type_name -> Uzi
	7,  // 5: GetUzisByExternalIdOut.uzis:type_name -> Uzi
	7,  // 6: GetUzisByAuthorOut.uzis:type_name -> Uzi
	8,  // 7: GetEchographicByUziIdOut.echographic:type_name -> Echographic
	2,  // 8: UpdateUziIn.projection:type_name -> UziProjection
	7,  // 9: UpdateUziOut.uzi:type_name -> Uzi
	8,  // 10: UpdateEchographicIn.echographic:type_name -> Echographic
	8,  // 11: UpdateEchographicOut.echographic:type_name -> Echographic
	24, // 12: GetImagesByUziIdOut.images:type_name -> Image
	1,  // 13: Node.validation:type_name -> NodeValidation
	27, // 14: GetNodesByUziIdOut.nodes:type_name -> Node
	1,  // 15: UpdateNodeIn.validation:type_name -> NodeValidation
	27, // 16: UpdateNodeOut.node:type_name -> Node
	32, // 17: GetSegmentsByNodeIdOut.segments:type_name -> Segment
	32, // 18: UpdateSegmentOut.segment:type_name -> Segment
	45, // 19: CreateNodeWithSegmentsIn.node:type_name -> CreateNodeWithSegmentsIn.Node
	46, // 20: CreateNodeWithSegmentsIn.segments:type_name -> CreateNodeWithSegmentsIn.Segment
	27, // 21: GetNodesWithSegmentsByImageIdOut.nodes:type_name -> Node
	32, // 22: GetNodesWithSegmentsByImageIdOut.segments:type_name -> Segment
	4,  // 23: UziSrv.createDevice:input_type -> createDeviceIn
	47, // 24: UziSrv.getDeviceList:input_type -> google.protobuf.Empty
	9,  // 25: UziSrv.createUzi:input_type -> CreateUziIn
	11, // 26: UziSrv.getUziById:input_type -> GetUziByIdIn
	13, // 27: UziSrv.getUzisByExternalId:input_type -> GetUzisByExternalIdIn
	15, // 28: UziSrv.getUzisByAuthor:input_type -> GetUzisByAuthorIn
	17, // 29: UziSrv.getEchographicByUziId:input_type -> GetEchographicByUziIdIn
	19, // 30: UziSrv.updateUzi:input_type -> UpdateUziIn
	21, // 31: UziSrv.updateEchographic:input_type -> UpdateEchographicIn
	23, // 32: UziSrv.deleteUzi:input_type -> DeleteUziIn
	25, // 33: UziSrv.getImagesByUziId:input_type -> GetImagesByUziIdIn
	28, // 34: UziSrv.getNodesByUziId:input_type -> GetNodesByUziIdIn
	30, // 35: UziSrv.updateNode:input_type -> UpdateNodeIn
	33, // 36: UziSrv.createSegment:input_type -> CreateSegmentIn
	35, // 37: UziSrv.getSegmentsByNodeId:input_type -> GetSegmentsByNodeIdIn
	37, // 38: UziSrv.updateSegment:input_type -> UpdateSegmentIn
	39, // 39: UziSrv.createNodeWithSegments:input_type -> CreateNodeWithSegmentsIn
	41, // 40: UziSrv.getNodesWithSegmentsByImageId:input_type -> GetNodesWithSegmentsByImageIdIn
	43, // 41: UziSrv.deleteNode:input_type -> DeleteNodeIn
	44, // 42: UziSrv.deleteSegment:input_type -> DeleteSegmentIn
	5,  // 43: UziSrv.createDevice:output_type -> createDeviceOut
	6,  // 44: UziSrv.getDeviceList:output_type -> GetDeviceListOut
	10, // 45: UziSrv.createUzi:output_type -> CreateUziOut
	12, // 46: UziSrv.getUziById:output_type -> GetUziByIdOut
	14, // 47: UziSrv.getUzisByExternalId:output_type -> GetUzisByExternalIdOut
	16, // 48: UziSrv.getUzisByAuthor:output_type -> GetUzisByAuthorOut
	18, // 49: UziSrv.getEchographicByUziId:output_type -> GetEchographicByUziIdOut
	20, // 50: UziSrv.updateUzi:output_type -> UpdateUziOut
	22, // 51: UziSrv.updateEchographic:output_type -> UpdateEchographicOut
	47, // 52: UziSrv.deleteUzi:output_type -> google.protobuf.Empty
	26, // 53: UziSrv.getImagesByUziId:output_type -> GetImagesByUziIdOut
	29, // 54: UziSrv.getNodesByUziId:output_type -> GetNodesByUziIdOut
	31, // 55: UziSrv.updateNode:output_type -> UpdateNodeOut
	34, // 56: UziSrv.createSegment:output_type -> CreateSegmentOut
	36, // 57: UziSrv.getSegmentsByNodeId:output_type -> GetSegmentsByNodeIdOut
	38, // 58: UziSrv.updateSegment:output_type -> UpdateSegmentOut
	40, // 59: UziSrv.createNodeWithSegments:output_type -> CreateNodeWithSegmentsOut
	42, // 60: UziSrv.getNodesWithSegmentsByImageId:output_type -> GetNodesWithSegmentsByImageIdOut
	47, // 61: UziSrv.deleteNode:output_type -> google.protobuf.Empty
	47, // 62: UziSrv.deleteSegment:output_type -> google.protobuf.Empty
	43, // [43:63] is the sub-list for method output_type
	23, // [23:43] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_proto_grpc_service_proto_init() }
func file_proto_grpc_service_proto_init() {
	if File_proto_grpc_service_proto != nil {
		return
	}
	file_proto_grpc_service_proto_msgTypes[4].OneofWrappers = []any{}
	file_proto_grpc_service_proto_msgTypes[5].OneofWrappers = []any{}
	file_proto_grpc_service_proto_msgTypes[6].OneofWrappers = []any{}
	file_proto_grpc_service_proto_msgTypes[16].OneofWrappers = []any{}
	file_proto_grpc_service_proto_msgTypes[24].OneofWrappers = []any{}
	file_proto_grpc_service_proto_msgTypes[27].OneofWrappers = []any{}
	file_proto_grpc_service_proto_msgTypes[34].OneofWrappers = []any{}
	file_proto_grpc_service_proto_msgTypes[42].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_grpc_service_proto_rawDesc), len(file_proto_grpc_service_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   44,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_grpc_service_proto_goTypes,
		DependencyIndexes: file_proto_grpc_service_proto_depIdxs,
		EnumInfos:         file_proto_grpc_service_proto_enumTypes,
		MessageInfos:      file_proto_grpc_service_proto_msgTypes,
	}.Build()
	File_proto_grpc_service_proto = out.File
	file_proto_grpc_service_proto_goTypes = nil
	file_proto_grpc_service_proto_depIdxs = nil
}
