// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.2
// source: uzi.proto

package uzi

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetDevicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int64 `protobuf:"varint,100,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int64 `protobuf:"varint,200,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *GetDevicesRequest) Reset() {
	*x = GetDevicesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uzi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDevicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDevicesRequest) ProtoMessage() {}

func (x *GetDevicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDevicesRequest.ProtoReflect.Descriptor instead.
func (*GetDevicesRequest) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{0}
}

func (x *GetDevicesRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetDevicesRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type UziDevice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,200,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UziDevice) Reset() {
	*x = UziDevice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uzi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UziDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UziDevice) ProtoMessage() {}

func (x *UziDevice) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UziDevice.ProtoReflect.Descriptor instead.
func (*UziDevice) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{1}
}

func (x *UziDevice) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UziDevice) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetDevicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count   int64        `protobuf:"varint,100,opt,name=count,proto3" json:"count,omitempty"`
	Devices []*UziDevice `protobuf:"bytes,200,rep,name=devices,proto3" json:"devices,omitempty"` // Pagination pagination = 300;
}

func (x *GetDevicesResponse) Reset() {
	*x = GetDevicesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uzi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDevicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDevicesResponse) ProtoMessage() {}

func (x *GetDevicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDevicesResponse.ProtoReflect.Descriptor instead.
func (*GetDevicesResponse) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{2}
}

func (x *GetDevicesResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetDevicesResponse) GetDevices() []*UziDevice {
	if x != nil {
		return x.Devices
	}
	return nil
}

type Tirads struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tirads_1 float64 `protobuf:"fixed64,1,opt,name=tirads_1,json=tirads1,proto3" json:"tirads_1,omitempty"`
	Tirads_2 float64 `protobuf:"fixed64,2,opt,name=tirads_2,json=tirads2,proto3" json:"tirads_2,omitempty"`
	Tirads_3 float64 `protobuf:"fixed64,3,opt,name=tirads_3,json=tirads3,proto3" json:"tirads_3,omitempty"`
	Tirads_4 float64 `protobuf:"fixed64,4,opt,name=tirads_4,json=tirads4,proto3" json:"tirads_4,omitempty"`
	Tirads_5 float64 `protobuf:"fixed64,5,opt,name=tirads_5,json=tirads5,proto3" json:"tirads_5,omitempty"`
}

func (x *Tirads) Reset() {
	*x = Tirads{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uzi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tirads) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tirads) ProtoMessage() {}

func (x *Tirads) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tirads.ProtoReflect.Descriptor instead.
func (*Tirads) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{3}
}

func (x *Tirads) GetTirads_1() float64 {
	if x != nil {
		return x.Tirads_1
	}
	return 0
}

func (x *Tirads) GetTirads_2() float64 {
	if x != nil {
		return x.Tirads_2
	}
	return 0
}

func (x *Tirads) GetTirads_3() float64 {
	if x != nil {
		return x.Tirads_3
	}
	return 0
}

func (x *Tirads) GetTirads_4() float64 {
	if x != nil {
		return x.Tirads_4
	}
	return 0
}

func (x *Tirads) GetTirads_5() float64 {
	if x != nil {
		return x.Tirads_5
	}
	return 0
}

type Segment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContorUrl string  `protobuf:"bytes,200,opt,name=contor_url,proto3" json:"contor_url,omitempty"`
	Tirads    *Tirads `protobuf:"bytes,300,opt,name=tirads,proto3" json:"tirads,omitempty"`
}

func (x *Segment) Reset() {
	*x = Segment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uzi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Segment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Segment) ProtoMessage() {}

func (x *Segment) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Segment.ProtoReflect.Descriptor instead.
func (*Segment) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{4}
}

func (x *Segment) GetContorUrl() string {
	if x != nil {
		return x.ContorUrl
	}
	return ""
}

func (x *Segment) GetTirads() *Tirads {
	if x != nil {
		return x.Tirads
	}
	return nil
}

type Formation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FormationId string `protobuf:"bytes,100,opt,name=formation_id,proto3" json:"formation_id,omitempty"`
	// map<image_id, Segment>
	Segments  map[string]*Segment `protobuf:"bytes,200,rep,name=segments,proto3" json:"segments,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	AvgTirads *Tirads             `protobuf:"bytes,300,opt,name=avg_tirads,proto3" json:"avg_tirads,omitempty"`
	Ai        bool                `protobuf:"varint,400,opt,name=ai,proto3" json:"ai,omitempty"`
}

func (x *Formation) Reset() {
	*x = Formation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uzi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Formation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Formation) ProtoMessage() {}

func (x *Formation) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Formation.ProtoReflect.Descriptor instead.
func (*Formation) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{5}
}

func (x *Formation) GetFormationId() string {
	if x != nil {
		return x.FormationId
	}
	return ""
}

func (x *Formation) GetSegments() map[string]*Segment {
	if x != nil {
		return x.Segments
	}
	return nil
}

func (x *Formation) GetAvgTirads() *Tirads {
	if x != nil {
		return x.AvgTirads
	}
	return nil
}

func (x *Formation) GetAi() bool {
	if x != nil {
		return x.Ai
	}
	return false
}

type Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageId  string `protobuf:"bytes,100,opt,name=image_id,proto3" json:"image_id,omitempty"`
	ImageUrl string `protobuf:"bytes,200,opt,name=image_url,proto3" json:"image_url,omitempty"`
	Page     int64  `protobuf:"varint,300,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *Image) Reset() {
	*x = Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uzi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{6}
}

func (x *Image) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *Image) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *Image) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type UziDataRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UziId      string `protobuf:"bytes,100,opt,name=uzi_id,proto3" json:"uzi_id,omitempty"`
	UziUrl     string `protobuf:"bytes,200,opt,name=uzi_url,proto3" json:"uzi_url,omitempty"`
	Projection string `protobuf:"bytes,300,opt,name=projection,proto3" json:"projection,omitempty"`
	PatientId  string `protobuf:"bytes,400,opt,name=patient_id,proto3" json:"patient_id,omitempty"`
	DeviceId   int64  `protobuf:"varint,500,opt,name=device_id,proto3" json:"device_id,omitempty"`
}

func (x *UziDataRef) Reset() {
	*x = UziDataRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uzi_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UziDataRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UziDataRef) ProtoMessage() {}

func (x *UziDataRef) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UziDataRef.ProtoReflect.Descriptor instead.
func (*UziDataRef) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{7}
}

func (x *UziDataRef) GetUziId() string {
	if x != nil {
		return x.UziId
	}
	return ""
}

func (x *UziDataRef) GetUziUrl() string {
	if x != nil {
		return x.UziUrl
	}
	return ""
}

func (x *UziDataRef) GetProjection() string {
	if x != nil {
		return x.Projection
	}
	return ""
}

func (x *UziDataRef) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (x *UziDataRef) GetDeviceId() int64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

type UziData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UziId      string     `protobuf:"bytes,100,opt,name=uzi_id,proto3" json:"uzi_id,omitempty"`
	UziUrl     string     `protobuf:"bytes,200,opt,name=uzi_url,proto3" json:"uzi_url,omitempty"`
	Projection string     `protobuf:"bytes,300,opt,name=projection,proto3" json:"projection,omitempty"`
	PatientId  string     `protobuf:"bytes,400,opt,name=patient_id,proto3" json:"patient_id,omitempty"`
	Device     *UziDevice `protobuf:"bytes,500,opt,name=device,proto3" json:"device,omitempty"`
}

func (x *UziData) Reset() {
	*x = UziData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uzi_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UziData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UziData) ProtoMessage() {}

func (x *UziData) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UziData.ProtoReflect.Descriptor instead.
func (*UziData) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{8}
}

func (x *UziData) GetUziId() string {
	if x != nil {
		return x.UziId
	}
	return ""
}

func (x *UziData) GetUziUrl() string {
	if x != nil {
		return x.UziUrl
	}
	return ""
}

func (x *UziData) GetProjection() string {
	if x != nil {
		return x.Projection
	}
	return ""
}

func (x *UziData) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (x *UziData) GetDevice() *UziDevice {
	if x != nil {
		return x.Device
	}
	return nil
}

type InsertUziRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uzi        *UziDataRef  `protobuf:"bytes,100,opt,name=uzi,proto3" json:"uzi,omitempty"`
	Images     []*Image     `protobuf:"bytes,200,rep,name=images,proto3" json:"images,omitempty"`
	Formations []*Formation `protobuf:"bytes,300,rep,name=formations,proto3" json:"formations,omitempty"`
}

func (x *InsertUziRequest) Reset() {
	*x = InsertUziRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uzi_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertUziRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertUziRequest) ProtoMessage() {}

func (x *InsertUziRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertUziRequest.ProtoReflect.Descriptor instead.
func (*InsertUziRequest) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{9}
}

func (x *InsertUziRequest) GetUzi() *UziDataRef {
	if x != nil {
		return x.Uzi
	}
	return nil
}

func (x *InsertUziRequest) GetImages() []*Image {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *InsertUziRequest) GetFormations() []*Formation {
	if x != nil {
		return x.Formations
	}
	return nil
}

type UpdateUziRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UziId      string `protobuf:"bytes,100,opt,name=uzi_id,proto3" json:"uzi_id,omitempty"`
	Projection string `protobuf:"bytes,200,opt,name=projection,proto3" json:"projection,omitempty"`
	PatientId  string `protobuf:"bytes,300,opt,name=patient_id,proto3" json:"patient_id,omitempty"`
	DeviceId   int64  `protobuf:"varint,400,opt,name=device_id,proto3" json:"device_id,omitempty"`
}

func (x *UpdateUziRequest) Reset() {
	*x = UpdateUziRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uzi_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUziRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUziRequest) ProtoMessage() {}

func (x *UpdateUziRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUziRequest.ProtoReflect.Descriptor instead.
func (*UpdateUziRequest) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateUziRequest) GetUziId() string {
	if x != nil {
		return x.UziId
	}
	return ""
}

func (x *UpdateUziRequest) GetProjection() string {
	if x != nil {
		return x.Projection
	}
	return ""
}

func (x *UpdateUziRequest) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (x *UpdateUziRequest) GetDeviceId() int64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

type GetUziMetaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UziId string `protobuf:"bytes,100,opt,name=uzi_id,proto3" json:"uzi_id,omitempty"`
}

func (x *GetUziMetaRequest) Reset() {
	*x = GetUziMetaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uzi_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUziMetaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUziMetaRequest) ProtoMessage() {}

func (x *GetUziMetaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUziMetaRequest.ProtoReflect.Descriptor instead.
func (*GetUziMetaRequest) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{11}
}

func (x *GetUziMetaRequest) GetUziId() string {
	if x != nil {
		return x.UziId
	}
	return ""
}

type GetUziMetaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uzi    *UziData `protobuf:"bytes,100,opt,name=uzi,proto3" json:"uzi,omitempty"`
	Images []*Image `protobuf:"bytes,200,rep,name=images,proto3" json:"images,omitempty"`
}

func (x *GetUziMetaResponse) Reset() {
	*x = GetUziMetaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uzi_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUziMetaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUziMetaResponse) ProtoMessage() {}

func (x *GetUziMetaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUziMetaResponse.ProtoReflect.Descriptor instead.
func (*GetUziMetaResponse) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{12}
}

func (x *GetUziMetaResponse) GetUzi() *UziData {
	if x != nil {
		return x.Uzi
	}
	return nil
}

func (x *GetUziMetaResponse) GetImages() []*Image {
	if x != nil {
		return x.Images
	}
	return nil
}

type GetUziRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UziId string `protobuf:"bytes,100,opt,name=uzi_id,proto3" json:"uzi_id,omitempty"`
}

func (x *GetUziRequest) Reset() {
	*x = GetUziRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uzi_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUziRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUziRequest) ProtoMessage() {}

func (x *GetUziRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUziRequest.ProtoReflect.Descriptor instead.
func (*GetUziRequest) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{13}
}

func (x *GetUziRequest) GetUziId() string {
	if x != nil {
		return x.UziId
	}
	return ""
}

type GetUziResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uzi        *UziData     `protobuf:"bytes,100,opt,name=uzi,proto3" json:"uzi,omitempty"`
	Images     []*Image     `protobuf:"bytes,200,rep,name=images,proto3" json:"images,omitempty"`
	Formations []*Formation `protobuf:"bytes,300,rep,name=formations,proto3" json:"formations,omitempty"`
}

func (x *GetUziResponse) Reset() {
	*x = GetUziResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uzi_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUziResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUziResponse) ProtoMessage() {}

func (x *GetUziResponse) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUziResponse.ProtoReflect.Descriptor instead.
func (*GetUziResponse) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{14}
}

func (x *GetUziResponse) GetUzi() *UziData {
	if x != nil {
		return x.Uzi
	}
	return nil
}

func (x *GetUziResponse) GetImages() []*Image {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *GetUziResponse) GetFormations() []*Formation {
	if x != nil {
		return x.Formations
	}
	return nil
}

type GetImageInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageId string `protobuf:"bytes,100,opt,name=image_id,proto3" json:"image_id,omitempty"`
}

func (x *GetImageInfoRequest) Reset() {
	*x = GetImageInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uzi_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetImageInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetImageInfoRequest) ProtoMessage() {}

func (x *GetImageInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetImageInfoRequest.ProtoReflect.Descriptor instead.
func (*GetImageInfoRequest) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{15}
}

func (x *GetImageInfoRequest) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

type FormationOnImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FormationId string   `protobuf:"bytes,100,opt,name=formation_id,proto3" json:"formation_id,omitempty"`
	Segment     *Segment `protobuf:"bytes,200,opt,name=segment,proto3" json:"segment,omitempty"`
	AvgTirads   *Tirads  `protobuf:"bytes,300,opt,name=avg_tirads,proto3" json:"avg_tirads,omitempty"`
	Ai          bool     `protobuf:"varint,400,opt,name=ai,proto3" json:"ai,omitempty"`
}

func (x *FormationOnImage) Reset() {
	*x = FormationOnImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uzi_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FormationOnImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormationOnImage) ProtoMessage() {}

func (x *FormationOnImage) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormationOnImage.ProtoReflect.Descriptor instead.
func (*FormationOnImage) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{16}
}

func (x *FormationOnImage) GetFormationId() string {
	if x != nil {
		return x.FormationId
	}
	return ""
}

func (x *FormationOnImage) GetSegment() *Segment {
	if x != nil {
		return x.Segment
	}
	return nil
}

func (x *FormationOnImage) GetAvgTirads() *Tirads {
	if x != nil {
		return x.AvgTirads
	}
	return nil
}

func (x *FormationOnImage) GetAi() bool {
	if x != nil {
		return x.Ai
	}
	return false
}

type GetImageInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image      *Image              `protobuf:"bytes,100,opt,name=image,proto3" json:"image,omitempty"`
	Formations []*FormationOnImage `protobuf:"bytes,200,rep,name=formations,proto3" json:"formations,omitempty"`
}

func (x *GetImageInfoResponse) Reset() {
	*x = GetImageInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uzi_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetImageInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetImageInfoResponse) ProtoMessage() {}

func (x *GetImageInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetImageInfoResponse.ProtoReflect.Descriptor instead.
func (*GetImageInfoResponse) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{17}
}

func (x *GetImageInfoResponse) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *GetImageInfoResponse) GetFormations() []*FormationOnImage {
	if x != nil {
		return x.Formations
	}
	return nil
}

type InsertFormationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UziId      string       `protobuf:"bytes,100,opt,name=uzi_id,proto3" json:"uzi_id,omitempty"`
	Formations []*Formation `protobuf:"bytes,200,rep,name=formations,proto3" json:"formations,omitempty"`
}

func (x *InsertFormationsRequest) Reset() {
	*x = InsertFormationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uzi_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertFormationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertFormationsRequest) ProtoMessage() {}

func (x *InsertFormationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertFormationsRequest.ProtoReflect.Descriptor instead.
func (*InsertFormationsRequest) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{18}
}

func (x *InsertFormationsRequest) GetUziId() string {
	if x != nil {
		return x.UziId
	}
	return ""
}

func (x *InsertFormationsRequest) GetFormations() []*Formation {
	if x != nil {
		return x.Formations
	}
	return nil
}

type InsertFormationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UziId     string     `protobuf:"bytes,100,opt,name=uzi_id,proto3" json:"uzi_id,omitempty"`
	Formation *Formation `protobuf:"bytes,200,opt,name=formation,proto3" json:"formation,omitempty"`
}

func (x *InsertFormationRequest) Reset() {
	*x = InsertFormationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uzi_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertFormationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertFormationRequest) ProtoMessage() {}

func (x *InsertFormationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertFormationRequest.ProtoReflect.Descriptor instead.
func (*InsertFormationRequest) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{19}
}

func (x *InsertFormationRequest) GetUziId() string {
	if x != nil {
		return x.UziId
	}
	return ""
}

func (x *InsertFormationRequest) GetFormation() *Formation {
	if x != nil {
		return x.Formation
	}
	return nil
}

type DeleteFormationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FormationId string `protobuf:"bytes,100,opt,name=formation_id,proto3" json:"formation_id,omitempty"`
}

func (x *DeleteFormationRequest) Reset() {
	*x = DeleteFormationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uzi_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFormationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFormationRequest) ProtoMessage() {}

func (x *DeleteFormationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFormationRequest.ProtoReflect.Descriptor instead.
func (*DeleteFormationRequest) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteFormationRequest) GetFormationId() string {
	if x != nil {
		return x.FormationId
	}
	return ""
}

type DeleteFormationImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageId     string `protobuf:"bytes,100,opt,name=image_id,proto3" json:"image_id,omitempty"`
	FormationId string `protobuf:"bytes,200,opt,name=formation_id,proto3" json:"formation_id,omitempty"`
}

func (x *DeleteFormationImageRequest) Reset() {
	*x = DeleteFormationImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uzi_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFormationImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFormationImageRequest) ProtoMessage() {}

func (x *DeleteFormationImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFormationImageRequest.ProtoReflect.Descriptor instead.
func (*DeleteFormationImageRequest) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteFormationImageRequest) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *DeleteFormationImageRequest) GetFormationId() string {
	if x != nil {
		return x.FormationId
	}
	return ""
}

type UpdateFormationMetaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FormationId string `protobuf:"bytes,100,opt,name=formation_id,proto3" json:"formation_id,omitempty"`
	// map<image_id, Tirads>
	Segments  map[string]*Tirads `protobuf:"bytes,200,rep,name=segments,proto3" json:"segments,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	AvgTirads *Tirads            `protobuf:"bytes,300,opt,name=avg_tirads,proto3" json:"avg_tirads,omitempty"`
}

func (x *UpdateFormationMetaRequest) Reset() {
	*x = UpdateFormationMetaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uzi_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFormationMetaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFormationMetaRequest) ProtoMessage() {}

func (x *UpdateFormationMetaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFormationMetaRequest.ProtoReflect.Descriptor instead.
func (*UpdateFormationMetaRequest) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateFormationMetaRequest) GetFormationId() string {
	if x != nil {
		return x.FormationId
	}
	return ""
}

func (x *UpdateFormationMetaRequest) GetSegments() map[string]*Tirads {
	if x != nil {
		return x.Segments
	}
	return nil
}

func (x *UpdateFormationMetaRequest) GetAvgTirads() *Tirads {
	if x != nil {
		return x.AvgTirads
	}
	return nil
}

type UpdateFormationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FormationId string `protobuf:"bytes,100,opt,name=formation_id,proto3" json:"formation_id,omitempty"`
	// map<image_id, Segment>
	Segments  map[string]*Segment `protobuf:"bytes,200,rep,name=segments,proto3" json:"segments,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	AvgTirads *Tirads             `protobuf:"bytes,300,opt,name=avg_tirads,proto3" json:"avg_tirads,omitempty"`
}

func (x *UpdateFormationRequest) Reset() {
	*x = UpdateFormationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uzi_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFormationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFormationRequest) ProtoMessage() {}

func (x *UpdateFormationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFormationRequest.ProtoReflect.Descriptor instead.
func (*UpdateFormationRequest) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateFormationRequest) GetFormationId() string {
	if x != nil {
		return x.FormationId
	}
	return ""
}

func (x *UpdateFormationRequest) GetSegments() map[string]*Segment {
	if x != nil {
		return x.Segments
	}
	return nil
}

func (x *UpdateFormationRequest) GetAvgTirads() *Tirads {
	if x != nil {
		return x.AvgTirads
	}
	return nil
}

var File_uzi_proto protoreflect.FileDescriptor

var file_uzi_proto_rawDesc = []byte{
	0x0a, 0x09, 0x75, 0x7a, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x79, 0x69, 0x72,
	0x2e, 0x75, 0x7a, 0x69, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x42, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x17, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x22, 0x30, 0x0a, 0x09, 0x55, 0x7a, 0x69, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x13, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x59, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x2d, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0xc8, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x79, 0x69, 0x72, 0x2e, 0x75, 0x7a, 0x69, 0x2e, 0x55, 0x7a,
	0x69, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x22, 0x8f, 0x01, 0x0a, 0x06, 0x54, 0x69, 0x72, 0x61, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x69, 0x72, 0x61, 0x64, 0x73, 0x5f, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x74,
	0x69, 0x72, 0x61, 0x64, 0x73, 0x31, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73,
	0x5f, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73,
	0x32, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x5f, 0x33, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x07, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x33, 0x12, 0x19, 0x0a, 0x08,
	0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x5f, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07,
	0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x34, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x69, 0x72, 0x61, 0x64,
	0x73, 0x5f, 0x35, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x74, 0x69, 0x72, 0x61, 0x64,
	0x73, 0x35, 0x22, 0x54, 0x0a, 0x07, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a,
	0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0xc8, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x12, 0x28,
	0x0a, 0x06, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x18, 0xac, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x79, 0x69, 0x72, 0x2e, 0x75, 0x7a, 0x69, 0x2e, 0x54, 0x69, 0x72, 0x61, 0x64, 0x73,
	0x52, 0x06, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x22, 0x80, 0x02, 0x0a, 0x09, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x12, 0x3d, 0x0a, 0x08, 0x73, 0x65,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0xc8, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x79, 0x69, 0x72, 0x2e, 0x75, 0x7a, 0x69, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x0a, 0x61, 0x76, 0x67,
	0x5f, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x18, 0xac, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x79, 0x69, 0x72, 0x2e, 0x75, 0x7a, 0x69, 0x2e, 0x54, 0x69, 0x72, 0x61, 0x64, 0x73, 0x52,
	0x0a, 0x61, 0x76, 0x67, 0x5f, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x12, 0x0f, 0x0a, 0x02, 0x61,
	0x69, 0x18, 0x90, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x61, 0x69, 0x1a, 0x4d, 0x0a, 0x0d,
	0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x79, 0x69, 0x72, 0x2e, 0x75, 0x7a, 0x69, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x57, 0x0a, 0x05, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64,
	0x12, 0x1d, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0xc8, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x12,
	0x13, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0xac, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x22, 0xa0, 0x01, 0x0a, 0x0a, 0x55, 0x7a, 0x69, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x66, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x7a, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x7a, 0x69, 0x5f, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x07, 0x75,
	0x7a, 0x69, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75,
	0x7a, 0x69, 0x5f, 0x75, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0xac, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0a, 0x70, 0x61, 0x74, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x90, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61,
	0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0xf4, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x22, 0xab, 0x01, 0x0a, 0x07, 0x55, 0x7a, 0x69, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x7a, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x7a, 0x69, 0x5f, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x07, 0x75,
	0x7a, 0x69, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75,
	0x7a, 0x69, 0x5f, 0x75, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0xac, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0a, 0x70, 0x61, 0x74, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x90, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61,
	0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x18, 0xf4, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x79, 0x69, 0x72, 0x2e,
	0x75, 0x7a, 0x69, 0x2e, 0x55, 0x7a, 0x69, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0x97, 0x01, 0x0a, 0x10, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74,
	0x55, 0x7a, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x03, 0x75, 0x7a,
	0x69, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x79, 0x69, 0x72, 0x2e, 0x75, 0x7a,
	0x69, 0x2e, 0x55, 0x7a, 0x69, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x66, 0x52, 0x03, 0x75, 0x7a,
	0x69, 0x12, 0x27, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0xc8, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x79, 0x69, 0x72, 0x2e, 0x75, 0x7a, 0x69, 0x2e, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x0a, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xac, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x79, 0x69, 0x72, 0x2e, 0x75, 0x7a, 0x69, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x8b, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x7a, 0x69, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x7a, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x7a, 0x69, 0x5f, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a,
	0x0a, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0xac, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x90, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x22, 0x2b, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x55, 0x7a, 0x69, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x7a, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x7a, 0x69, 0x5f, 0x69, 0x64, 0x22, 0x61, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x55, 0x7a, 0x69, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x22, 0x0a, 0x03, 0x75, 0x7a, 0x69, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x79, 0x69, 0x72, 0x2e, 0x75, 0x7a, 0x69, 0x2e, 0x55, 0x7a, 0x69, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x03, 0x75, 0x7a, 0x69, 0x12, 0x27, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0xc8,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x79, 0x69, 0x72, 0x2e, 0x75, 0x7a, 0x69, 0x2e,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x22, 0x27, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x55, 0x7a, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x7a, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x7a, 0x69, 0x5f, 0x69, 0x64, 0x22, 0x92, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x7a,
	0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x03, 0x75, 0x7a, 0x69,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x79, 0x69, 0x72, 0x2e, 0x75, 0x7a, 0x69,
	0x2e, 0x55, 0x7a, 0x69, 0x44, 0x61, 0x74, 0x61, 0x52, 0x03, 0x75, 0x7a, 0x69, 0x12, 0x27, 0x0a,
	0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0xc8, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x79, 0x69, 0x72, 0x2e, 0x75, 0x7a, 0x69, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x06,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x0a, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0xac, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x79, 0x69,
	0x72, 0x2e, 0x75, 0x7a, 0x69, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0a, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x31, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x22, 0xa6,
	0x01, 0x0a, 0x10, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x07, 0x73, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x79, 0x69, 0x72, 0x2e,
	0x75, 0x7a, 0x69, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x73, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x0a, 0x61, 0x76, 0x67, 0x5f, 0x74, 0x69, 0x72, 0x61,
	0x64, 0x73, 0x18, 0xac, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x79, 0x69, 0x72, 0x2e,
	0x75, 0x7a, 0x69, 0x2e, 0x54, 0x69, 0x72, 0x61, 0x64, 0x73, 0x52, 0x0a, 0x61, 0x76, 0x67, 0x5f,
	0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x12, 0x0f, 0x0a, 0x02, 0x61, 0x69, 0x18, 0x90, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x02, 0x61, 0x69, 0x22, 0x78, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x24, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x79, 0x69, 0x72, 0x2e, 0x75, 0x7a, 0x69, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0xc8, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x79, 0x69, 0x72,
	0x2e, 0x75, 0x7a, 0x69, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x6e,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x66, 0x0a, 0x17, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x7a, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x7a,
	0x69, 0x5f, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x0a, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0xc8, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x79, 0x69, 0x72, 0x2e,
	0x75, 0x7a, 0x69, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x63, 0x0a, 0x16, 0x49, 0x6e, 0x73,
	0x65, 0x72, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x7a, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x7a, 0x69, 0x5f, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x09, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x79, 0x69, 0x72, 0x2e, 0x75, 0x7a, 0x69, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x09, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3c,
	0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x22, 0x5e, 0x0a, 0x1b,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0c, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x22, 0x90, 0x02, 0x0a,
	0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x12,
	0x4e, 0x0a, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0xc8, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x31, 0x2e, 0x79, 0x69, 0x72, 0x2e, 0x75, 0x7a, 0x69, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x30, 0x0a, 0x0a, 0x61, 0x76, 0x67, 0x5f, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x18, 0xac, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x79, 0x69, 0x72, 0x2e, 0x75, 0x7a, 0x69, 0x2e, 0x54,
	0x69, 0x72, 0x61, 0x64, 0x73, 0x52, 0x0a, 0x61, 0x76, 0x67, 0x5f, 0x74, 0x69, 0x72, 0x61, 0x64,
	0x73, 0x1a, 0x4c, 0x0a, 0x0d, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x79, 0x69, 0x72, 0x2e, 0x75, 0x7a, 0x69, 0x2e, 0x54, 0x69,
	0x72, 0x61, 0x64, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x89, 0x02, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x12, 0x4a,
	0x0a, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0xc8, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x79, 0x69, 0x72, 0x2e, 0x75, 0x7a, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x0a, 0x61, 0x76,
	0x67, 0x5f, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x18, 0xac, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x79, 0x69, 0x72, 0x2e, 0x75, 0x7a, 0x69, 0x2e, 0x54, 0x69, 0x72, 0x61, 0x64, 0x73,
	0x52, 0x0a, 0x61, 0x76, 0x67, 0x5f, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x1a, 0x4d, 0x0a, 0x0d,
	0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x79, 0x69, 0x72, 0x2e, 0x75, 0x7a, 0x69, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0xfd, 0x09, 0x0a, 0x03,
	0x55, 0x7a, 0x69, 0x12, 0x5b, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x12, 0x1a, 0x2e, 0x79, 0x69, 0x72, 0x2e, 0x75, 0x7a, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x79, 0x69, 0x72, 0x2e, 0x75, 0x7a, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x4f, 0x0a, 0x09, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x55, 0x7a, 0x69, 0x12, 0x19, 0x2e,
	0x79, 0x69, 0x72, 0x2e, 0x75, 0x7a, 0x69, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x55, 0x7a,
	0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x0f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x09, 0x3a, 0x01, 0x2a, 0x22, 0x04, 0x2f, 0x75, 0x7a,
	0x69, 0x12, 0x5d, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x7a, 0x69, 0x12, 0x19,
	0x2e, 0x79, 0x69, 0x72, 0x2e, 0x75, 0x7a, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x7a, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x32, 0x12, 0x2f, 0x75,
	0x7a, 0x69, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2f, 0x7b, 0x75, 0x7a, 0x69, 0x5f, 0x69, 0x64, 0x7d,
	0x12, 0x65, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x7a, 0x69, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1a, 0x2e, 0x79, 0x69, 0x72, 0x2e, 0x75, 0x7a, 0x69, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x7a, 0x69, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x79, 0x69, 0x72, 0x2e, 0x75, 0x7a, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x7a, 0x69, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x75, 0x7a, 0x69, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2f, 0x7b,
	0x75, 0x7a, 0x69, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x54, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x55, 0x7a,
	0x69, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x79, 0x69, 0x72, 0x2e, 0x75, 0x7a, 0x69, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x7a, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x79, 0x69, 0x72, 0x2e, 0x75, 0x7a, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x7a, 0x69, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x12, 0x0d,
	0x2f, 0x75, 0x7a, 0x69, 0x2f, 0x7b, 0x75, 0x7a, 0x69, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x66, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x2e,
	0x79, 0x69, 0x72, 0x2e, 0x75, 0x7a, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x79, 0x69,
	0x72, 0x2e, 0x75, 0x7a, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x13, 0x12, 0x11, 0x2f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2f, 0x7b, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x6d, 0x0a, 0x10, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x20, 0x2e, 0x79, 0x69, 0x72, 0x2e,
	0x75, 0x7a, 0x69, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a, 0x22, 0x14,
	0x2f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x75, 0x7a, 0x69,
	0x5f, 0x69, 0x64, 0x7d, 0x12, 0x6a, 0x0a, 0x0f, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x79, 0x69, 0x72, 0x2e, 0x75, 0x7a,
	0x69, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x75, 0x7a, 0x69, 0x5f, 0x69, 0x64, 0x7d,
	0x12, 0x7d, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x23, 0x2e, 0x79, 0x69, 0x72, 0x2e, 0x75, 0x7a,
	0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a, 0x32,
	0x1e, 0x2f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6d, 0x65, 0x74, 0x61,
	0x2f, 0x7b, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x12,
	0x70, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x79, 0x69, 0x72, 0x2e, 0x75, 0x7a, 0x69, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x24, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x32, 0x19, 0x2f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x7b, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x7d, 0x12, 0x6d, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x79, 0x69, 0x72, 0x2e, 0x75, 0x7a, 0x69, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x21, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x2a, 0x19, 0x2f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x7b, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d,
	0x12, 0x88, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x24, 0x2e, 0x79, 0x69, 0x72, 0x2e,
	0x75, 0x7a, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x2a,
	0x2a, 0x2f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x2f, 0x7b, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x42, 0x15, 0x5a, 0x13, 0x79,
	0x69, 0x72, 0x2f, 0x75, 0x7a, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x7a, 0x69, 0x3b, 0x75,
	0x7a, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_uzi_proto_rawDescOnce sync.Once
	file_uzi_proto_rawDescData = file_uzi_proto_rawDesc
)

func file_uzi_proto_rawDescGZIP() []byte {
	file_uzi_proto_rawDescOnce.Do(func() {
		file_uzi_proto_rawDescData = protoimpl.X.CompressGZIP(file_uzi_proto_rawDescData)
	})
	return file_uzi_proto_rawDescData
}

var file_uzi_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_uzi_proto_goTypes = []any{
	(*GetDevicesRequest)(nil),           // 0: yir.uzi.GetDevicesRequest
	(*UziDevice)(nil),                   // 1: yir.uzi.UziDevice
	(*GetDevicesResponse)(nil),          // 2: yir.uzi.GetDevicesResponse
	(*Tirads)(nil),                      // 3: yir.uzi.Tirads
	(*Segment)(nil),                     // 4: yir.uzi.Segment
	(*Formation)(nil),                   // 5: yir.uzi.Formation
	(*Image)(nil),                       // 6: yir.uzi.Image
	(*UziDataRef)(nil),                  // 7: yir.uzi.UziDataRef
	(*UziData)(nil),                     // 8: yir.uzi.UziData
	(*InsertUziRequest)(nil),            // 9: yir.uzi.InsertUziRequest
	(*UpdateUziRequest)(nil),            // 10: yir.uzi.UpdateUziRequest
	(*GetUziMetaRequest)(nil),           // 11: yir.uzi.GetUziMetaRequest
	(*GetUziMetaResponse)(nil),          // 12: yir.uzi.GetUziMetaResponse
	(*GetUziRequest)(nil),               // 13: yir.uzi.GetUziRequest
	(*GetUziResponse)(nil),              // 14: yir.uzi.GetUziResponse
	(*GetImageInfoRequest)(nil),         // 15: yir.uzi.GetImageInfoRequest
	(*FormationOnImage)(nil),            // 16: yir.uzi.FormationOnImage
	(*GetImageInfoResponse)(nil),        // 17: yir.uzi.GetImageInfoResponse
	(*InsertFormationsRequest)(nil),     // 18: yir.uzi.InsertFormationsRequest
	(*InsertFormationRequest)(nil),      // 19: yir.uzi.InsertFormationRequest
	(*DeleteFormationRequest)(nil),      // 20: yir.uzi.DeleteFormationRequest
	(*DeleteFormationImageRequest)(nil), // 21: yir.uzi.DeleteFormationImageRequest
	(*UpdateFormationMetaRequest)(nil),  // 22: yir.uzi.UpdateFormationMetaRequest
	(*UpdateFormationRequest)(nil),      // 23: yir.uzi.UpdateFormationRequest
	nil,                                 // 24: yir.uzi.Formation.SegmentsEntry
	nil,                                 // 25: yir.uzi.UpdateFormationMetaRequest.SegmentsEntry
	nil,                                 // 26: yir.uzi.UpdateFormationRequest.SegmentsEntry
	(*emptypb.Empty)(nil),               // 27: google.protobuf.Empty
}
var file_uzi_proto_depIdxs = []int32{
	1,  // 0: yir.uzi.GetDevicesResponse.devices:type_name -> yir.uzi.UziDevice
	3,  // 1: yir.uzi.Segment.tirads:type_name -> yir.uzi.Tirads
	24, // 2: yir.uzi.Formation.segments:type_name -> yir.uzi.Formation.SegmentsEntry
	3,  // 3: yir.uzi.Formation.avg_tirads:type_name -> yir.uzi.Tirads
	1,  // 4: yir.uzi.UziData.device:type_name -> yir.uzi.UziDevice
	7,  // 5: yir.uzi.InsertUziRequest.uzi:type_name -> yir.uzi.UziDataRef
	6,  // 6: yir.uzi.InsertUziRequest.images:type_name -> yir.uzi.Image
	5,  // 7: yir.uzi.InsertUziRequest.formations:type_name -> yir.uzi.Formation
	8,  // 8: yir.uzi.GetUziMetaResponse.uzi:type_name -> yir.uzi.UziData
	6,  // 9: yir.uzi.GetUziMetaResponse.images:type_name -> yir.uzi.Image
	8,  // 10: yir.uzi.GetUziResponse.uzi:type_name -> yir.uzi.UziData
	6,  // 11: yir.uzi.GetUziResponse.images:type_name -> yir.uzi.Image
	5,  // 12: yir.uzi.GetUziResponse.formations:type_name -> yir.uzi.Formation
	4,  // 13: yir.uzi.FormationOnImage.segment:type_name -> yir.uzi.Segment
	3,  // 14: yir.uzi.FormationOnImage.avg_tirads:type_name -> yir.uzi.Tirads
	6,  // 15: yir.uzi.GetImageInfoResponse.image:type_name -> yir.uzi.Image
	16, // 16: yir.uzi.GetImageInfoResponse.formations:type_name -> yir.uzi.FormationOnImage
	5,  // 17: yir.uzi.InsertFormationsRequest.formations:type_name -> yir.uzi.Formation
	5,  // 18: yir.uzi.InsertFormationRequest.formation:type_name -> yir.uzi.Formation
	25, // 19: yir.uzi.UpdateFormationMetaRequest.segments:type_name -> yir.uzi.UpdateFormationMetaRequest.SegmentsEntry
	3,  // 20: yir.uzi.UpdateFormationMetaRequest.avg_tirads:type_name -> yir.uzi.Tirads
	26, // 21: yir.uzi.UpdateFormationRequest.segments:type_name -> yir.uzi.UpdateFormationRequest.SegmentsEntry
	3,  // 22: yir.uzi.UpdateFormationRequest.avg_tirads:type_name -> yir.uzi.Tirads
	4,  // 23: yir.uzi.Formation.SegmentsEntry.value:type_name -> yir.uzi.Segment
	3,  // 24: yir.uzi.UpdateFormationMetaRequest.SegmentsEntry.value:type_name -> yir.uzi.Tirads
	4,  // 25: yir.uzi.UpdateFormationRequest.SegmentsEntry.value:type_name -> yir.uzi.Segment
	0,  // 26: yir.uzi.Uzi.GetDevices:input_type -> yir.uzi.GetDevicesRequest
	9,  // 27: yir.uzi.Uzi.InsertUzi:input_type -> yir.uzi.InsertUziRequest
	10, // 28: yir.uzi.Uzi.UpdateUzi:input_type -> yir.uzi.UpdateUziRequest
	11, // 29: yir.uzi.Uzi.GetUziMetaInfo:input_type -> yir.uzi.GetUziMetaRequest
	13, // 30: yir.uzi.Uzi.GetUziInfo:input_type -> yir.uzi.GetUziRequest
	15, // 31: yir.uzi.Uzi.GetImageInfo:input_type -> yir.uzi.GetImageInfoRequest
	18, // 32: yir.uzi.Uzi.InsertFormations:input_type -> yir.uzi.InsertFormationsRequest
	19, // 33: yir.uzi.Uzi.InsertFormation:input_type -> yir.uzi.InsertFormationRequest
	22, // 34: yir.uzi.Uzi.UpdateFormationMeta:input_type -> yir.uzi.UpdateFormationMetaRequest
	23, // 35: yir.uzi.Uzi.UpdateFormation:input_type -> yir.uzi.UpdateFormationRequest
	20, // 36: yir.uzi.Uzi.DeleteFormation:input_type -> yir.uzi.DeleteFormationRequest
	21, // 37: yir.uzi.Uzi.DeleteFormationImage:input_type -> yir.uzi.DeleteFormationImageRequest
	2,  // 38: yir.uzi.Uzi.GetDevices:output_type -> yir.uzi.GetDevicesResponse
	27, // 39: yir.uzi.Uzi.InsertUzi:output_type -> google.protobuf.Empty
	27, // 40: yir.uzi.Uzi.UpdateUzi:output_type -> google.protobuf.Empty
	12, // 41: yir.uzi.Uzi.GetUziMetaInfo:output_type -> yir.uzi.GetUziMetaResponse
	14, // 42: yir.uzi.Uzi.GetUziInfo:output_type -> yir.uzi.GetUziResponse
	17, // 43: yir.uzi.Uzi.GetImageInfo:output_type -> yir.uzi.GetImageInfoResponse
	27, // 44: yir.uzi.Uzi.InsertFormations:output_type -> google.protobuf.Empty
	27, // 45: yir.uzi.Uzi.InsertFormation:output_type -> google.protobuf.Empty
	27, // 46: yir.uzi.Uzi.UpdateFormationMeta:output_type -> google.protobuf.Empty
	27, // 47: yir.uzi.Uzi.UpdateFormation:output_type -> google.protobuf.Empty
	27, // 48: yir.uzi.Uzi.DeleteFormation:output_type -> google.protobuf.Empty
	27, // 49: yir.uzi.Uzi.DeleteFormationImage:output_type -> google.protobuf.Empty
	38, // [38:50] is the sub-list for method output_type
	26, // [26:38] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_uzi_proto_init() }
func file_uzi_proto_init() {
	if File_uzi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_uzi_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetDevicesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uzi_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*UziDevice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uzi_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetDevicesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uzi_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Tirads); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uzi_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Segment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uzi_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Formation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uzi_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uzi_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*UziDataRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uzi_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*UziData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uzi_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*InsertUziRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uzi_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateUziRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uzi_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*GetUziMetaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uzi_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*GetUziMetaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uzi_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*GetUziRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uzi_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*GetUziResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uzi_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*GetImageInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uzi_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*FormationOnImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uzi_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*GetImageInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uzi_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*InsertFormationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uzi_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*InsertFormationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uzi_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteFormationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uzi_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteFormationImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uzi_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateFormationMetaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uzi_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateFormationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_uzi_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_uzi_proto_goTypes,
		DependencyIndexes: file_uzi_proto_depIdxs,
		MessageInfos:      file_uzi_proto_msgTypes,
	}.Build()
	File_uzi_proto = out.File
	file_uzi_proto_rawDesc = nil
	file_uzi_proto_goTypes = nil
	file_uzi_proto_depIdxs = nil
}
