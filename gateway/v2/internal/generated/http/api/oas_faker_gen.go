// Code generated by ogen, DO NOT EDIT.

package api

import (
	"time"

	"github.com/google/uuid"
)

// SetFake set fake values.
func (s *Contor) SetFake() {
	var unwrapped []ContorItem
	{
		unwrapped = nil
		for i := 0; i < 0; i++ {
			var elem ContorItem
			{
				elem.SetFake()
			}
			unwrapped = append(unwrapped, elem)
		}
	}
	*s = Contor(unwrapped)
}

// SetFake set fake values.
func (s *ContorItem) SetFake() {
	{
		{
			s.X = int(0)
		}
	}
	{
		{
			s.Y = int(0)
		}
	}
}

// SetFake set fake values.
func (s *Device) SetFake() {
	{
		{
			s.ID = int(0)
		}
	}
	{
		{
			s.Name = "string"
		}
	}
}

// SetFake set fake values.
func (s *Echographics) SetFake() {
	{
		{
			s.ID = uuid.New()
		}
	}
	{
		{
			s.Contors.SetFake()
		}
	}
	{
		{
			s.LeftLobeLength.SetFake()
		}
	}
	{
		{
			s.LeftLobeWidth.SetFake()
		}
	}
	{
		{
			s.LeftLobeThick.SetFake()
		}
	}
	{
		{
			s.LeftLobeVolum.SetFake()
		}
	}
	{
		{
			s.RightLobeLength.SetFake()
		}
	}
	{
		{
			s.RightLobeWidth.SetFake()
		}
	}
	{
		{
			s.RightLobeThick.SetFake()
		}
	}
	{
		{
			s.RightLobeVolum.SetFake()
		}
	}
	{
		{
			s.GlandVolum.SetFake()
		}
	}
	{
		{
			s.Isthmus.SetFake()
		}
	}
	{
		{
			s.Struct.SetFake()
		}
	}
	{
		{
			s.Echogenicity.SetFake()
		}
	}
	{
		{
			s.RegionalLymph.SetFake()
		}
	}
	{
		{
			s.Vascularization.SetFake()
		}
	}
	{
		{
			s.Location.SetFake()
		}
	}
	{
		{
			s.Additional.SetFake()
		}
	}
	{
		{
			s.Conclusion.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *Error) SetFake() {
	{
		{
			s.Code = int64(0)
		}
	}
	{
		{
			s.Message = "string"
		}
	}
}

// SetFake set fake values.
func (s *Image) SetFake() {
	{
		{
			s.ID = uuid.New()
		}
	}
	{
		{
			s.UziID = uuid.New()
		}
	}
	{
		{
			s.Page = int(0)
		}
	}
}

// SetFake set fake values.
func (s *Node) SetFake() {
	{
		{
			s.ID = uuid.New()
		}
	}
	{
		{
			s.Ai = true
		}
	}
	{
		{
			s.UziID = uuid.New()
		}
	}
	{
		{
			s.Tirads23 = float64(0)
		}
	}
	{
		{
			s.Tirads4 = float64(0)
		}
	}
	{
		{
			s.Tirads5 = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *OptBool) SetFake() {
	var elem bool
	{
		elem = true
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptFloat64) SetFake() {
	var elem float64
	{
		elem = float64(0)
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptString) SetFake() {
	var elem string
	{
		elem = "string"
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *Segment) SetFake() {
	{
		{
			s.ID = uuid.New()
		}
	}
	{
		{
			s.ImageID = uuid.New()
		}
	}
	{
		{
			s.NodeID = uuid.New()
		}
	}
	{
		{
			s.Contor.SetFake()
		}
	}
	{
		{
			s.Tirads23 = float64(0)
		}
	}
	{
		{
			s.Tirads4 = float64(0)
		}
	}
	{
		{
			s.Tirads5 = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *SimpleUuid) SetFake() {
	{
		{
			s.ID = uuid.New()
		}
	}
}

// SetFake set fake values.
func (s *Uzi) SetFake() {
	{
		{
			s.ID = uuid.New()
		}
	}
	{
		{
			s.Projection = "string"
		}
	}
	{
		{
			s.Checked = true
		}
	}
	{
		{
			s.ExternalID = uuid.New()
		}
	}
	{
		{
			s.DeviceID = int(0)
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
	{
		{
			s.CreateAt = time.Now()
		}
	}
}

// SetFake set fake values.
func (s *UziDevicePostOK) SetFake() {
	{
		{
			s.ID = int(0)
		}
	}
}

// SetFake set fake values.
func (s *UziDevicePostReq) SetFake() {
	{
		{
			s.Name = "string"
		}
	}
}

// SetFake set fake values.
func (s *UziDevicesGetOKApplicationJSON) SetFake() {
	var unwrapped []Device
	{
		unwrapped = nil
		for i := 0; i < 0; i++ {
			var elem Device
			{
				elem.SetFake()
			}
			unwrapped = append(unwrapped, elem)
		}
	}
	*s = UziDevicesGetOKApplicationJSON(unwrapped)
}

// SetFake set fake values.
func (s *UziIDImagesGetOKApplicationJSON) SetFake() {
	var unwrapped []Image
	{
		unwrapped = nil
		for i := 0; i < 0; i++ {
			var elem Image
			{
				elem.SetFake()
			}
			unwrapped = append(unwrapped, elem)
		}
	}
	*s = UziIDImagesGetOKApplicationJSON(unwrapped)
}

// SetFake set fake values.
func (s *UziIDNodesGetOKApplicationJSON) SetFake() {
	var unwrapped []Node
	{
		unwrapped = nil
		for i := 0; i < 0; i++ {
			var elem Node
			{
				elem.SetFake()
			}
			unwrapped = append(unwrapped, elem)
		}
	}
	*s = UziIDNodesGetOKApplicationJSON(unwrapped)
}

// SetFake set fake values.
func (s *UziIDPatchReq) SetFake() {
	{
		{
			s.Projection.SetFake()
		}
	}
	{
		{
			s.Checked.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UziImageIDNodesSegmentsGetOK) SetFake() {
	{
		{
			s.Nodes = nil
			for i := 0; i < 0; i++ {
				var elem Node
				{
					elem.SetFake()
				}
				s.Nodes = append(s.Nodes, elem)
			}
		}
	}
	{
		{
			s.Segments = nil
			for i := 0; i < 0; i++ {
				var elem Segment
				{
					elem.SetFake()
				}
				s.Segments = append(s.Segments, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UziNodesIDPatchReq) SetFake() {
	{
		{
			s.Tirads23.SetFake()
		}
	}
	{
		{
			s.Tirads4.SetFake()
		}
	}
	{
		{
			s.Tirads5.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UziNodesIDSegmentsGetOKApplicationJSON) SetFake() {
	var unwrapped []Segment
	{
		unwrapped = nil
		for i := 0; i < 0; i++ {
			var elem Segment
			{
				elem.SetFake()
			}
			unwrapped = append(unwrapped, elem)
		}
	}
	*s = UziNodesIDSegmentsGetOKApplicationJSON(unwrapped)
}

// SetFake set fake values.
func (s *UziNodesSegmentsPostOK) SetFake() {
	{
		{
			s.NodeID = uuid.New()
		}
	}
	{
		{
			s.SegmentIds = nil
			for i := 0; i < 0; i++ {
				var elem uuid.UUID
				{
					elem = uuid.New()
				}
				s.SegmentIds = append(s.SegmentIds, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UziNodesSegmentsPostReq) SetFake() {
	{
		{
			s.Node.SetFake()
		}
	}
	{
		{
			s.Segments = nil
			for i := 0; i < 0; i++ {
				var elem UziNodesSegmentsPostReqSegmentsItem
				{
					elem.SetFake()
				}
				s.Segments = append(s.Segments, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *UziNodesSegmentsPostReqNode) SetFake() {
	{
		{
			s.UziID = uuid.New()
		}
	}
	{
		{
			s.Ai = true
		}
	}
	{
		{
			s.Tirads23 = float64(0)
		}
	}
	{
		{
			s.Tirads4 = float64(0)
		}
	}
	{
		{
			s.Tirads5 = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *UziNodesSegmentsPostReqSegmentsItem) SetFake() {
	{
		{
			s.ImageID = uuid.New()
		}
	}
	{
		{
			s.Contor.SetFake()
		}
	}
	{
		{
			s.Tirads23 = float64(0)
		}
	}
	{
		{
			s.Tirads4 = float64(0)
		}
	}
	{
		{
			s.Tirads5 = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *UziSegmentIDPatchReq) SetFake() {
	{
		{
			s.Tirads23.SetFake()
		}
	}
	{
		{
			s.Tirads4.SetFake()
		}
	}
	{
		{
			s.Tirads5.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *UziSegmentPostReq) SetFake() {
	{
		{
			s.ImageID = uuid.New()
		}
	}
	{
		{
			s.NodeID = uuid.New()
		}
	}
	{
		{
			s.Contor.SetFake()
		}
	}
	{
		{
			s.Tirads23 = float64(0)
		}
	}
	{
		{
			s.Tirads4 = float64(0)
		}
	}
	{
		{
			s.Tirads5 = float64(0)
		}
	}
}

// SetFake set fake values.
func (s *UziStatus) SetFake() {
	*s = UziStatusNew
}

// SetFake set fake values.
func (s *UzisExternalIDGetOKApplicationJSON) SetFake() {
	var unwrapped []Uzi
	{
		unwrapped = nil
		for i := 0; i < 0; i++ {
			var elem Uzi
			{
				elem.SetFake()
			}
			unwrapped = append(unwrapped, elem)
		}
	}
	*s = UzisExternalIDGetOKApplicationJSON(unwrapped)
}
