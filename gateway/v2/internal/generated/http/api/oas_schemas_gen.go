// Code generated by ogen, DO NOT EDIT.

package api

import (
	"fmt"
	"time"

	"github.com/go-faster/errors"
	"github.com/google/uuid"

	ht "github.com/ogen-go/ogen/http"
)

func (s *ErrorStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

type Contor []ContorItem

type ContorItem struct {
	// X координата точки.
	X int `json:"x"`
	// Y координата точки.
	Y int `json:"y"`
}

// GetX returns the value of X.
func (s *ContorItem) GetX() int {
	return s.X
}

// GetY returns the value of Y.
func (s *ContorItem) GetY() int {
	return s.Y
}

// SetX sets the value of X.
func (s *ContorItem) SetX(val int) {
	s.X = val
}

// SetY sets the value of Y.
func (s *ContorItem) SetY(val int) {
	s.Y = val
}

// Узи аппарат.
// Ref: #/components/schemas/device
type Device struct {
	// Id устройства.
	ID int `json:"id"`
	// Название устройства.
	Name string `json:"name"`
}

// GetID returns the value of ID.
func (s *Device) GetID() int {
	return s.ID
}

// GetName returns the value of Name.
func (s *Device) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *Device) SetID(val int) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *Device) SetName(val string) {
	s.Name = val
}

// Эхографическая информация.
// Ref: #/components/schemas/echographics
type Echographics struct {
	// Id узи.
	ID uuid.UUID `json:"id"`
	// Контуры.
	Contors OptString `json:"contors"`
	// Длина левого доли.
	LeftLobeLength OptFloat64 `json:"left_lobe_length"`
	// Ширина левого доли.
	LeftLobeWidth OptFloat64 `json:"left_lobe_width"`
	// Толщина левого доли.
	LeftLobeThick OptFloat64 `json:"left_lobe_thick"`
	// Объем левого доли.
	LeftLobeVolum OptFloat64 `json:"left_lobe_volum"`
	// Длина правого доли.
	RightLobeLength OptFloat64 `json:"right_lobe_length"`
	// Ширина правого доли.
	RightLobeWidth OptFloat64 `json:"right_lobe_width"`
	// Толщина правого доли.
	RightLobeThick OptFloat64 `json:"right_lobe_thick"`
	// Объем правого доли.
	RightLobeVolum OptFloat64 `json:"right_lobe_volum"`
	// Объем железы.
	GlandVolum OptFloat64 `json:"gland_volum"`
	// Перешеек.
	Isthmus OptFloat64 `json:"isthmus"`
	// Структура.
	Struct OptString `json:"struct"`
	// Эхогенность.
	Echogenicity OptString `json:"echogenicity"`
	// Регионарные лимфоузлы.
	RegionalLymph OptString `json:"regional_lymph"`
	// Васкуляризация по ЦДК.
	Vascularization OptString `json:"vascularization"`
	// Расположение.
	Location OptString `json:"location"`
	// Дополнительная информация.
	Additional OptString `json:"additional"`
	// Заключение.
	Conclusion OptString `json:"conclusion"`
}

// GetID returns the value of ID.
func (s *Echographics) GetID() uuid.UUID {
	return s.ID
}

// GetContors returns the value of Contors.
func (s *Echographics) GetContors() OptString {
	return s.Contors
}

// GetLeftLobeLength returns the value of LeftLobeLength.
func (s *Echographics) GetLeftLobeLength() OptFloat64 {
	return s.LeftLobeLength
}

// GetLeftLobeWidth returns the value of LeftLobeWidth.
func (s *Echographics) GetLeftLobeWidth() OptFloat64 {
	return s.LeftLobeWidth
}

// GetLeftLobeThick returns the value of LeftLobeThick.
func (s *Echographics) GetLeftLobeThick() OptFloat64 {
	return s.LeftLobeThick
}

// GetLeftLobeVolum returns the value of LeftLobeVolum.
func (s *Echographics) GetLeftLobeVolum() OptFloat64 {
	return s.LeftLobeVolum
}

// GetRightLobeLength returns the value of RightLobeLength.
func (s *Echographics) GetRightLobeLength() OptFloat64 {
	return s.RightLobeLength
}

// GetRightLobeWidth returns the value of RightLobeWidth.
func (s *Echographics) GetRightLobeWidth() OptFloat64 {
	return s.RightLobeWidth
}

// GetRightLobeThick returns the value of RightLobeThick.
func (s *Echographics) GetRightLobeThick() OptFloat64 {
	return s.RightLobeThick
}

// GetRightLobeVolum returns the value of RightLobeVolum.
func (s *Echographics) GetRightLobeVolum() OptFloat64 {
	return s.RightLobeVolum
}

// GetGlandVolum returns the value of GlandVolum.
func (s *Echographics) GetGlandVolum() OptFloat64 {
	return s.GlandVolum
}

// GetIsthmus returns the value of Isthmus.
func (s *Echographics) GetIsthmus() OptFloat64 {
	return s.Isthmus
}

// GetStruct returns the value of Struct.
func (s *Echographics) GetStruct() OptString {
	return s.Struct
}

// GetEchogenicity returns the value of Echogenicity.
func (s *Echographics) GetEchogenicity() OptString {
	return s.Echogenicity
}

// GetRegionalLymph returns the value of RegionalLymph.
func (s *Echographics) GetRegionalLymph() OptString {
	return s.RegionalLymph
}

// GetVascularization returns the value of Vascularization.
func (s *Echographics) GetVascularization() OptString {
	return s.Vascularization
}

// GetLocation returns the value of Location.
func (s *Echographics) GetLocation() OptString {
	return s.Location
}

// GetAdditional returns the value of Additional.
func (s *Echographics) GetAdditional() OptString {
	return s.Additional
}

// GetConclusion returns the value of Conclusion.
func (s *Echographics) GetConclusion() OptString {
	return s.Conclusion
}

// SetID sets the value of ID.
func (s *Echographics) SetID(val uuid.UUID) {
	s.ID = val
}

// SetContors sets the value of Contors.
func (s *Echographics) SetContors(val OptString) {
	s.Contors = val
}

// SetLeftLobeLength sets the value of LeftLobeLength.
func (s *Echographics) SetLeftLobeLength(val OptFloat64) {
	s.LeftLobeLength = val
}

// SetLeftLobeWidth sets the value of LeftLobeWidth.
func (s *Echographics) SetLeftLobeWidth(val OptFloat64) {
	s.LeftLobeWidth = val
}

// SetLeftLobeThick sets the value of LeftLobeThick.
func (s *Echographics) SetLeftLobeThick(val OptFloat64) {
	s.LeftLobeThick = val
}

// SetLeftLobeVolum sets the value of LeftLobeVolum.
func (s *Echographics) SetLeftLobeVolum(val OptFloat64) {
	s.LeftLobeVolum = val
}

// SetRightLobeLength sets the value of RightLobeLength.
func (s *Echographics) SetRightLobeLength(val OptFloat64) {
	s.RightLobeLength = val
}

// SetRightLobeWidth sets the value of RightLobeWidth.
func (s *Echographics) SetRightLobeWidth(val OptFloat64) {
	s.RightLobeWidth = val
}

// SetRightLobeThick sets the value of RightLobeThick.
func (s *Echographics) SetRightLobeThick(val OptFloat64) {
	s.RightLobeThick = val
}

// SetRightLobeVolum sets the value of RightLobeVolum.
func (s *Echographics) SetRightLobeVolum(val OptFloat64) {
	s.RightLobeVolum = val
}

// SetGlandVolum sets the value of GlandVolum.
func (s *Echographics) SetGlandVolum(val OptFloat64) {
	s.GlandVolum = val
}

// SetIsthmus sets the value of Isthmus.
func (s *Echographics) SetIsthmus(val OptFloat64) {
	s.Isthmus = val
}

// SetStruct sets the value of Struct.
func (s *Echographics) SetStruct(val OptString) {
	s.Struct = val
}

// SetEchogenicity sets the value of Echogenicity.
func (s *Echographics) SetEchogenicity(val OptString) {
	s.Echogenicity = val
}

// SetRegionalLymph sets the value of RegionalLymph.
func (s *Echographics) SetRegionalLymph(val OptString) {
	s.RegionalLymph = val
}

// SetVascularization sets the value of Vascularization.
func (s *Echographics) SetVascularization(val OptString) {
	s.Vascularization = val
}

// SetLocation sets the value of Location.
func (s *Echographics) SetLocation(val OptString) {
	s.Location = val
}

// SetAdditional sets the value of Additional.
func (s *Echographics) SetAdditional(val OptString) {
	s.Additional = val
}

// SetConclusion sets the value of Conclusion.
func (s *Echographics) SetConclusion(val OptString) {
	s.Conclusion = val
}

func (*Echographics) uziEchographicsUziIDGetRes()   {}
func (*Echographics) uziEchographicsUziIDPatchRes() {}

// Ошибка.
// Ref: #/components/schemas/error
type Error struct {
	Code    int64  `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *Error) GetCode() int64 {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *Error) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *Error) SetCode(val int64) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *Error) SetMessage(val string) {
	s.Message = val
}

// ErrorStatusCode wraps Error with StatusCode.
type ErrorStatusCode struct {
	StatusCode int
	Response   Error
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrorStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrorStatusCode) GetResponse() Error {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrorStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrorStatusCode) SetResponse(val Error) {
	s.Response = val
}

func (*ErrorStatusCode) uziDevicePostRes()              {}
func (*ErrorStatusCode) uziDevicesGetRes()              {}
func (*ErrorStatusCode) uziEchographicsUziIDGetRes()    {}
func (*ErrorStatusCode) uziEchographicsUziIDPatchRes()  {}
func (*ErrorStatusCode) uziIDGetRes()                   {}
func (*ErrorStatusCode) uziIDImagesGetRes()             {}
func (*ErrorStatusCode) uziIDNodesGetRes()              {}
func (*ErrorStatusCode) uziIDPatchRes()                 {}
func (*ErrorStatusCode) uziImageIDNodesSegmentsGetRes() {}
func (*ErrorStatusCode) uziNodesIDDeleteRes()           {}
func (*ErrorStatusCode) uziNodesIDPatchRes()            {}
func (*ErrorStatusCode) uziNodesIDSegmentsGetRes()      {}
func (*ErrorStatusCode) uziNodesSegmentsPostRes()       {}
func (*ErrorStatusCode) uziPostRes()                    {}
func (*ErrorStatusCode) uziSegmentIDDeleteRes()         {}
func (*ErrorStatusCode) uziSegmentIDPatchRes()          {}
func (*ErrorStatusCode) uziSegmentPostRes()             {}
func (*ErrorStatusCode) uzisExternalIDGetRes()          {}

// Изображение.
// Ref: #/components/schemas/image
type Image struct {
	// Id изображения.
	ID uuid.UUID `json:"id"`
	// Id узи, к которому относится изображение.
	UziID uuid.UUID `json:"uzi_id"`
	// Номер страницы.
	Page int `json:"page"`
}

// GetID returns the value of ID.
func (s *Image) GetID() uuid.UUID {
	return s.ID
}

// GetUziID returns the value of UziID.
func (s *Image) GetUziID() uuid.UUID {
	return s.UziID
}

// GetPage returns the value of Page.
func (s *Image) GetPage() int {
	return s.Page
}

// SetID sets the value of ID.
func (s *Image) SetID(val uuid.UUID) {
	s.ID = val
}

// SetUziID sets the value of UziID.
func (s *Image) SetUziID(val uuid.UUID) {
	s.UziID = val
}

// SetPage sets the value of Page.
func (s *Image) SetPage(val int) {
	s.Page = val
}

// Узел.
// Ref: #/components/schemas/node
type Node struct {
	// Id узла.
	ID uuid.UUID `json:"id"`
	// Признак того, что узел был обработан нейронкой.
	Ai bool `json:"ai"`
	// Id узи, к которому относится узел.
	UziID uuid.UUID `json:"uzi_id"`
	// Вероятность наличия опухоли в 23-й группе.
	Tirads23 float64 `json:"tirads_23"`
	// Вероятность наличия опухоли в 4-й группе.
	Tirads4 float64 `json:"tirads_4"`
	// Вероятность наличия опухоли в 5-й группе.
	Tirads5 float64 `json:"tirads_5"`
}

// GetID returns the value of ID.
func (s *Node) GetID() uuid.UUID {
	return s.ID
}

// GetAi returns the value of Ai.
func (s *Node) GetAi() bool {
	return s.Ai
}

// GetUziID returns the value of UziID.
func (s *Node) GetUziID() uuid.UUID {
	return s.UziID
}

// GetTirads23 returns the value of Tirads23.
func (s *Node) GetTirads23() float64 {
	return s.Tirads23
}

// GetTirads4 returns the value of Tirads4.
func (s *Node) GetTirads4() float64 {
	return s.Tirads4
}

// GetTirads5 returns the value of Tirads5.
func (s *Node) GetTirads5() float64 {
	return s.Tirads5
}

// SetID sets the value of ID.
func (s *Node) SetID(val uuid.UUID) {
	s.ID = val
}

// SetAi sets the value of Ai.
func (s *Node) SetAi(val bool) {
	s.Ai = val
}

// SetUziID sets the value of UziID.
func (s *Node) SetUziID(val uuid.UUID) {
	s.UziID = val
}

// SetTirads23 sets the value of Tirads23.
func (s *Node) SetTirads23(val float64) {
	s.Tirads23 = val
}

// SetTirads4 sets the value of Tirads4.
func (s *Node) SetTirads4(val float64) {
	s.Tirads4 = val
}

// SetTirads5 sets the value of Tirads5.
func (s *Node) SetTirads5(val float64) {
	s.Tirads5 = val
}

func (*Node) uziNodesIDPatchRes() {}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptFloat64 returns new OptFloat64 with value set to v.
func NewOptFloat64(v float64) OptFloat64 {
	return OptFloat64{
		Value: v,
		Set:   true,
	}
}

// OptFloat64 is optional float64.
type OptFloat64 struct {
	Value float64
	Set   bool
}

// IsSet returns true if OptFloat64 was set.
func (o OptFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFloat64) SetTo(v float64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFloat64) Get() (v float64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Сегмент узла на изображении.
// Ref: #/components/schemas/segment
type Segment struct {
	// Id сегмента.
	ID uuid.UUID `json:"id"`
	// Id изображения, к которому относится сегмент.
	ImageID uuid.UUID `json:"image_id"`
	// Id узла, к которому относится сегмент.
	NodeID uuid.UUID `json:"node_id"`
	// Контур сегмента.
	Contor Contor `json:"contor"`
	// Вероятность наличия опухоли в 23-й группе.
	Tirads23 float64 `json:"tirads_23"`
	// Вероятность наличия опухоли в 4-й группе.
	Tirads4 float64 `json:"tirads_4"`
	// Вероятность наличия опухоли в 5-й группе.
	Tirads5 float64 `json:"tirads_5"`
}

// GetID returns the value of ID.
func (s *Segment) GetID() uuid.UUID {
	return s.ID
}

// GetImageID returns the value of ImageID.
func (s *Segment) GetImageID() uuid.UUID {
	return s.ImageID
}

// GetNodeID returns the value of NodeID.
func (s *Segment) GetNodeID() uuid.UUID {
	return s.NodeID
}

// GetContor returns the value of Contor.
func (s *Segment) GetContor() Contor {
	return s.Contor
}

// GetTirads23 returns the value of Tirads23.
func (s *Segment) GetTirads23() float64 {
	return s.Tirads23
}

// GetTirads4 returns the value of Tirads4.
func (s *Segment) GetTirads4() float64 {
	return s.Tirads4
}

// GetTirads5 returns the value of Tirads5.
func (s *Segment) GetTirads5() float64 {
	return s.Tirads5
}

// SetID sets the value of ID.
func (s *Segment) SetID(val uuid.UUID) {
	s.ID = val
}

// SetImageID sets the value of ImageID.
func (s *Segment) SetImageID(val uuid.UUID) {
	s.ImageID = val
}

// SetNodeID sets the value of NodeID.
func (s *Segment) SetNodeID(val uuid.UUID) {
	s.NodeID = val
}

// SetContor sets the value of Contor.
func (s *Segment) SetContor(val Contor) {
	s.Contor = val
}

// SetTirads23 sets the value of Tirads23.
func (s *Segment) SetTirads23(val float64) {
	s.Tirads23 = val
}

// SetTirads4 sets the value of Tirads4.
func (s *Segment) SetTirads4(val float64) {
	s.Tirads4 = val
}

// SetTirads5 sets the value of Tirads5.
func (s *Segment) SetTirads5(val float64) {
	s.Tirads5 = val
}

func (*Segment) uziSegmentIDPatchRes() {}

// Uuid.
// Ref: #/components/schemas/simpleUuid
type SimpleUuid struct {
	ID uuid.UUID `json:"id"`
}

// GetID returns the value of ID.
func (s *SimpleUuid) GetID() uuid.UUID {
	return s.ID
}

// SetID sets the value of ID.
func (s *SimpleUuid) SetID(val uuid.UUID) {
	s.ID = val
}

func (*SimpleUuid) uziPostRes()        {}
func (*SimpleUuid) uziSegmentPostRes() {}

// Узи.
// Ref: #/components/schemas/uzi
type Uzi struct {
	// Id узи.
	ID uuid.UUID `json:"id"`
	// Проекция узи.
	Projection string `json:"projection"`
	// Проверенно ли врачем.
	Checked bool `json:"checked"`
	// Id пациента/организации etc. Внешняя связсь.
	ExternalID uuid.UUID `json:"external_id"`
	// Id устройства.
	DeviceID int `json:"device_id"`
	// Статус узи **new** - новое узи **pending** - в обработке
	// нейронкой **completed** - обработано.
	Status UziStatus `json:"status"`
	// Дата создания в формате RFC3339.
	CreateAt time.Time `json:"create_at"`
}

// GetID returns the value of ID.
func (s *Uzi) GetID() uuid.UUID {
	return s.ID
}

// GetProjection returns the value of Projection.
func (s *Uzi) GetProjection() string {
	return s.Projection
}

// GetChecked returns the value of Checked.
func (s *Uzi) GetChecked() bool {
	return s.Checked
}

// GetExternalID returns the value of ExternalID.
func (s *Uzi) GetExternalID() uuid.UUID {
	return s.ExternalID
}

// GetDeviceID returns the value of DeviceID.
func (s *Uzi) GetDeviceID() int {
	return s.DeviceID
}

// GetStatus returns the value of Status.
func (s *Uzi) GetStatus() UziStatus {
	return s.Status
}

// GetCreateAt returns the value of CreateAt.
func (s *Uzi) GetCreateAt() time.Time {
	return s.CreateAt
}

// SetID sets the value of ID.
func (s *Uzi) SetID(val uuid.UUID) {
	s.ID = val
}

// SetProjection sets the value of Projection.
func (s *Uzi) SetProjection(val string) {
	s.Projection = val
}

// SetChecked sets the value of Checked.
func (s *Uzi) SetChecked(val bool) {
	s.Checked = val
}

// SetExternalID sets the value of ExternalID.
func (s *Uzi) SetExternalID(val uuid.UUID) {
	s.ExternalID = val
}

// SetDeviceID sets the value of DeviceID.
func (s *Uzi) SetDeviceID(val int) {
	s.DeviceID = val
}

// SetStatus sets the value of Status.
func (s *Uzi) SetStatus(val UziStatus) {
	s.Status = val
}

// SetCreateAt sets the value of CreateAt.
func (s *Uzi) SetCreateAt(val time.Time) {
	s.CreateAt = val
}

func (*Uzi) uziIDGetRes()   {}
func (*Uzi) uziIDPatchRes() {}

type UziDevicePostOK struct {
	// Id uzi аппарата.
	ID int `json:"id"`
}

// GetID returns the value of ID.
func (s *UziDevicePostOK) GetID() int {
	return s.ID
}

// SetID sets the value of ID.
func (s *UziDevicePostOK) SetID(val int) {
	s.ID = val
}

func (*UziDevicePostOK) uziDevicePostRes() {}

type UziDevicePostReq struct {
	// Именование модели узи аппарата.
	Name string `json:"name"`
}

// GetName returns the value of Name.
func (s *UziDevicePostReq) GetName() string {
	return s.Name
}

// SetName sets the value of Name.
func (s *UziDevicePostReq) SetName(val string) {
	s.Name = val
}

type UziDevicesGetOKApplicationJSON []Device

func (*UziDevicesGetOKApplicationJSON) uziDevicesGetRes() {}

type UziIDImagesGetOKApplicationJSON []Image

func (*UziIDImagesGetOKApplicationJSON) uziIDImagesGetRes() {}

type UziIDNodesGetOKApplicationJSON []Node

func (*UziIDNodesGetOKApplicationJSON) uziIDNodesGetRes() {}

type UziIDPatchReq struct {
	// Проекция узи.
	Projection OptString `json:"projection"`
	// Признак того, что узи проверено врачом.
	Checked OptBool `json:"checked"`
}

// GetProjection returns the value of Projection.
func (s *UziIDPatchReq) GetProjection() OptString {
	return s.Projection
}

// GetChecked returns the value of Checked.
func (s *UziIDPatchReq) GetChecked() OptBool {
	return s.Checked
}

// SetProjection sets the value of Projection.
func (s *UziIDPatchReq) SetProjection(val OptString) {
	s.Projection = val
}

// SetChecked sets the value of Checked.
func (s *UziIDPatchReq) SetChecked(val OptBool) {
	s.Checked = val
}

type UziImageIDNodesSegmentsGetOK struct {
	Nodes    []Node    `json:"nodes"`
	Segments []Segment `json:"segments"`
}

// GetNodes returns the value of Nodes.
func (s *UziImageIDNodesSegmentsGetOK) GetNodes() []Node {
	return s.Nodes
}

// GetSegments returns the value of Segments.
func (s *UziImageIDNodesSegmentsGetOK) GetSegments() []Segment {
	return s.Segments
}

// SetNodes sets the value of Nodes.
func (s *UziImageIDNodesSegmentsGetOK) SetNodes(val []Node) {
	s.Nodes = val
}

// SetSegments sets the value of Segments.
func (s *UziImageIDNodesSegmentsGetOK) SetSegments(val []Segment) {
	s.Segments = val
}

func (*UziImageIDNodesSegmentsGetOK) uziImageIDNodesSegmentsGetRes() {}

// UziNodesIDDeleteOK is response for UziNodesIDDelete operation.
type UziNodesIDDeleteOK struct{}

func (*UziNodesIDDeleteOK) uziNodesIDDeleteRes() {}

type UziNodesIDPatchReq struct {
	Tirads23 OptFloat64 `json:"tirads_23"`
	Tirads4  OptFloat64 `json:"tirads_4"`
	Tirads5  OptFloat64 `json:"tirads_5"`
}

// GetTirads23 returns the value of Tirads23.
func (s *UziNodesIDPatchReq) GetTirads23() OptFloat64 {
	return s.Tirads23
}

// GetTirads4 returns the value of Tirads4.
func (s *UziNodesIDPatchReq) GetTirads4() OptFloat64 {
	return s.Tirads4
}

// GetTirads5 returns the value of Tirads5.
func (s *UziNodesIDPatchReq) GetTirads5() OptFloat64 {
	return s.Tirads5
}

// SetTirads23 sets the value of Tirads23.
func (s *UziNodesIDPatchReq) SetTirads23(val OptFloat64) {
	s.Tirads23 = val
}

// SetTirads4 sets the value of Tirads4.
func (s *UziNodesIDPatchReq) SetTirads4(val OptFloat64) {
	s.Tirads4 = val
}

// SetTirads5 sets the value of Tirads5.
func (s *UziNodesIDPatchReq) SetTirads5(val OptFloat64) {
	s.Tirads5 = val
}

type UziNodesIDSegmentsGetOKApplicationJSON []Segment

func (*UziNodesIDSegmentsGetOKApplicationJSON) uziNodesIDSegmentsGetRes() {}

type UziNodesSegmentsPostOK struct {
	NodeID     uuid.UUID   `json:"node_id"`
	SegmentIds []uuid.UUID `json:"segment_ids"`
}

// GetNodeID returns the value of NodeID.
func (s *UziNodesSegmentsPostOK) GetNodeID() uuid.UUID {
	return s.NodeID
}

// GetSegmentIds returns the value of SegmentIds.
func (s *UziNodesSegmentsPostOK) GetSegmentIds() []uuid.UUID {
	return s.SegmentIds
}

// SetNodeID sets the value of NodeID.
func (s *UziNodesSegmentsPostOK) SetNodeID(val uuid.UUID) {
	s.NodeID = val
}

// SetSegmentIds sets the value of SegmentIds.
func (s *UziNodesSegmentsPostOK) SetSegmentIds(val []uuid.UUID) {
	s.SegmentIds = val
}

func (*UziNodesSegmentsPostOK) uziNodesSegmentsPostRes() {}

type UziNodesSegmentsPostReq struct {
	Node     UziNodesSegmentsPostReqNode           `json:"node"`
	Segments []UziNodesSegmentsPostReqSegmentsItem `json:"segments"`
}

// GetNode returns the value of Node.
func (s *UziNodesSegmentsPostReq) GetNode() UziNodesSegmentsPostReqNode {
	return s.Node
}

// GetSegments returns the value of Segments.
func (s *UziNodesSegmentsPostReq) GetSegments() []UziNodesSegmentsPostReqSegmentsItem {
	return s.Segments
}

// SetNode sets the value of Node.
func (s *UziNodesSegmentsPostReq) SetNode(val UziNodesSegmentsPostReqNode) {
	s.Node = val
}

// SetSegments sets the value of Segments.
func (s *UziNodesSegmentsPostReq) SetSegments(val []UziNodesSegmentsPostReqSegmentsItem) {
	s.Segments = val
}

type UziNodesSegmentsPostReqNode struct {
	UziID    uuid.UUID `json:"uzi_id"`
	Ai       bool      `json:"ai"`
	Tirads23 float64   `json:"tirads_23"`
	Tirads4  float64   `json:"tirads_4"`
	Tirads5  float64   `json:"tirads_5"`
}

// GetUziID returns the value of UziID.
func (s *UziNodesSegmentsPostReqNode) GetUziID() uuid.UUID {
	return s.UziID
}

// GetAi returns the value of Ai.
func (s *UziNodesSegmentsPostReqNode) GetAi() bool {
	return s.Ai
}

// GetTirads23 returns the value of Tirads23.
func (s *UziNodesSegmentsPostReqNode) GetTirads23() float64 {
	return s.Tirads23
}

// GetTirads4 returns the value of Tirads4.
func (s *UziNodesSegmentsPostReqNode) GetTirads4() float64 {
	return s.Tirads4
}

// GetTirads5 returns the value of Tirads5.
func (s *UziNodesSegmentsPostReqNode) GetTirads5() float64 {
	return s.Tirads5
}

// SetUziID sets the value of UziID.
func (s *UziNodesSegmentsPostReqNode) SetUziID(val uuid.UUID) {
	s.UziID = val
}

// SetAi sets the value of Ai.
func (s *UziNodesSegmentsPostReqNode) SetAi(val bool) {
	s.Ai = val
}

// SetTirads23 sets the value of Tirads23.
func (s *UziNodesSegmentsPostReqNode) SetTirads23(val float64) {
	s.Tirads23 = val
}

// SetTirads4 sets the value of Tirads4.
func (s *UziNodesSegmentsPostReqNode) SetTirads4(val float64) {
	s.Tirads4 = val
}

// SetTirads5 sets the value of Tirads5.
func (s *UziNodesSegmentsPostReqNode) SetTirads5(val float64) {
	s.Tirads5 = val
}

type UziNodesSegmentsPostReqSegmentsItem struct {
	ImageID  uuid.UUID `json:"image_id"`
	Contor   Contor    `json:"contor"`
	Tirads23 float64   `json:"tirads_23"`
	Tirads4  float64   `json:"tirads_4"`
	Tirads5  float64   `json:"tirads_5"`
}

// GetImageID returns the value of ImageID.
func (s *UziNodesSegmentsPostReqSegmentsItem) GetImageID() uuid.UUID {
	return s.ImageID
}

// GetContor returns the value of Contor.
func (s *UziNodesSegmentsPostReqSegmentsItem) GetContor() Contor {
	return s.Contor
}

// GetTirads23 returns the value of Tirads23.
func (s *UziNodesSegmentsPostReqSegmentsItem) GetTirads23() float64 {
	return s.Tirads23
}

// GetTirads4 returns the value of Tirads4.
func (s *UziNodesSegmentsPostReqSegmentsItem) GetTirads4() float64 {
	return s.Tirads4
}

// GetTirads5 returns the value of Tirads5.
func (s *UziNodesSegmentsPostReqSegmentsItem) GetTirads5() float64 {
	return s.Tirads5
}

// SetImageID sets the value of ImageID.
func (s *UziNodesSegmentsPostReqSegmentsItem) SetImageID(val uuid.UUID) {
	s.ImageID = val
}

// SetContor sets the value of Contor.
func (s *UziNodesSegmentsPostReqSegmentsItem) SetContor(val Contor) {
	s.Contor = val
}

// SetTirads23 sets the value of Tirads23.
func (s *UziNodesSegmentsPostReqSegmentsItem) SetTirads23(val float64) {
	s.Tirads23 = val
}

// SetTirads4 sets the value of Tirads4.
func (s *UziNodesSegmentsPostReqSegmentsItem) SetTirads4(val float64) {
	s.Tirads4 = val
}

// SetTirads5 sets the value of Tirads5.
func (s *UziNodesSegmentsPostReqSegmentsItem) SetTirads5(val float64) {
	s.Tirads5 = val
}

type UziPostReq struct {
	// Файл узи. **обязательно с .tiff/.png**.
	File ht.MultipartFile `json:"file"`
	// Проекция узи.
	Projection string `json:"projection"`
	// Внешний id пациента/организации etc.
	ExternalID uuid.UUID `json:"external_id"`
	// Id узи аппарата.
	DeviceID int `json:"device_id"`
}

// GetFile returns the value of File.
func (s *UziPostReq) GetFile() ht.MultipartFile {
	return s.File
}

// GetProjection returns the value of Projection.
func (s *UziPostReq) GetProjection() string {
	return s.Projection
}

// GetExternalID returns the value of ExternalID.
func (s *UziPostReq) GetExternalID() uuid.UUID {
	return s.ExternalID
}

// GetDeviceID returns the value of DeviceID.
func (s *UziPostReq) GetDeviceID() int {
	return s.DeviceID
}

// SetFile sets the value of File.
func (s *UziPostReq) SetFile(val ht.MultipartFile) {
	s.File = val
}

// SetProjection sets the value of Projection.
func (s *UziPostReq) SetProjection(val string) {
	s.Projection = val
}

// SetExternalID sets the value of ExternalID.
func (s *UziPostReq) SetExternalID(val uuid.UUID) {
	s.ExternalID = val
}

// SetDeviceID sets the value of DeviceID.
func (s *UziPostReq) SetDeviceID(val int) {
	s.DeviceID = val
}

// UziSegmentIDDeleteOK is response for UziSegmentIDDelete operation.
type UziSegmentIDDeleteOK struct{}

func (*UziSegmentIDDeleteOK) uziSegmentIDDeleteRes() {}

type UziSegmentIDPatchReq struct {
	Tirads23 OptFloat64 `json:"tirads_23"`
	Tirads4  OptFloat64 `json:"tirads_4"`
	Tirads5  OptFloat64 `json:"tirads_5"`
}

// GetTirads23 returns the value of Tirads23.
func (s *UziSegmentIDPatchReq) GetTirads23() OptFloat64 {
	return s.Tirads23
}

// GetTirads4 returns the value of Tirads4.
func (s *UziSegmentIDPatchReq) GetTirads4() OptFloat64 {
	return s.Tirads4
}

// GetTirads5 returns the value of Tirads5.
func (s *UziSegmentIDPatchReq) GetTirads5() OptFloat64 {
	return s.Tirads5
}

// SetTirads23 sets the value of Tirads23.
func (s *UziSegmentIDPatchReq) SetTirads23(val OptFloat64) {
	s.Tirads23 = val
}

// SetTirads4 sets the value of Tirads4.
func (s *UziSegmentIDPatchReq) SetTirads4(val OptFloat64) {
	s.Tirads4 = val
}

// SetTirads5 sets the value of Tirads5.
func (s *UziSegmentIDPatchReq) SetTirads5(val OptFloat64) {
	s.Tirads5 = val
}

type UziSegmentPostReq struct {
	ImageID  uuid.UUID `json:"image_id"`
	NodeID   uuid.UUID `json:"node_id"`
	Contor   Contor    `json:"contor"`
	Tirads23 float64   `json:"tirads_23"`
	Tirads4  float64   `json:"tirads_4"`
	Tirads5  float64   `json:"tirads_5"`
}

// GetImageID returns the value of ImageID.
func (s *UziSegmentPostReq) GetImageID() uuid.UUID {
	return s.ImageID
}

// GetNodeID returns the value of NodeID.
func (s *UziSegmentPostReq) GetNodeID() uuid.UUID {
	return s.NodeID
}

// GetContor returns the value of Contor.
func (s *UziSegmentPostReq) GetContor() Contor {
	return s.Contor
}

// GetTirads23 returns the value of Tirads23.
func (s *UziSegmentPostReq) GetTirads23() float64 {
	return s.Tirads23
}

// GetTirads4 returns the value of Tirads4.
func (s *UziSegmentPostReq) GetTirads4() float64 {
	return s.Tirads4
}

// GetTirads5 returns the value of Tirads5.
func (s *UziSegmentPostReq) GetTirads5() float64 {
	return s.Tirads5
}

// SetImageID sets the value of ImageID.
func (s *UziSegmentPostReq) SetImageID(val uuid.UUID) {
	s.ImageID = val
}

// SetNodeID sets the value of NodeID.
func (s *UziSegmentPostReq) SetNodeID(val uuid.UUID) {
	s.NodeID = val
}

// SetContor sets the value of Contor.
func (s *UziSegmentPostReq) SetContor(val Contor) {
	s.Contor = val
}

// SetTirads23 sets the value of Tirads23.
func (s *UziSegmentPostReq) SetTirads23(val float64) {
	s.Tirads23 = val
}

// SetTirads4 sets the value of Tirads4.
func (s *UziSegmentPostReq) SetTirads4(val float64) {
	s.Tirads4 = val
}

// SetTirads5 sets the value of Tirads5.
func (s *UziSegmentPostReq) SetTirads5(val float64) {
	s.Tirads5 = val
}

// Статус узи **new** - новое узи **pending** - в обработке
// нейронкой **completed** - обработано.
type UziStatus string

const (
	UziStatusNew       UziStatus = "new"
	UziStatusPending   UziStatus = "pending"
	UziStatusCompleted UziStatus = "completed"
)

// AllValues returns all UziStatus values.
func (UziStatus) AllValues() []UziStatus {
	return []UziStatus{
		UziStatusNew,
		UziStatusPending,
		UziStatusCompleted,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s UziStatus) MarshalText() ([]byte, error) {
	switch s {
	case UziStatusNew:
		return []byte(s), nil
	case UziStatusPending:
		return []byte(s), nil
	case UziStatusCompleted:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UziStatus) UnmarshalText(data []byte) error {
	switch UziStatus(data) {
	case UziStatusNew:
		*s = UziStatusNew
		return nil
	case UziStatusPending:
		*s = UziStatusPending
		return nil
	case UziStatusCompleted:
		*s = UziStatusCompleted
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type UzisExternalIDGetOKApplicationJSON []Uzi

func (*UzisExternalIDGetOKApplicationJSON) uzisExternalIDGetRes() {}
