// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v5.28.2
// source: uzi.proto

package uzi

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// COMMON
type Id struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,100,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Id) Reset() {
	*x = Id{}
	mi := &file_uzi_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Id) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Id) ProtoMessage() {}

func (x *Id) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Id.ProtoReflect.Descriptor instead.
func (*Id) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{0}
}

func (x *Id) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Device struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,100,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,200,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Device) Reset() {
	*x = Device{}
	mi := &file_uzi_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{1}
}

func (x *Device) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Device) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetDeviceListOut struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Devices       []*Device              `protobuf:"bytes,100,rep,name=devices,proto3" json:"devices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDeviceListOut) Reset() {
	*x = GetDeviceListOut{}
	mi := &file_uzi_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeviceListOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceListOut) ProtoMessage() {}

func (x *GetDeviceListOut) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceListOut.ProtoReflect.Descriptor instead.
func (*GetDeviceListOut) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{2}
}

func (x *GetDeviceListOut) GetDevices() []*Device {
	if x != nil {
		return x.Devices
	}
	return nil
}

type Echographic struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              string                 `protobuf:"bytes,100,opt,name=id,proto3" json:"id,omitempty"`
	Contors         *string                `protobuf:"bytes,200,opt,name=contors,proto3,oneof" json:"contors,omitempty"`
	LeftLobeLength  *float64               `protobuf:"fixed64,300,opt,name=left_lobe_length,json=leftLobeLength,proto3,oneof" json:"left_lobe_length,omitempty"`
	LeftLobeWidth   *float64               `protobuf:"fixed64,400,opt,name=left_lobe_width,json=leftLobeWidth,proto3,oneof" json:"left_lobe_width,omitempty"`
	LeftLobeThick   *float64               `protobuf:"fixed64,500,opt,name=left_lobe_thick,json=leftLobeThick,proto3,oneof" json:"left_lobe_thick,omitempty"`
	LeftLobeVolum   *float64               `protobuf:"fixed64,600,opt,name=left_lobe_volum,json=leftLobeVolum,proto3,oneof" json:"left_lobe_volum,omitempty"`
	RightLobeLength *float64               `protobuf:"fixed64,700,opt,name=right_lobe_length,json=rightLobeLength,proto3,oneof" json:"right_lobe_length,omitempty"`
	RightLobeWidth  *float64               `protobuf:"fixed64,800,opt,name=right_lobe_width,json=rightLobeWidth,proto3,oneof" json:"right_lobe_width,omitempty"`
	RightLobeThick  *float64               `protobuf:"fixed64,900,opt,name=right_lobe_thick,json=rightLobeThick,proto3,oneof" json:"right_lobe_thick,omitempty"`
	RightLobeVolum  *float64               `protobuf:"fixed64,1000,opt,name=right_lobe_volum,json=rightLobeVolum,proto3,oneof" json:"right_lobe_volum,omitempty"`
	GlandVolum      *float64               `protobuf:"fixed64,1100,opt,name=gland_volum,json=glandVolum,proto3,oneof" json:"gland_volum,omitempty"`
	Isthmus         *float64               `protobuf:"fixed64,1200,opt,name=isthmus,proto3,oneof" json:"isthmus,omitempty"`
	Struct          *string                `protobuf:"bytes,1300,opt,name=struct,proto3,oneof" json:"struct,omitempty"`
	Echogenicity    *string                `protobuf:"bytes,1400,opt,name=echogenicity,proto3,oneof" json:"echogenicity,omitempty"`
	RegionalLymph   *string                `protobuf:"bytes,1500,opt,name=regional_lymph,json=regionalLymph,proto3,oneof" json:"regional_lymph,omitempty"`
	Vascularization *string                `protobuf:"bytes,1600,opt,name=vascularization,proto3,oneof" json:"vascularization,omitempty"`
	Location        *string                `protobuf:"bytes,1700,opt,name=location,proto3,oneof" json:"location,omitempty"`
	Additional      *string                `protobuf:"bytes,1800,opt,name=additional,proto3,oneof" json:"additional,omitempty"`
	Conclusion      *string                `protobuf:"bytes,1900,opt,name=conclusion,proto3,oneof" json:"conclusion,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Echographic) Reset() {
	*x = Echographic{}
	mi := &file_uzi_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Echographic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Echographic) ProtoMessage() {}

func (x *Echographic) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Echographic.ProtoReflect.Descriptor instead.
func (*Echographic) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{3}
}

func (x *Echographic) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Echographic) GetContors() string {
	if x != nil && x.Contors != nil {
		return *x.Contors
	}
	return ""
}

func (x *Echographic) GetLeftLobeLength() float64 {
	if x != nil && x.LeftLobeLength != nil {
		return *x.LeftLobeLength
	}
	return 0
}

func (x *Echographic) GetLeftLobeWidth() float64 {
	if x != nil && x.LeftLobeWidth != nil {
		return *x.LeftLobeWidth
	}
	return 0
}

func (x *Echographic) GetLeftLobeThick() float64 {
	if x != nil && x.LeftLobeThick != nil {
		return *x.LeftLobeThick
	}
	return 0
}

func (x *Echographic) GetLeftLobeVolum() float64 {
	if x != nil && x.LeftLobeVolum != nil {
		return *x.LeftLobeVolum
	}
	return 0
}

func (x *Echographic) GetRightLobeLength() float64 {
	if x != nil && x.RightLobeLength != nil {
		return *x.RightLobeLength
	}
	return 0
}

func (x *Echographic) GetRightLobeWidth() float64 {
	if x != nil && x.RightLobeWidth != nil {
		return *x.RightLobeWidth
	}
	return 0
}

func (x *Echographic) GetRightLobeThick() float64 {
	if x != nil && x.RightLobeThick != nil {
		return *x.RightLobeThick
	}
	return 0
}

func (x *Echographic) GetRightLobeVolum() float64 {
	if x != nil && x.RightLobeVolum != nil {
		return *x.RightLobeVolum
	}
	return 0
}

func (x *Echographic) GetGlandVolum() float64 {
	if x != nil && x.GlandVolum != nil {
		return *x.GlandVolum
	}
	return 0
}

func (x *Echographic) GetIsthmus() float64 {
	if x != nil && x.Isthmus != nil {
		return *x.Isthmus
	}
	return 0
}

func (x *Echographic) GetStruct() string {
	if x != nil && x.Struct != nil {
		return *x.Struct
	}
	return ""
}

func (x *Echographic) GetEchogenicity() string {
	if x != nil && x.Echogenicity != nil {
		return *x.Echogenicity
	}
	return ""
}

func (x *Echographic) GetRegionalLymph() string {
	if x != nil && x.RegionalLymph != nil {
		return *x.RegionalLymph
	}
	return ""
}

func (x *Echographic) GetVascularization() string {
	if x != nil && x.Vascularization != nil {
		return *x.Vascularization
	}
	return ""
}

func (x *Echographic) GetLocation() string {
	if x != nil && x.Location != nil {
		return *x.Location
	}
	return ""
}

func (x *Echographic) GetAdditional() string {
	if x != nil && x.Additional != nil {
		return *x.Additional
	}
	return ""
}

func (x *Echographic) GetConclusion() string {
	if x != nil && x.Conclusion != nil {
		return *x.Conclusion
	}
	return ""
}

// Обусловлено что ВСЕ параметры меняются
type UpdateEchographicIn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Echographic   *Echographic           `protobuf:"bytes,100,opt,name=echographic,proto3" json:"echographic,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateEchographicIn) Reset() {
	*x = UpdateEchographicIn{}
	mi := &file_uzi_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateEchographicIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEchographicIn) ProtoMessage() {}

func (x *UpdateEchographicIn) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEchographicIn.ProtoReflect.Descriptor instead.
func (*UpdateEchographicIn) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateEchographicIn) GetEchographic() *Echographic {
	if x != nil {
		return x.Echographic
	}
	return nil
}

type UpdateEchographicOut struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Echographic   *Echographic           `protobuf:"bytes,400,opt,name=echographic,proto3" json:"echographic,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateEchographicOut) Reset() {
	*x = UpdateEchographicOut{}
	mi := &file_uzi_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateEchographicOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEchographicOut) ProtoMessage() {}

func (x *UpdateEchographicOut) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEchographicOut.ProtoReflect.Descriptor instead.
func (*UpdateEchographicOut) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateEchographicOut) GetEchographic() *Echographic {
	if x != nil {
		return x.Echographic
	}
	return nil
}

type GetEchographicIn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,100,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEchographicIn) Reset() {
	*x = GetEchographicIn{}
	mi := &file_uzi_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEchographicIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEchographicIn) ProtoMessage() {}

func (x *GetEchographicIn) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEchographicIn.ProtoReflect.Descriptor instead.
func (*GetEchographicIn) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{6}
}

func (x *GetEchographicIn) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetEchographicOut struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Echographic   *Echographic           `protobuf:"bytes,400,opt,name=echographic,proto3" json:"echographic,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEchographicOut) Reset() {
	*x = GetEchographicOut{}
	mi := &file_uzi_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEchographicOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEchographicOut) ProtoMessage() {}

func (x *GetEchographicOut) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEchographicOut.ProtoReflect.Descriptor instead.
func (*GetEchographicOut) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{7}
}

func (x *GetEchographicOut) GetEchographic() *Echographic {
	if x != nil {
		return x.Echographic
	}
	return nil
}

type Uzi struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,100,opt,name=id,proto3" json:"id,omitempty"`
	Projection    string                 `protobuf:"bytes,300,opt,name=projection,proto3" json:"projection,omitempty"`
	Checked       bool                   `protobuf:"varint,400,opt,name=checked,proto3" json:"checked,omitempty"`
	PatientId     string                 `protobuf:"bytes,500,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	DeviceId      int64                  `protobuf:"varint,600,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	CreateAt      string                 `protobuf:"bytes,700,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Uzi) Reset() {
	*x = Uzi{}
	mi := &file_uzi_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Uzi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Uzi) ProtoMessage() {}

func (x *Uzi) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Uzi.ProtoReflect.Descriptor instead.
func (*Uzi) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{8}
}

func (x *Uzi) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Uzi) GetProjection() string {
	if x != nil {
		return x.Projection
	}
	return ""
}

func (x *Uzi) GetChecked() bool {
	if x != nil {
		return x.Checked
	}
	return false
}

func (x *Uzi) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (x *Uzi) GetDeviceId() int64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

func (x *Uzi) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

type CreateUziIn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Projection    string                 `protobuf:"bytes,100,opt,name=projection,proto3" json:"projection,omitempty"`
	PatientId     string                 `protobuf:"bytes,200,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	DeviceId      int64                  `protobuf:"varint,300,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUziIn) Reset() {
	*x = CreateUziIn{}
	mi := &file_uzi_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUziIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUziIn) ProtoMessage() {}

func (x *CreateUziIn) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUziIn.ProtoReflect.Descriptor instead.
func (*CreateUziIn) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{9}
}

func (x *CreateUziIn) GetProjection() string {
	if x != nil {
		return x.Projection
	}
	return ""
}

func (x *CreateUziIn) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (x *CreateUziIn) GetDeviceId() int64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

type CreateUziOut struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,100,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUziOut) Reset() {
	*x = CreateUziOut{}
	mi := &file_uzi_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUziOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUziOut) ProtoMessage() {}

func (x *CreateUziOut) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUziOut.ProtoReflect.Descriptor instead.
func (*CreateUziOut) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{10}
}

func (x *CreateUziOut) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateUziIn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,100,opt,name=id,proto3" json:"id,omitempty"`
	Projection    *string                `protobuf:"bytes,200,opt,name=projection,proto3,oneof" json:"projection,omitempty"`
	Checked       *bool                  `protobuf:"varint,300,opt,name=checked,proto3,oneof" json:"checked,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUziIn) Reset() {
	*x = UpdateUziIn{}
	mi := &file_uzi_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUziIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUziIn) ProtoMessage() {}

func (x *UpdateUziIn) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUziIn.ProtoReflect.Descriptor instead.
func (*UpdateUziIn) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateUziIn) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateUziIn) GetProjection() string {
	if x != nil && x.Projection != nil {
		return *x.Projection
	}
	return ""
}

func (x *UpdateUziIn) GetChecked() bool {
	if x != nil && x.Checked != nil {
		return *x.Checked
	}
	return false
}

type UpdateUziOut struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uzi           *Uzi                   `protobuf:"bytes,100,opt,name=uzi,proto3" json:"uzi,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUziOut) Reset() {
	*x = UpdateUziOut{}
	mi := &file_uzi_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUziOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUziOut) ProtoMessage() {}

func (x *UpdateUziOut) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUziOut.ProtoReflect.Descriptor instead.
func (*UpdateUziOut) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateUziOut) GetUzi() *Uzi {
	if x != nil {
		return x.Uzi
	}
	return nil
}

type GetUziIn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,100,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUziIn) Reset() {
	*x = GetUziIn{}
	mi := &file_uzi_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUziIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUziIn) ProtoMessage() {}

func (x *GetUziIn) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUziIn.ProtoReflect.Descriptor instead.
func (*GetUziIn) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{13}
}

func (x *GetUziIn) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetUziOut struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uzi           *Uzi                   `protobuf:"bytes,100,opt,name=uzi,proto3" json:"uzi,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUziOut) Reset() {
	*x = GetUziOut{}
	mi := &file_uzi_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUziOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUziOut) ProtoMessage() {}

func (x *GetUziOut) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUziOut.ProtoReflect.Descriptor instead.
func (*GetUziOut) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{14}
}

func (x *GetUziOut) GetUzi() *Uzi {
	if x != nil {
		return x.Uzi
	}
	return nil
}

type GetPatientUzisIn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PatientId     string                 `protobuf:"bytes,100,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPatientUzisIn) Reset() {
	*x = GetPatientUzisIn{}
	mi := &file_uzi_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPatientUzisIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientUzisIn) ProtoMessage() {}

func (x *GetPatientUzisIn) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientUzisIn.ProtoReflect.Descriptor instead.
func (*GetPatientUzisIn) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{15}
}

func (x *GetPatientUzisIn) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

type GetPatientUzisOut struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uzis          []*Uzi                 `protobuf:"bytes,100,rep,name=uzis,proto3" json:"uzis,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPatientUzisOut) Reset() {
	*x = GetPatientUzisOut{}
	mi := &file_uzi_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPatientUzisOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPatientUzisOut) ProtoMessage() {}

func (x *GetPatientUzisOut) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPatientUzisOut.ProtoReflect.Descriptor instead.
func (*GetPatientUzisOut) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{16}
}

func (x *GetPatientUzisOut) GetUzis() []*Uzi {
	if x != nil {
		return x.Uzis
	}
	return nil
}

type Image struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,100,opt,name=id,proto3" json:"id,omitempty"`
	Page          int64                  `protobuf:"varint,200,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Image) Reset() {
	*x = Image{}
	mi := &file_uzi_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{17}
}

func (x *Image) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Image) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetUziImagesIn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UziId         string                 `protobuf:"bytes,100,opt,name=uzi_id,json=uziId,proto3" json:"uzi_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUziImagesIn) Reset() {
	*x = GetUziImagesIn{}
	mi := &file_uzi_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUziImagesIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUziImagesIn) ProtoMessage() {}

func (x *GetUziImagesIn) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUziImagesIn.ProtoReflect.Descriptor instead.
func (*GetUziImagesIn) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{18}
}

func (x *GetUziImagesIn) GetUziId() string {
	if x != nil {
		return x.UziId
	}
	return ""
}

type GetUziImagesOut struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Images        []*Image               `protobuf:"bytes,100,rep,name=images,proto3" json:"images,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUziImagesOut) Reset() {
	*x = GetUziImagesOut{}
	mi := &file_uzi_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUziImagesOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUziImagesOut) ProtoMessage() {}

func (x *GetUziImagesOut) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUziImagesOut.ProtoReflect.Descriptor instead.
func (*GetUziImagesOut) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{19}
}

func (x *GetUziImagesOut) GetImages() []*Image {
	if x != nil {
		return x.Images
	}
	return nil
}

type Segment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,100,opt,name=id,proto3" json:"id,omitempty"`
	NodeId        string                 `protobuf:"bytes,200,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	ImageId       string                 `protobuf:"bytes,300,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	Contor        string                 `protobuf:"bytes,400,opt,name=contor,proto3" json:"contor,omitempty"`
	Tirads_23     float64                `protobuf:"fixed64,500,opt,name=tirads_23,json=tirads23,proto3" json:"tirads_23,omitempty"`
	Tirads_4      float64                `protobuf:"fixed64,600,opt,name=tirads_4,json=tirads4,proto3" json:"tirads_4,omitempty"`
	Tirads_5      float64                `protobuf:"fixed64,700,opt,name=tirads_5,json=tirads5,proto3" json:"tirads_5,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Segment) Reset() {
	*x = Segment{}
	mi := &file_uzi_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Segment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Segment) ProtoMessage() {}

func (x *Segment) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Segment.ProtoReflect.Descriptor instead.
func (*Segment) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{20}
}

func (x *Segment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Segment) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *Segment) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *Segment) GetContor() string {
	if x != nil {
		return x.Contor
	}
	return ""
}

func (x *Segment) GetTirads_23() float64 {
	if x != nil {
		return x.Tirads_23
	}
	return 0
}

func (x *Segment) GetTirads_4() float64 {
	if x != nil {
		return x.Tirads_4
	}
	return 0
}

func (x *Segment) GetTirads_5() float64 {
	if x != nil {
		return x.Tirads_5
	}
	return 0
}

type CreateSegmentIn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,100,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	ImageId       string                 `protobuf:"bytes,200,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	Contor        string                 `protobuf:"bytes,300,opt,name=contor,proto3" json:"contor,omitempty"`
	Tirads_23     float64                `protobuf:"fixed64,400,opt,name=tirads_23,json=tirads23,proto3" json:"tirads_23,omitempty"`
	Tirads_4      float64                `protobuf:"fixed64,500,opt,name=tirads_4,json=tirads4,proto3" json:"tirads_4,omitempty"`
	Tirads_5      float64                `protobuf:"fixed64,600,opt,name=tirads_5,json=tirads5,proto3" json:"tirads_5,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSegmentIn) Reset() {
	*x = CreateSegmentIn{}
	mi := &file_uzi_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSegmentIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSegmentIn) ProtoMessage() {}

func (x *CreateSegmentIn) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSegmentIn.ProtoReflect.Descriptor instead.
func (*CreateSegmentIn) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{21}
}

func (x *CreateSegmentIn) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *CreateSegmentIn) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *CreateSegmentIn) GetContor() string {
	if x != nil {
		return x.Contor
	}
	return ""
}

func (x *CreateSegmentIn) GetTirads_23() float64 {
	if x != nil {
		return x.Tirads_23
	}
	return 0
}

func (x *CreateSegmentIn) GetTirads_4() float64 {
	if x != nil {
		return x.Tirads_4
	}
	return 0
}

func (x *CreateSegmentIn) GetTirads_5() float64 {
	if x != nil {
		return x.Tirads_5
	}
	return 0
}

type CreateSegmentOut struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,100,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSegmentOut) Reset() {
	*x = CreateSegmentOut{}
	mi := &file_uzi_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSegmentOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSegmentOut) ProtoMessage() {}

func (x *CreateSegmentOut) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSegmentOut.ProtoReflect.Descriptor instead.
func (*CreateSegmentOut) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{22}
}

func (x *CreateSegmentOut) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteSegmentIn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,100,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSegmentIn) Reset() {
	*x = DeleteSegmentIn{}
	mi := &file_uzi_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSegmentIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSegmentIn) ProtoMessage() {}

func (x *DeleteSegmentIn) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSegmentIn.ProtoReflect.Descriptor instead.
func (*DeleteSegmentIn) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{23}
}

func (x *DeleteSegmentIn) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateSegmentIn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,100,opt,name=id,proto3" json:"id,omitempty"`
	Tirads_23     *float64               `protobuf:"fixed64,200,opt,name=tirads_23,json=tirads23,proto3,oneof" json:"tirads_23,omitempty"`
	Tirads_4      *float64               `protobuf:"fixed64,300,opt,name=tirads_4,json=tirads4,proto3,oneof" json:"tirads_4,omitempty"`
	Tirads_5      *float64               `protobuf:"fixed64,400,opt,name=tirads_5,json=tirads5,proto3,oneof" json:"tirads_5,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSegmentIn) Reset() {
	*x = UpdateSegmentIn{}
	mi := &file_uzi_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSegmentIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSegmentIn) ProtoMessage() {}

func (x *UpdateSegmentIn) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSegmentIn.ProtoReflect.Descriptor instead.
func (*UpdateSegmentIn) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateSegmentIn) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateSegmentIn) GetTirads_23() float64 {
	if x != nil && x.Tirads_23 != nil {
		return *x.Tirads_23
	}
	return 0
}

func (x *UpdateSegmentIn) GetTirads_4() float64 {
	if x != nil && x.Tirads_4 != nil {
		return *x.Tirads_4
	}
	return 0
}

func (x *UpdateSegmentIn) GetTirads_5() float64 {
	if x != nil && x.Tirads_5 != nil {
		return *x.Tirads_5
	}
	return 0
}

type UpdateSegmentOut struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Segment       *Segment               `protobuf:"bytes,100,opt,name=segment,proto3" json:"segment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSegmentOut) Reset() {
	*x = UpdateSegmentOut{}
	mi := &file_uzi_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSegmentOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSegmentOut) ProtoMessage() {}

func (x *UpdateSegmentOut) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSegmentOut.ProtoReflect.Descriptor instead.
func (*UpdateSegmentOut) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{25}
}

func (x *UpdateSegmentOut) GetSegment() *Segment {
	if x != nil {
		return x.Segment
	}
	return nil
}

type Node struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,100,opt,name=id,proto3" json:"id,omitempty"`
	Ai            bool                   `protobuf:"varint,200,opt,name=ai,proto3" json:"ai,omitempty"`
	Tirads_23     float64                `protobuf:"fixed64,400,opt,name=tirads_23,json=tirads23,proto3" json:"tirads_23,omitempty"`
	Tirads_4      float64                `protobuf:"fixed64,500,opt,name=tirads_4,json=tirads4,proto3" json:"tirads_4,omitempty"`
	Tirads_5      float64                `protobuf:"fixed64,600,opt,name=tirads_5,json=tirads5,proto3" json:"tirads_5,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Node) Reset() {
	*x = Node{}
	mi := &file_uzi_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{26}
}

func (x *Node) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Node) GetAi() bool {
	if x != nil {
		return x.Ai
	}
	return false
}

func (x *Node) GetTirads_23() float64 {
	if x != nil {
		return x.Tirads_23
	}
	return 0
}

func (x *Node) GetTirads_4() float64 {
	if x != nil {
		return x.Tirads_4
	}
	return 0
}

func (x *Node) GetTirads_5() float64 {
	if x != nil {
		return x.Tirads_5
	}
	return 0
}

type CreateNodeIn struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// TODO: потом это прокинуть везде, пока только в создании
	UziId         string                        `protobuf:"bytes,100,opt,name=uzi_id,json=uziId,proto3" json:"uzi_id,omitempty"`
	Segments      []*CreateNodeIn_NestedSegment `protobuf:"bytes,200,rep,name=segments,proto3" json:"segments,omitempty"`
	Tirads_23     float64                       `protobuf:"fixed64,300,opt,name=tirads_23,json=tirads23,proto3" json:"tirads_23,omitempty"`
	Tirads_4      float64                       `protobuf:"fixed64,400,opt,name=tirads_4,json=tirads4,proto3" json:"tirads_4,omitempty"`
	Tirads_5      float64                       `protobuf:"fixed64,500,opt,name=tirads_5,json=tirads5,proto3" json:"tirads_5,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNodeIn) Reset() {
	*x = CreateNodeIn{}
	mi := &file_uzi_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNodeIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNodeIn) ProtoMessage() {}

func (x *CreateNodeIn) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNodeIn.ProtoReflect.Descriptor instead.
func (*CreateNodeIn) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{27}
}

func (x *CreateNodeIn) GetUziId() string {
	if x != nil {
		return x.UziId
	}
	return ""
}

func (x *CreateNodeIn) GetSegments() []*CreateNodeIn_NestedSegment {
	if x != nil {
		return x.Segments
	}
	return nil
}

func (x *CreateNodeIn) GetTirads_23() float64 {
	if x != nil {
		return x.Tirads_23
	}
	return 0
}

func (x *CreateNodeIn) GetTirads_4() float64 {
	if x != nil {
		return x.Tirads_4
	}
	return 0
}

func (x *CreateNodeIn) GetTirads_5() float64 {
	if x != nil {
		return x.Tirads_5
	}
	return 0
}

type CreateNodeOut struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,100,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNodeOut) Reset() {
	*x = CreateNodeOut{}
	mi := &file_uzi_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNodeOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNodeOut) ProtoMessage() {}

func (x *CreateNodeOut) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNodeOut.ProtoReflect.Descriptor instead.
func (*CreateNodeOut) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{28}
}

func (x *CreateNodeOut) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetAllNodesIn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UziId         string                 `protobuf:"bytes,100,opt,name=uzi_id,json=uziId,proto3" json:"uzi_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllNodesIn) Reset() {
	*x = GetAllNodesIn{}
	mi := &file_uzi_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllNodesIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllNodesIn) ProtoMessage() {}

func (x *GetAllNodesIn) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllNodesIn.ProtoReflect.Descriptor instead.
func (*GetAllNodesIn) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{29}
}

func (x *GetAllNodesIn) GetUziId() string {
	if x != nil {
		return x.UziId
	}
	return ""
}

type GetAllNodesOut struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*Node                `protobuf:"bytes,100,rep,name=nodes,proto3" json:"nodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllNodesOut) Reset() {
	*x = GetAllNodesOut{}
	mi := &file_uzi_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllNodesOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllNodesOut) ProtoMessage() {}

func (x *GetAllNodesOut) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllNodesOut.ProtoReflect.Descriptor instead.
func (*GetAllNodesOut) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{30}
}

func (x *GetAllNodesOut) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type DeleteNodeIn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,100,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNodeIn) Reset() {
	*x = DeleteNodeIn{}
	mi := &file_uzi_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNodeIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNodeIn) ProtoMessage() {}

func (x *DeleteNodeIn) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNodeIn.ProtoReflect.Descriptor instead.
func (*DeleteNodeIn) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{31}
}

func (x *DeleteNodeIn) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateNodeIn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,100,opt,name=id,proto3" json:"id,omitempty"`
	Tirads_23     *float64               `protobuf:"fixed64,200,opt,name=tirads_23,json=tirads23,proto3,oneof" json:"tirads_23,omitempty"`
	Tirads_4      *float64               `protobuf:"fixed64,300,opt,name=tirads_4,json=tirads4,proto3,oneof" json:"tirads_4,omitempty"`
	Tirads_5      *float64               `protobuf:"fixed64,400,opt,name=tirads_5,json=tirads5,proto3,oneof" json:"tirads_5,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNodeIn) Reset() {
	*x = UpdateNodeIn{}
	mi := &file_uzi_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNodeIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNodeIn) ProtoMessage() {}

func (x *UpdateNodeIn) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNodeIn.ProtoReflect.Descriptor instead.
func (*UpdateNodeIn) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{32}
}

func (x *UpdateNodeIn) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateNodeIn) GetTirads_23() float64 {
	if x != nil && x.Tirads_23 != nil {
		return *x.Tirads_23
	}
	return 0
}

func (x *UpdateNodeIn) GetTirads_4() float64 {
	if x != nil && x.Tirads_4 != nil {
		return *x.Tirads_4
	}
	return 0
}

func (x *UpdateNodeIn) GetTirads_5() float64 {
	if x != nil && x.Tirads_5 != nil {
		return *x.Tirads_5
	}
	return 0
}

type UpdateNodeOut struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Node          *Node                  `protobuf:"bytes,100,opt,name=node,proto3" json:"node,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNodeOut) Reset() {
	*x = UpdateNodeOut{}
	mi := &file_uzi_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNodeOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNodeOut) ProtoMessage() {}

func (x *UpdateNodeOut) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNodeOut.ProtoReflect.Descriptor instead.
func (*UpdateNodeOut) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{33}
}

func (x *UpdateNodeOut) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

type GetImageSegmentsWithNodesIn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,100,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetImageSegmentsWithNodesIn) Reset() {
	*x = GetImageSegmentsWithNodesIn{}
	mi := &file_uzi_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetImageSegmentsWithNodesIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetImageSegmentsWithNodesIn) ProtoMessage() {}

func (x *GetImageSegmentsWithNodesIn) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetImageSegmentsWithNodesIn.ProtoReflect.Descriptor instead.
func (*GetImageSegmentsWithNodesIn) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{34}
}

func (x *GetImageSegmentsWithNodesIn) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetImageSegmentsWithNodesOut struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*Node                `protobuf:"bytes,100,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Segments      []*Segment             `protobuf:"bytes,200,rep,name=segments,proto3" json:"segments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetImageSegmentsWithNodesOut) Reset() {
	*x = GetImageSegmentsWithNodesOut{}
	mi := &file_uzi_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetImageSegmentsWithNodesOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetImageSegmentsWithNodesOut) ProtoMessage() {}

func (x *GetImageSegmentsWithNodesOut) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetImageSegmentsWithNodesOut.ProtoReflect.Descriptor instead.
func (*GetImageSegmentsWithNodesOut) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{35}
}

func (x *GetImageSegmentsWithNodesOut) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *GetImageSegmentsWithNodesOut) GetSegments() []*Segment {
	if x != nil {
		return x.Segments
	}
	return nil
}

type CreateNodeIn_NestedSegment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ImageId       string                 `protobuf:"bytes,300,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	Contor        string                 `protobuf:"bytes,400,opt,name=contor,proto3" json:"contor,omitempty"`
	Tirads_23     float64                `protobuf:"fixed64,500,opt,name=tirads_23,json=tirads23,proto3" json:"tirads_23,omitempty"`
	Tirads_4      float64                `protobuf:"fixed64,600,opt,name=tirads_4,json=tirads4,proto3" json:"tirads_4,omitempty"`
	Tirads_5      float64                `protobuf:"fixed64,700,opt,name=tirads_5,json=tirads5,proto3" json:"tirads_5,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNodeIn_NestedSegment) Reset() {
	*x = CreateNodeIn_NestedSegment{}
	mi := &file_uzi_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNodeIn_NestedSegment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNodeIn_NestedSegment) ProtoMessage() {}

func (x *CreateNodeIn_NestedSegment) ProtoReflect() protoreflect.Message {
	mi := &file_uzi_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNodeIn_NestedSegment.ProtoReflect.Descriptor instead.
func (*CreateNodeIn_NestedSegment) Descriptor() ([]byte, []int) {
	return file_uzi_proto_rawDescGZIP(), []int{27, 0}
}

func (x *CreateNodeIn_NestedSegment) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *CreateNodeIn_NestedSegment) GetContor() string {
	if x != nil {
		return x.Contor
	}
	return ""
}

func (x *CreateNodeIn_NestedSegment) GetTirads_23() float64 {
	if x != nil {
		return x.Tirads_23
	}
	return 0
}

func (x *CreateNodeIn_NestedSegment) GetTirads_4() float64 {
	if x != nil {
		return x.Tirads_4
	}
	return 0
}

func (x *CreateNodeIn_NestedSegment) GetTirads_5() float64 {
	if x != nil {
		return x.Tirads_5
	}
	return 0
}

var File_uzi_proto protoreflect.FileDescriptor

var file_uzi_proto_rawDesc = []byte{
	0x0a, 0x09, 0x75, 0x7a, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x14, 0x0a, 0x02, 0x49, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2d,
	0x0a, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x13, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x35, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x75,
	0x74, 0x12, 0x21, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x64, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x07, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x07, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x22, 0xcf, 0x08, 0x0a, 0x0b, 0x45, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x69, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x6f, 0x72, 0x73, 0x18,
	0xc8, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x6f, 0x72,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x10, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x6c, 0x6f, 0x62,
	0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0xac, 0x02, 0x20, 0x01, 0x28, 0x01, 0x48,
	0x01, 0x52, 0x0e, 0x6c, 0x65, 0x66, 0x74, 0x4c, 0x6f, 0x62, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x6c, 0x6f, 0x62,
	0x65, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x90, 0x03, 0x20, 0x01, 0x28, 0x01, 0x48, 0x02,
	0x52, 0x0d, 0x6c, 0x65, 0x66, 0x74, 0x4c, 0x6f, 0x62, 0x65, 0x57, 0x69, 0x64, 0x74, 0x68, 0x88,
	0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x6c, 0x6f, 0x62, 0x65, 0x5f,
	0x74, 0x68, 0x69, 0x63, 0x6b, 0x18, 0xf4, 0x03, 0x20, 0x01, 0x28, 0x01, 0x48, 0x03, 0x52, 0x0d,
	0x6c, 0x65, 0x66, 0x74, 0x4c, 0x6f, 0x62, 0x65, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x88, 0x01, 0x01,
	0x12, 0x2c, 0x0a, 0x0f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x6c, 0x6f, 0x62, 0x65, 0x5f, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x18, 0xd8, 0x04, 0x20, 0x01, 0x28, 0x01, 0x48, 0x04, 0x52, 0x0d, 0x6c, 0x65,
	0x66, 0x74, 0x4c, 0x6f, 0x62, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x30,
	0x0a, 0x11, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x6c, 0x6f, 0x62, 0x65, 0x5f, 0x6c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x18, 0xbc, 0x05, 0x20, 0x01, 0x28, 0x01, 0x48, 0x05, 0x52, 0x0f, 0x72, 0x69,
	0x67, 0x68, 0x74, 0x4c, 0x6f, 0x62, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x88, 0x01, 0x01,
	0x12, 0x2e, 0x0a, 0x10, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x6c, 0x6f, 0x62, 0x65, 0x5f, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x18, 0xa0, 0x06, 0x20, 0x01, 0x28, 0x01, 0x48, 0x06, 0x52, 0x0e, 0x72,
	0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x62, 0x65, 0x57, 0x69, 0x64, 0x74, 0x68, 0x88, 0x01, 0x01,
	0x12, 0x2e, 0x0a, 0x10, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x6c, 0x6f, 0x62, 0x65, 0x5f, 0x74,
	0x68, 0x69, 0x63, 0x6b, 0x18, 0x84, 0x07, 0x20, 0x01, 0x28, 0x01, 0x48, 0x07, 0x52, 0x0e, 0x72,
	0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x62, 0x65, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x88, 0x01, 0x01,
	0x12, 0x2e, 0x0a, 0x10, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x6c, 0x6f, 0x62, 0x65, 0x5f, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x01, 0x48, 0x08, 0x52, 0x0e, 0x72,
	0x69, 0x67, 0x68, 0x74, 0x4c, 0x6f, 0x62, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x88, 0x01, 0x01,
	0x12, 0x25, 0x0a, 0x0b, 0x67, 0x6c, 0x61, 0x6e, 0x64, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x18,
	0xcc, 0x08, 0x20, 0x01, 0x28, 0x01, 0x48, 0x09, 0x52, 0x0a, 0x67, 0x6c, 0x61, 0x6e, 0x64, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x07, 0x69, 0x73, 0x74, 0x68, 0x6d,
	0x75, 0x73, 0x18, 0xb0, 0x09, 0x20, 0x01, 0x28, 0x01, 0x48, 0x0a, 0x52, 0x07, 0x69, 0x73, 0x74,
	0x68, 0x6d, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x18, 0x94, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x06, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0c, 0x65, 0x63, 0x68, 0x6f, 0x67, 0x65, 0x6e,
	0x69, 0x63, 0x69, 0x74, 0x79, 0x18, 0xf8, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x0c,
	0x65, 0x63, 0x68, 0x6f, 0x67, 0x65, 0x6e, 0x69, 0x63, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12,
	0x2b, 0x0a, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6c, 0x79, 0x6d, 0x70,
	0x68, 0x18, 0xdc, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x0d, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x4c, 0x79, 0x6d, 0x70, 0x68, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x0f,
	0x76, 0x61, 0x73, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0xc0, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0e, 0x52, 0x0f, 0x76, 0x61, 0x73, 0x63, 0x75, 0x6c,
	0x61, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x08,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xa4, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x0f, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x24,
	0x0a, 0x0a, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x88, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x10, 0x52, 0x0a, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0xec, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x11, 0x52, 0x0a, 0x63, 0x6f, 0x6e,
	0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x6f, 0x72, 0x73, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f,
	0x6c, 0x6f, 0x62, 0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x42, 0x12, 0x0a, 0x10, 0x5f,
	0x6c, 0x65, 0x66, 0x74, 0x5f, 0x6c, 0x6f, 0x62, 0x65, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x42,
	0x12, 0x0a, 0x10, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x6c, 0x6f, 0x62, 0x65, 0x5f, 0x74, 0x68,
	0x69, 0x63, 0x6b, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x6c, 0x6f, 0x62,
	0x65, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x72, 0x69, 0x67, 0x68,
	0x74, 0x5f, 0x6c, 0x6f, 0x62, 0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x42, 0x13, 0x0a,
	0x11, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x6c, 0x6f, 0x62, 0x65, 0x5f, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x6c, 0x6f, 0x62,
	0x65, 0x5f, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x72, 0x69, 0x67, 0x68,
	0x74, 0x5f, 0x6c, 0x6f, 0x62, 0x65, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x67, 0x6c, 0x61, 0x6e, 0x64, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x69, 0x73, 0x74, 0x68, 0x6d, 0x75, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x65, 0x63, 0x68, 0x6f, 0x67, 0x65, 0x6e, 0x69,
	0x63, 0x69, 0x74, 0x79, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x5f, 0x6c, 0x79, 0x6d, 0x70, 0x68, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x76, 0x61, 0x73, 0x63,
	0x75, 0x6c, 0x61, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x61, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6f, 0x6e, 0x63,
	0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x45, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x45, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x49, 0x6e, 0x12, 0x2e, 0x0a,
	0x0b, 0x65, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x45, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63,
	0x52, 0x0b, 0x65, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x22, 0x47, 0x0a,
	0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x69, 0x63, 0x4f, 0x75, 0x74, 0x12, 0x2f, 0x0a, 0x0b, 0x65, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x69, 0x63, 0x18, 0x90, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x45, 0x63,
	0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x52, 0x0b, 0x65, 0x63, 0x68, 0x6f, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x22, 0x22, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x45, 0x63, 0x68,
	0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x49, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x44, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x45, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x4f, 0x75, 0x74, 0x12,
	0x2f, 0x0a, 0x0b, 0x65, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x18, 0x90,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x45, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x69, 0x63, 0x52, 0x0b, 0x65, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63,
	0x22, 0xad, 0x01, 0x0a, 0x03, 0x55, 0x7a, 0x69, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xac, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x07, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x65, 0x64, 0x18, 0x90, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0xf4, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x74, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0xd8, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18,
	0xbc, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74,
	0x22, 0x6b, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x7a, 0x69, 0x49, 0x6e, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0xc8, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0xac, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x1e, 0x0a,
	0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x7a, 0x69, 0x4f, 0x75, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x7e, 0x0a,
	0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x7a, 0x69, 0x49, 0x6e, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x88,
	0x01, 0x01, 0x12, 0x1e, 0x0a, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x18, 0xac, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x88,
	0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x22, 0x26, 0x0a,
	0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x7a, 0x69, 0x4f, 0x75, 0x74, 0x12, 0x16, 0x0a,
	0x03, 0x75, 0x7a, 0x69, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x04, 0x2e, 0x55, 0x7a, 0x69,
	0x52, 0x03, 0x75, 0x7a, 0x69, 0x22, 0x1a, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x55, 0x7a, 0x69, 0x49,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x23, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x55, 0x7a, 0x69, 0x4f, 0x75, 0x74, 0x12, 0x16,
	0x0a, 0x03, 0x75, 0x7a, 0x69, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x04, 0x2e, 0x55, 0x7a,
	0x69, 0x52, 0x03, 0x75, 0x7a, 0x69, 0x22, 0x31, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74,
	0x69, 0x65, 0x6e, 0x74, 0x55, 0x7a, 0x69, 0x73, 0x49, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61,
	0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x2d, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x7a, 0x69, 0x73, 0x4f, 0x75, 0x74, 0x12, 0x18,
	0x0a, 0x04, 0x75, 0x7a, 0x69, 0x73, 0x18, 0x64, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x04, 0x2e, 0x55,
	0x7a, 0x69, 0x52, 0x04, 0x75, 0x7a, 0x69, 0x73, 0x22, 0x2c, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x13, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x27, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x7a, 0x69,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x49, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x75, 0x7a, 0x69, 0x5f,
	0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x7a, 0x69, 0x49, 0x64, 0x22,
	0x31, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x7a, 0x69, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x4f,
	0x75, 0x74, 0x12, 0x1e, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x64, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x06, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x73, 0x22, 0xbe, 0x01, 0x0a, 0x07, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0xac, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x74, 0x6f, 0x72, 0x18, 0x90,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x5f, 0x32, 0x33, 0x18, 0xf4, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x08, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x32, 0x33, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x69, 0x72, 0x61, 0x64, 0x73, 0x5f, 0x34, 0x18, 0xd8, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07,
	0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x34, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x72, 0x61, 0x64,
	0x73, 0x5f, 0x35, 0x18, 0xbc, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x74, 0x69, 0x72, 0x61,
	0x64, 0x73, 0x35, 0x22, 0xb5, 0x01, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0xc8, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x06,
	0x63, 0x6f, 0x6e, 0x74, 0x6f, 0x72, 0x18, 0xac, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x6f, 0x6e, 0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x5f,
	0x32, 0x33, 0x18, 0x90, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x74, 0x69, 0x72, 0x61, 0x64,
	0x73, 0x32, 0x33, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x5f, 0x34, 0x18,
	0xf4, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x34, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x5f, 0x35, 0x18, 0xd8, 0x04, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x07, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x35, 0x22, 0x22, 0x0a, 0x10, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x21, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0xae, 0x01, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x09, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73,
	0x5f, 0x32, 0x33, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x08, 0x74, 0x69,
	0x72, 0x61, 0x64, 0x73, 0x32, 0x33, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x74, 0x69, 0x72,
	0x61, 0x64, 0x73, 0x5f, 0x34, 0x18, 0xac, 0x02, 0x20, 0x01, 0x28, 0x01, 0x48, 0x01, 0x52, 0x07,
	0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x34, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x74, 0x69,
	0x72, 0x61, 0x64, 0x73, 0x5f, 0x35, 0x18, 0x90, 0x03, 0x20, 0x01, 0x28, 0x01, 0x48, 0x02, 0x52,
	0x07, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x35, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x5f, 0x32, 0x33, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x74, 0x69,
	0x72, 0x61, 0x64, 0x73, 0x5f, 0x34, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x74, 0x69, 0x72, 0x61, 0x64,
	0x73, 0x5f, 0x35, 0x22, 0x36, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x12, 0x22, 0x0a, 0x07, 0x73, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x07, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x7d, 0x0a, 0x04, 0x4e,
	0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x0f, 0x0a, 0x02, 0x61, 0x69, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x02, 0x61, 0x69, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x5f, 0x32,
	0x33, 0x18, 0x90, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73,
	0x32, 0x33, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x5f, 0x34, 0x18, 0xf4,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x34, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x5f, 0x35, 0x18, 0xd8, 0x04, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x07, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x35, 0x22, 0xd2, 0x02, 0x0a, 0x0c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x75,
	0x7a, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x7a, 0x69,
	0x49, 0x64, 0x12, 0x38, 0x0a, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0xc8,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f,
	0x64, 0x65, 0x49, 0x6e, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x53, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x5f, 0x32, 0x33, 0x18, 0xac, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x32, 0x33, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69,
	0x72, 0x61, 0x64, 0x73, 0x5f, 0x34, 0x18, 0x90, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x74,
	0x69, 0x72, 0x61, 0x64, 0x73, 0x34, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73,
	0x5f, 0x35, 0x18, 0xf4, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x74, 0x69, 0x72, 0x61, 0x64,
	0x73, 0x35, 0x1a, 0x9a, 0x01, 0x0a, 0x0d, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x53, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0xac, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x74, 0x6f, 0x72, 0x18, 0x90, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x72,
	0x61, 0x64, 0x73, 0x5f, 0x32, 0x33, 0x18, 0xf4, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x74,
	0x69, 0x72, 0x61, 0x64, 0x73, 0x32, 0x33, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x72, 0x61, 0x64,
	0x73, 0x5f, 0x34, 0x18, 0xd8, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x74, 0x69, 0x72, 0x61,
	0x64, 0x73, 0x34, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x5f, 0x35, 0x18,
	0xbc, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x35, 0x22,
	0x1f, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x4f, 0x75, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x26, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x49,
	0x6e, 0x12, 0x15, 0x0a, 0x06, 0x75, 0x7a, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x75, 0x7a, 0x69, 0x49, 0x64, 0x22, 0x2d, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x4f, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x05, 0x6e, 0x6f,
	0x64, 0x65, 0x73, 0x18, 0x64, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x1e, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xab, 0x01, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x09, 0x74, 0x69, 0x72, 0x61,
	0x64, 0x73, 0x5f, 0x32, 0x33, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x08,
	0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x32, 0x33, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x74,
	0x69, 0x72, 0x61, 0x64, 0x73, 0x5f, 0x34, 0x18, 0xac, 0x02, 0x20, 0x01, 0x28, 0x01, 0x48, 0x01,
	0x52, 0x07, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x34, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08,
	0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x5f, 0x35, 0x18, 0x90, 0x03, 0x20, 0x01, 0x28, 0x01, 0x48,
	0x02, 0x52, 0x07, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x35, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x5f, 0x32, 0x33, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x74, 0x69, 0x72, 0x61, 0x64, 0x73, 0x5f, 0x34, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x74, 0x69, 0x72,
	0x61, 0x64, 0x73, 0x5f, 0x35, 0x22, 0x2a, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e,
	0x6f, 0x64, 0x65, 0x4f, 0x75, 0x74, 0x12, 0x19, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64,
	0x65, 0x22, 0x2d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x57, 0x69, 0x74, 0x68, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x49, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x62, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x57, 0x69, 0x74, 0x68, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x4f, 0x75, 0x74,
	0x12, 0x1b, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x64, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x05, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x25, 0x0a,
	0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0xc8, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x08, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x73, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x32, 0xe0, 0x06, 0x0a, 0x06, 0x55, 0x7a, 0x69, 0x53, 0x72, 0x76, 0x12,
	0x3a, 0x0a, 0x0d, 0x67, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x11, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x12, 0x28, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x7a, 0x69, 0x12, 0x0c, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x55, 0x7a, 0x69, 0x49, 0x6e, 0x1a, 0x0d, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x7a, 0x69, 0x4f, 0x75, 0x74, 0x12, 0x28, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x7a, 0x69, 0x12, 0x0c, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x7a, 0x69, 0x49, 0x6e,
	0x1a, 0x0d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x7a, 0x69, 0x4f, 0x75, 0x74, 0x12,
	0x1f, 0x0a, 0x06, 0x67, 0x65, 0x74, 0x55, 0x7a, 0x69, 0x12, 0x09, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x7a, 0x69, 0x49, 0x6e, 0x1a, 0x0a, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x7a, 0x69, 0x4f, 0x75, 0x74,
	0x12, 0x37, 0x0a, 0x0e, 0x67, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x7a,
	0x69, 0x73, 0x12, 0x11, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x55,
	0x7a, 0x69, 0x73, 0x49, 0x6e, 0x1a, 0x12, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x74, 0x69, 0x65,
	0x6e, 0x74, 0x55, 0x7a, 0x69, 0x73, 0x4f, 0x75, 0x74, 0x12, 0x40, 0x0a, 0x11, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x12, 0x14,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x69, 0x63, 0x49, 0x6e, 0x1a, 0x15, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x63, 0x68,
	0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x4f, 0x75, 0x74, 0x12, 0x37, 0x0a, 0x0e, 0x67,
	0x65, 0x74, 0x45, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x12, 0x11, 0x2e,
	0x47, 0x65, 0x74, 0x45, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x49, 0x6e,
	0x1a, 0x12, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x63, 0x68, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69,
	0x63, 0x4f, 0x75, 0x74, 0x12, 0x31, 0x0a, 0x0c, 0x67, 0x65, 0x74, 0x55, 0x7a, 0x69, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x0f, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x7a, 0x69, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x73, 0x49, 0x6e, 0x1a, 0x10, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x7a, 0x69, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x4f, 0x75, 0x74, 0x12, 0x58, 0x0a, 0x19, 0x67, 0x65, 0x74, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x57, 0x69, 0x74, 0x68, 0x4e,
	0x6f, 0x64, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x57, 0x69, 0x74, 0x68, 0x4e, 0x6f, 0x64, 0x65, 0x73,
	0x49, 0x6e, 0x1a, 0x1d, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x57, 0x69, 0x74, 0x68, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x4f, 0x75,
	0x74, 0x12, 0x34, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x10, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x1a, 0x11, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x12, 0x39, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x34, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x10, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x1a, 0x11, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x12, 0x2b, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x0d, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e,
	0x6f, 0x64, 0x65, 0x49, 0x6e, 0x1a, 0x0e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f,
	0x64, 0x65, 0x4f, 0x75, 0x74, 0x12, 0x2e, 0x0a, 0x0b, 0x67, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4e,
	0x6f, 0x64, 0x65, 0x73, 0x12, 0x0e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4e, 0x6f, 0x64,
	0x65, 0x73, 0x49, 0x6e, 0x1a, 0x0f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4e, 0x6f, 0x64,
	0x65, 0x73, 0x4f, 0x75, 0x74, 0x12, 0x33, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e,
	0x6f, 0x64, 0x65, 0x12, 0x0d, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65,
	0x49, 0x6e, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x2b, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x0d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x1a, 0x0e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4e, 0x6f, 0x64, 0x65, 0x4f, 0x75, 0x74, 0x42, 0x24, 0x5a, 0x22, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x67, 0x72,
	0x70, 0x63, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x75, 0x7a, 0x69, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_uzi_proto_rawDescOnce sync.Once
	file_uzi_proto_rawDescData = file_uzi_proto_rawDesc
)

func file_uzi_proto_rawDescGZIP() []byte {
	file_uzi_proto_rawDescOnce.Do(func() {
		file_uzi_proto_rawDescData = protoimpl.X.CompressGZIP(file_uzi_proto_rawDescData)
	})
	return file_uzi_proto_rawDescData
}

var file_uzi_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_uzi_proto_goTypes = []any{
	(*Id)(nil),                           // 0: Id
	(*Device)(nil),                       // 1: Device
	(*GetDeviceListOut)(nil),             // 2: GetDeviceListOut
	(*Echographic)(nil),                  // 3: Echographic
	(*UpdateEchographicIn)(nil),          // 4: UpdateEchographicIn
	(*UpdateEchographicOut)(nil),         // 5: UpdateEchographicOut
	(*GetEchographicIn)(nil),             // 6: GetEchographicIn
	(*GetEchographicOut)(nil),            // 7: GetEchographicOut
	(*Uzi)(nil),                          // 8: Uzi
	(*CreateUziIn)(nil),                  // 9: CreateUziIn
	(*CreateUziOut)(nil),                 // 10: CreateUziOut
	(*UpdateUziIn)(nil),                  // 11: UpdateUziIn
	(*UpdateUziOut)(nil),                 // 12: UpdateUziOut
	(*GetUziIn)(nil),                     // 13: GetUziIn
	(*GetUziOut)(nil),                    // 14: GetUziOut
	(*GetPatientUzisIn)(nil),             // 15: GetPatientUzisIn
	(*GetPatientUzisOut)(nil),            // 16: GetPatientUzisOut
	(*Image)(nil),                        // 17: Image
	(*GetUziImagesIn)(nil),               // 18: GetUziImagesIn
	(*GetUziImagesOut)(nil),              // 19: GetUziImagesOut
	(*Segment)(nil),                      // 20: Segment
	(*CreateSegmentIn)(nil),              // 21: CreateSegmentIn
	(*CreateSegmentOut)(nil),             // 22: CreateSegmentOut
	(*DeleteSegmentIn)(nil),              // 23: DeleteSegmentIn
	(*UpdateSegmentIn)(nil),              // 24: UpdateSegmentIn
	(*UpdateSegmentOut)(nil),             // 25: UpdateSegmentOut
	(*Node)(nil),                         // 26: Node
	(*CreateNodeIn)(nil),                 // 27: CreateNodeIn
	(*CreateNodeOut)(nil),                // 28: CreateNodeOut
	(*GetAllNodesIn)(nil),                // 29: GetAllNodesIn
	(*GetAllNodesOut)(nil),               // 30: GetAllNodesOut
	(*DeleteNodeIn)(nil),                 // 31: DeleteNodeIn
	(*UpdateNodeIn)(nil),                 // 32: UpdateNodeIn
	(*UpdateNodeOut)(nil),                // 33: UpdateNodeOut
	(*GetImageSegmentsWithNodesIn)(nil),  // 34: GetImageSegmentsWithNodesIn
	(*GetImageSegmentsWithNodesOut)(nil), // 35: GetImageSegmentsWithNodesOut
	(*CreateNodeIn_NestedSegment)(nil),   // 36: CreateNodeIn.NestedSegment
	(*emptypb.Empty)(nil),                // 37: google.protobuf.Empty
}
var file_uzi_proto_depIdxs = []int32{
	1,  // 0: GetDeviceListOut.devices:type_name -> Device
	3,  // 1: UpdateEchographicIn.echographic:type_name -> Echographic
	3,  // 2: UpdateEchographicOut.echographic:type_name -> Echographic
	3,  // 3: GetEchographicOut.echographic:type_name -> Echographic
	8,  // 4: UpdateUziOut.uzi:type_name -> Uzi
	8,  // 5: GetUziOut.uzi:type_name -> Uzi
	8,  // 6: GetPatientUzisOut.uzis:type_name -> Uzi
	17, // 7: GetUziImagesOut.images:type_name -> Image
	20, // 8: UpdateSegmentOut.segment:type_name -> Segment
	36, // 9: CreateNodeIn.segments:type_name -> CreateNodeIn.NestedSegment
	26, // 10: GetAllNodesOut.nodes:type_name -> Node
	26, // 11: UpdateNodeOut.node:type_name -> Node
	26, // 12: GetImageSegmentsWithNodesOut.nodes:type_name -> Node
	20, // 13: GetImageSegmentsWithNodesOut.segments:type_name -> Segment
	37, // 14: UziSrv.getDeviceList:input_type -> google.protobuf.Empty
	9,  // 15: UziSrv.createUzi:input_type -> CreateUziIn
	11, // 16: UziSrv.updateUzi:input_type -> UpdateUziIn
	13, // 17: UziSrv.getUzi:input_type -> GetUziIn
	15, // 18: UziSrv.getPatientUzis:input_type -> GetPatientUzisIn
	4,  // 19: UziSrv.updateEchographic:input_type -> UpdateEchographicIn
	6,  // 20: UziSrv.getEchographic:input_type -> GetEchographicIn
	18, // 21: UziSrv.getUziImages:input_type -> GetUziImagesIn
	34, // 22: UziSrv.getImageSegmentsWithNodes:input_type -> GetImageSegmentsWithNodesIn
	21, // 23: UziSrv.createSegment:input_type -> CreateSegmentIn
	23, // 24: UziSrv.deleteSegment:input_type -> DeleteSegmentIn
	24, // 25: UziSrv.updateSegment:input_type -> UpdateSegmentIn
	27, // 26: UziSrv.createNode:input_type -> CreateNodeIn
	29, // 27: UziSrv.getAllNodes:input_type -> GetAllNodesIn
	31, // 28: UziSrv.deleteNode:input_type -> DeleteNodeIn
	32, // 29: UziSrv.updateNode:input_type -> UpdateNodeIn
	2,  // 30: UziSrv.getDeviceList:output_type -> GetDeviceListOut
	10, // 31: UziSrv.createUzi:output_type -> CreateUziOut
	12, // 32: UziSrv.updateUzi:output_type -> UpdateUziOut
	14, // 33: UziSrv.getUzi:output_type -> GetUziOut
	16, // 34: UziSrv.getPatientUzis:output_type -> GetPatientUzisOut
	5,  // 35: UziSrv.updateEchographic:output_type -> UpdateEchographicOut
	7,  // 36: UziSrv.getEchographic:output_type -> GetEchographicOut
	19, // 37: UziSrv.getUziImages:output_type -> GetUziImagesOut
	35, // 38: UziSrv.getImageSegmentsWithNodes:output_type -> GetImageSegmentsWithNodesOut
	22, // 39: UziSrv.createSegment:output_type -> CreateSegmentOut
	37, // 40: UziSrv.deleteSegment:output_type -> google.protobuf.Empty
	25, // 41: UziSrv.updateSegment:output_type -> UpdateSegmentOut
	28, // 42: UziSrv.createNode:output_type -> CreateNodeOut
	30, // 43: UziSrv.getAllNodes:output_type -> GetAllNodesOut
	37, // 44: UziSrv.deleteNode:output_type -> google.protobuf.Empty
	33, // 45: UziSrv.updateNode:output_type -> UpdateNodeOut
	30, // [30:46] is the sub-list for method output_type
	14, // [14:30] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_uzi_proto_init() }
func file_uzi_proto_init() {
	if File_uzi_proto != nil {
		return
	}
	file_uzi_proto_msgTypes[3].OneofWrappers = []any{}
	file_uzi_proto_msgTypes[11].OneofWrappers = []any{}
	file_uzi_proto_msgTypes[24].OneofWrappers = []any{}
	file_uzi_proto_msgTypes[32].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_uzi_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_uzi_proto_goTypes,
		DependencyIndexes: file_uzi_proto_depIdxs,
		MessageInfos:      file_uzi_proto_msgTypes,
	}.Build()
	File_uzi_proto = out.File
	file_uzi_proto_rawDesc = nil
	file_uzi_proto_goTypes = nil
	file_uzi_proto_depIdxs = nil
}
