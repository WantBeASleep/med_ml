{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "title": "Best API-Gateway ever!",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Authenticates a user and returns a token pair.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User Login",
                "parameters": [
                    {
                        "description": "User Login Data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.LoginResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Registers a new user and returns a response with a UUID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User Registration",
                "parameters": [
                    {
                        "description": "User Registration Data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.RegisterResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/token/refresh": {
            "post": {
                "description": "Refreshes an expired access token using a refresh token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Token Refresh",
                "parameters": [
                    {
                        "description": "Token Data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.TokenRefreshRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.TokenRefreshResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/formation/segments/{formation_id}": {
            "get": {
                "description": "Возвращает формацию с сегментами по указанному ID формации.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Uzi"
                ],
                "summary": "Получить формацию с сегментами",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID формации",
                        "name": "formation_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Данные формации с сегментами",
                        "schema": {
                            "$ref": "#/definitions/grpcapi.FormationWithSegments"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/formation/segments/{uzi_id}": {
            "post": {
                "description": "Создает формацию с сегментами, привязанную к указанному uziID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Uzi"
                ],
                "summary": "Добавить формацию с сегментами",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID УЗИ",
                        "name": "uzi_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Формация с сегментами",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/grpcapi.FormationWithNestedSegmentsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ID элементов",
                        "schema": {
                            "$ref": "#/definitions/grpcapi.CreateFormationWithSegmentsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/med/card/by/{id}": {
            "get": {
                "description": "Получить карту по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cards"
                ],
                "summary": "Get card by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID карты",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/med.GetCardByIDResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/med/card/create": {
            "post": {
                "description": "Создать новую карту",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cards"
                ],
                "summary": "Add card",
                "parameters": [
                    {
                        "description": "Запрос",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/med.PostCardRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/med.PostCardResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/med/card/delete/{id}": {
            "delete": {
                "description": "Удалить карту",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cards"
                ],
                "summary": "Delete card",
                "parameters": [
                    {
                        "description": "Запрос",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/med.DeleteCardRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/med.DeleteCardResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/med/card/list": {
            "get": {
                "description": "Получить список карт",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cards"
                ],
                "summary": "Get cards",
                "parameters": [
                    {
                        "description": "Запрос",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/med.GetCardsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/med.GetCardsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/med/card/patch/{id}": {
            "patch": {
                "description": "Частично обновить карту",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cards"
                ],
                "summary": "Patch card",
                "parameters": [
                    {
                        "description": "Запрос",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/med.PatchCardRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/med.UpdateMedWorkerResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/med/card/update/{id}": {
            "put": {
                "description": "Обновить карту",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cards"
                ],
                "summary": "Update card",
                "parameters": [
                    {
                        "description": "Запрос",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/med.PutCardRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/med.PutCardResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/med/patient/create": {
            "post": {
                "description": "Добавить пациента",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Patients"
                ],
                "summary": "Add patient",
                "parameters": [
                    {
                        "description": "Запрос",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/med.CreatePatientRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/med/patient/info/{id}": {
            "get": {
                "description": "Получить информацию о пациенте по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Patients"
                ],
                "summary": "Get patient by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID пациента",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/med.PatientInfoResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/med/patient/list": {
            "get": {
                "description": "Получить список пациентов",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Patients"
                ],
                "summary": "Get patient list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/med.PatientListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/med/patient/update/{patient.id}": {
            "put": {
                "description": "Обновить информацию о пациенте",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Patients"
                ],
                "summary": "Update patient",
                "parameters": [
                    {
                        "description": "Запрос",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/med.PatientUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/med/worker/by/{id}": {
            "get": {
                "description": "Получить данные медицинского работника по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MedWorkers"
                ],
                "summary": "Get med worker by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID медицинского работника",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/med.GetMedWorkerByIDResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/med/worker/create": {
            "post": {
                "description": "Добавить нового медицинского работника",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MedWorkers"
                ],
                "summary": "Add med worker",
                "parameters": [
                    {
                        "description": "Запрос",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/med.AddMedWorkerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/med.AddMedWorkerResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/med/worker/list": {
            "get": {
                "description": "Получить список медицинских работников",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MedWorkers"
                ],
                "summary": "Get med workers",
                "parameters": [
                    {
                        "description": "Запрос",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/med.GetMedworkerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/med.GetMedworkerListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/med/worker/patch/{id}": {
            "patch": {
                "description": "Частично обновить данные медицинского работника",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MedWorkers"
                ],
                "summary": "Patch med worker",
                "parameters": [
                    {
                        "description": "Запрос",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/med.PatchMedWorkerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/med.UpdateMedWorkerResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/med/worker/patients/{worker_id}": {
            "get": {
                "description": "Получить список пациентов, закрепленных за медицинским работником",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MedWorkers"
                ],
                "summary": "Get patients by med worker",
                "parameters": [
                    {
                        "description": "Запрос",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/med.GetPatientsByMedWorkerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/med.GetPatientsByMedWorkerResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/med/worker/update/{id}": {
            "put": {
                "description": "Обновить данные медицинского работника",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MedWorkers"
                ],
                "summary": "Update med worker",
                "parameters": [
                    {
                        "description": "Запрос",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/med.UpdateMedWorkerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/med.UpdateMedWorkerResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/report/{uzi_id}": {
            "get": {
                "description": "Возвращает информацию о Репорте по указанному ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Uzi"
                ],
                "summary": "Получить Репорт по ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID УЗИ",
                        "name": "uzi_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Данные УЗИ",
                        "schema": {
                            "$ref": "#/definitions/grpcapi.Report"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/uzi/create": {
            "post": {
                "description": "Да пиздец.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Uzi"
                ],
                "summary": "ЗагрузитьUzi",
                "responses": {
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/uzi/device/list": {
            "get": {
                "description": "Возвращает список доступных устройств для УЗИ.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Uzi"
                ],
                "summary": "Получить список устройств",
                "responses": {
                    "200": {
                        "description": "Список устройств",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/grpcapi.Device"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/uzi/formation/{formation_id}": {
            "patch": {
                "description": "Обновляет существующую формацию по переданному ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Uzi"
                ],
                "summary": "Обновить формацию",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID формации",
                        "name": "formation_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные формации",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/grpcapi.FormationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное выполнение",
                        "schema": {
                            "$ref": "#/definitions/grpcapi.FormationResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/uzi/image/segments/{image_id}": {
            "get": {
                "description": "Возвращает изображение УЗИ и информацию о сегментах по указанному ID изображения.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Uzi"
                ],
                "summary": "Получить изображение УЗИ с сегментами",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID изображения",
                        "name": "image_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Изображение с сегментами",
                        "schema": {
                            "$ref": "#/definitions/grpcapi.ImageWithFormationsSegments"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/uzi/segment/{segment_id}": {
            "patch": {
                "description": "Обновляет существующую сегмент по переданному ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Uzi"
                ],
                "summary": "Обновить сегмент",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID формации",
                        "name": "segment_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные формации",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/grpcapi.SegmentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное выполнение",
                        "schema": {
                            "$ref": "#/definitions/grpcapi.SegmentResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/uzi/{uzi_id}": {
            "get": {
                "description": "Возвращает информацию о УЗИ по указанному ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Uzi"
                ],
                "summary": "Получить УЗИ по ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID УЗИ",
                        "name": "uzi_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Данные УЗИ",
                        "schema": {
                            "$ref": "#/definitions/grpcapi.UziReponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Обновляет существующую запись УЗИ по переданным данным.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Uzi"
                ],
                "summary": "Обновить УЗИ",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID УЗИ",
                        "name": "uzi_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Метаданные УЗИ",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/grpcapi.UpdateUziRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное выполнение",
                        "schema": {
                            "$ref": "#/definitions/grpcapi.UziReponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "auth.LoginResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "auth.RegisterRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "fathers_name": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "med_organization": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "auth.RegisterResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "auth.TokenRefreshRequest": {
            "type": "object",
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "auth.TokenRefreshResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "grpcapi.CreateFormationWithSegmentsResponse": {
            "type": "object",
            "properties": {
                "formation_id": {
                    "type": "string"
                },
                "segments_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "grpcapi.Device": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "grpcapi.FormationRequest": {
            "type": "object",
            "properties": {
                "ai": {
                    "type": "boolean"
                },
                "tirads": {
                    "$ref": "#/definitions/grpcapi.Tirads"
                }
            }
        },
        "grpcapi.FormationResponse": {
            "type": "object",
            "properties": {
                "ai": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "tirads": {
                    "$ref": "#/definitions/grpcapi.Tirads"
                }
            }
        },
        "grpcapi.FormationWithNestedSegmentsRequest": {
            "type": "object",
            "properties": {
                "ai": {
                    "type": "boolean"
                },
                "segments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/grpcapi.SegmentNestedRequest"
                    }
                },
                "tirads": {
                    "$ref": "#/definitions/grpcapi.Tirads"
                }
            }
        },
        "grpcapi.FormationWithSegments": {
            "type": "object",
            "properties": {
                "formation": {
                    "$ref": "#/definitions/grpcapi.FormationResponse"
                },
                "segments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/grpcapi.SegmentResponse"
                    }
                }
            }
        },
        "grpcapi.ImageResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "grpcapi.ImageWithFormationsSegments": {
            "type": "object",
            "properties": {
                "formations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/grpcapi.FormationResponse"
                    }
                },
                "image": {
                    "$ref": "#/definitions/grpcapi.ImageResponse"
                },
                "segments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/grpcapi.SegmentResponse"
                    }
                }
            }
        },
        "grpcapi.Point": {
            "type": "object",
            "properties": {
                "X": {
                    "type": "integer"
                },
                "Y": {
                    "type": "integer"
                }
            }
        },
        "grpcapi.Report": {
            "type": "object",
            "properties": {
                "formations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/grpcapi.FormationResponse"
                    }
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/grpcapi.ImageResponse"
                    }
                },
                "segments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/grpcapi.SegmentResponse"
                    }
                },
                "uzi": {
                    "$ref": "#/definitions/grpcapi.UziReponse"
                }
            }
        },
        "grpcapi.SegmentNestedRequest": {
            "type": "object",
            "properties": {
                "contor": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/grpcapi.Point"
                    }
                },
                "image_id": {
                    "type": "string"
                },
                "tirads": {
                    "$ref": "#/definitions/grpcapi.Tirads"
                }
            }
        },
        "grpcapi.SegmentRequest": {
            "type": "object",
            "properties": {
                "contor": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/grpcapi.Point"
                    }
                },
                "formation_id": {
                    "type": "string"
                },
                "image_id": {
                    "type": "string"
                },
                "tirads": {
                    "$ref": "#/definitions/grpcapi.Tirads"
                }
            }
        },
        "grpcapi.SegmentResponse": {
            "type": "object",
            "properties": {
                "contor": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/grpcapi.Point"
                    }
                },
                "formation_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_id": {
                    "type": "string"
                },
                "tirads": {
                    "$ref": "#/definitions/grpcapi.Tirads"
                }
            }
        },
        "grpcapi.Tirads": {
            "type": "object",
            "properties": {
                "tirads_23": {
                    "type": "number"
                },
                "tirads_4": {
                    "type": "number"
                },
                "tirads_5": {
                    "type": "number"
                }
            }
        },
        "grpcapi.UpdateUziRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "uzi": {
                    "$ref": "#/definitions/grpcapi.UziUpdateRequest"
                }
            }
        },
        "grpcapi.UziReponse": {
            "type": "object",
            "properties": {
                "device_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "patient_id": {
                    "type": "string"
                },
                "projection": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "grpcapi.UziUpdateRequest": {
            "type": "object",
            "properties": {
                "device_id": {
                    "type": "integer"
                },
                "patient_id": {
                    "type": "string"
                },
                "projection": {
                    "type": "string"
                }
            }
        },
        "med.AddMedWorkerRequest": {
            "type": "object",
            "properties": {
                "expert_details": {
                    "type": "string"
                },
                "fathers_name": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "is_remote_worker": {
                    "type": "boolean"
                },
                "job": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "med_organization": {
                    "type": "string"
                }
            }
        },
        "med.AddMedWorkerResponse": {
            "type": "object",
            "properties": {
                "worker": {
                    "$ref": "#/definitions/med.MedWorker"
                }
            }
        },
        "med.Card": {
            "type": "object",
            "properties": {
                "appointment_time": {
                    "description": "TODO: Валидировать время в формате ISO 8601?",
                    "type": "string"
                },
                "diagnosis": {
                    "type": "string"
                },
                "has_nodules": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "med_worker_id": {
                    "description": "TODO: Передается?",
                    "type": "string"
                },
                "patient": {
                    "$ref": "#/definitions/med.Patient"
                }
            }
        },
        "med.CreatePatientRequest": {
            "type": "object",
            "properties": {
                "patient": {
                    "$ref": "#/definitions/med.Patient"
                }
            }
        },
        "med.DeleteCardRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "med.DeleteCardResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "med.GetCardByIDResponse": {
            "type": "object",
            "properties": {
                "postcard": {
                    "$ref": "#/definitions/med.Card"
                }
            }
        },
        "med.GetCardsRequest": {
            "type": "object",
            "properties": {
                "limit": {
                    "description": "uint64 id = 1;\nstring acceptance_datetime = 2;\nbool has_nodules = 3;\nstring diagnosis = 4;\nuint64 patient_id = 5;\nuint64 medworker_id = 6;",
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                }
            }
        },
        "med.GetCardsResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "next": {
                    "type": "string"
                },
                "previous": {
                    "type": "string"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/med.Card"
                    }
                }
            }
        },
        "med.GetMedWorkerByIDResponse": {
            "type": "object",
            "properties": {
                "worker": {
                    "$ref": "#/definitions/med.MedWorker"
                }
            }
        },
        "med.GetMedworkerListResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "next": {
                    "type": "string"
                },
                "previous": {
                    "type": "string"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/med.MedWorker"
                    }
                }
            }
        },
        "med.GetMedworkerRequest": {
            "type": "object",
            "properties": {
                "limit": {
                    "description": "string id = 1 [json_name = \"id\",\n(buf.validate.field).required = true\n];\nstring first_name = 2 [json_name = \"first_name\",\n(buf.validate.field).required = true\n];\nstring fathers_name = 3 [json_name = \"fathers_name\",\n(buf.validate.field).required = true\n];\nstring last_name = 4 [json_name = \"last_name\",\n(buf.validate.field).required = true\n];\nbool is_remote_worker = 5 [json_name = \"is_remote_worker\",\n(buf.validate.field).required = true\n];\nstring email = 6 [json_name = \"email\",\n(buf.validate.field).required = true\n];",
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                }
            }
        },
        "med.GetPatientsByMedWorkerRequest": {
            "type": "object",
            "properties": {
                "medWorkerId": {
                    "type": "string"
                }
            }
        },
        "med.GetPatientsByMedWorkerResponse": {
            "type": "object",
            "properties": {
                "cards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/med.Card"
                    }
                },
                "med_worker_id": {
                    "type": "string"
                }
            }
        },
        "med.MedWorker": {
            "type": "object",
            "properties": {
                "expert_details": {
                    "type": "string"
                },
                "fathers_name": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_remote_worker": {
                    "type": "boolean"
                },
                "job": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "med_organization": {
                    "type": "string"
                }
            }
        },
        "med.PatchCardRequest": {
            "type": "object",
            "properties": {
                "diagnosis": {
                    "type": "string"
                },
                "has_nodules": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "medworker_id": {
                    "type": "string"
                },
                "patient": {
                    "$ref": "#/definitions/med.Patient"
                }
            }
        },
        "med.PatchMedWorkerRequest": {
            "type": "object",
            "properties": {
                "expert_details": {
                    "type": "string"
                },
                "fathers_name": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_remote_worker": {
                    "type": "boolean"
                },
                "job": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "med_organization": {
                    "type": "string"
                }
            }
        },
        "med.Patient": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "Email с валидацией по формату",
                    "type": "string"
                },
                "father_name": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "last_name": {
                    "type": "string"
                },
                "medical_policy": {
                    "type": "string"
                }
            }
        },
        "med.PatientInfoResponse": {
            "type": "object",
            "properties": {
                "patient": {
                    "$ref": "#/definitions/med.Patient"
                }
            }
        },
        "med.PatientListResponse": {
            "type": "object",
            "properties": {
                "patients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/med.Patient"
                    }
                }
            }
        },
        "med.PatientUpdateRequest": {
            "type": "object",
            "properties": {
                "patient": {
                    "$ref": "#/definitions/med.Patient"
                }
            }
        },
        "med.PostCardRequest": {
            "type": "object",
            "properties": {
                "diagnosis": {
                    "type": "string"
                },
                "has_nodules": {
                    "type": "boolean"
                },
                "medworker_id": {
                    "type": "string"
                },
                "patient": {
                    "$ref": "#/definitions/med.Patient"
                }
            }
        },
        "med.PostCardResponse": {
            "type": "object",
            "properties": {
                "postcard": {
                    "$ref": "#/definitions/med.Card"
                }
            }
        },
        "med.PutCardRequest": {
            "type": "object",
            "properties": {
                "diagnosis": {
                    "type": "string"
                },
                "has_nodules": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "medworker_id": {
                    "type": "string"
                },
                "patient_id": {
                    "type": "string"
                }
            }
        },
        "med.PutCardResponse": {
            "type": "object",
            "properties": {
                "postcard": {
                    "$ref": "#/definitions/med.Card"
                }
            }
        },
        "med.UpdateMedWorkerRequest": {
            "type": "object",
            "properties": {
                "expert_details": {
                    "type": "string"
                },
                "fathers_name": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_remote_worker": {
                    "type": "boolean"
                },
                "job": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "med_organization": {
                    "type": "string"
                }
            }
        },
        "med.UpdateMedWorkerResponse": {
            "type": "object",
            "properties": {
                "worker": {
                    "$ref": "#/definitions/med.MedWorker"
                }
            }
        }
    }
}