// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/med/doctors": {
            "post": {
                "description": "Получает информацию о враче",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "doctors"
                ],
                "summary": "Получить информацию о враче",
                "parameters": [
                    {
                        "type": "string",
                        "description": "access_token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/med.Doctor"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/uzi/uzis": {
            "post": {
                "description": "Загружает узи на обработку",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "uzi"
                ],
                "summary": "Загружает узи на обработку",
                "parameters": [
                    {
                        "type": "string",
                        "description": "access_token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "uzi file. (обязательно с .tiff/.png)",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "проекция узи",
                        "name": "projection",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "id пациента",
                        "name": "patient_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "id узи апапапапарата",
                        "name": "device_id",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "molodec",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "med.Doctor": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "job": {
                    "type": "string"
                },
                "org": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Example API",
	Description:      "This is a sample API for demonstration.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
