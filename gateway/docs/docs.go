// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Authenticates a user and returns a token pair.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User Login",
                "parameters": [
                    {
                        "description": "User Login Data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.LoginResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Registers a new user and returns a response with a UUID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User Registration",
                "parameters": [
                    {
                        "description": "User Registration Data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.RegisterResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/token/refresh": {
            "post": {
                "description": "Refreshes an expired access token using a refresh token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Token Refresh",
                "parameters": [
                    {
                        "description": "Token Data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.TokenRefreshRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.TokenRefreshResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/formation/segments/{formation_id}": {
            "get": {
                "description": "Возвращает формацию с сегментами по указанному ID формации.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Uzi"
                ],
                "summary": "Получить формацию с сегментами",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID формации",
                        "name": "formation_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Данные формации с сегментами",
                        "schema": {
                            "$ref": "#/definitions/grpcapi.FormationWithSegments"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/formation/segments/{uzi_id}": {
            "post": {
                "description": "Создает формацию с сегментами, привязанную к указанному uziID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Uzi"
                ],
                "summary": "Добавить формацию с сегментами",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID УЗИ",
                        "name": "uzi_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Формация с сегментами",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/grpcapi.FormationWithNestedSegmentsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ID элементов",
                        "schema": {
                            "$ref": "#/definitions/grpcapi.CreateFormationWithSegmentsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/report/{uzi_id}": {
            "get": {
                "description": "Возвращает информацию о Репорте по указанному ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Uzi"
                ],
                "summary": "Получить Репорт по ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID УЗИ",
                        "name": "uzi_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Данные УЗИ",
                        "schema": {
                            "$ref": "#/definitions/grpcapi.Report"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/uzi/create": {
            "post": {
                "description": "Да пиздец.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Uzi"
                ],
                "summary": "ЗагрузитьUzi",
                "responses": {
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/uzi/device/list": {
            "get": {
                "description": "Возвращает список доступных устройств для УЗИ.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Uzi"
                ],
                "summary": "Получить список устройств",
                "responses": {
                    "200": {
                        "description": "Список устройств",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/grpcapi.Device"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/uzi/formation/{formation_id}": {
            "patch": {
                "description": "Обновляет существующую формацию по переданному ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Uzi"
                ],
                "summary": "Обновить формацию",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID формации",
                        "name": "formation_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные формации",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/grpcapi.FormationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное выполнение",
                        "schema": {
                            "$ref": "#/definitions/grpcapi.FormationResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/uzi/image/segments/{image_id}": {
            "get": {
                "description": "Возвращает изображение УЗИ и информацию о сегментах по указанному ID изображения.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Uzi"
                ],
                "summary": "Получить изображение УЗИ с сегментами",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID изображения",
                        "name": "image_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Изображение с сегментами",
                        "schema": {
                            "$ref": "#/definitions/grpcapi.ImageWithFormationsSegments"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/uzi/segment/{segment_id}": {
            "patch": {
                "description": "Обновляет существующую сегмент по переданному ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Uzi"
                ],
                "summary": "Обновить сегмент",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID формации",
                        "name": "segment_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные формации",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/grpcapi.SegmentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное выполнение",
                        "schema": {
                            "$ref": "#/definitions/grpcapi.SegmentResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/uzi/{uzi_id}": {
            "get": {
                "description": "Возвращает информацию о УЗИ по указанному ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Uzi"
                ],
                "summary": "Получить УЗИ по ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID УЗИ",
                        "name": "uzi_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Данные УЗИ",
                        "schema": {
                            "$ref": "#/definitions/grpcapi.UziReponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Обновляет существующую запись УЗИ по переданным данным.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Uzi"
                ],
                "summary": "Обновить УЗИ",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID УЗИ",
                        "name": "uzi_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Метаданные УЗИ",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/grpcapi.UpdateUziRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное выполнение",
                        "schema": {
                            "$ref": "#/definitions/grpcapi.UziReponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "auth.LoginResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "auth.RegisterRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "fathers_name": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "med_organization": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "auth.RegisterResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "auth.TokenRefreshRequest": {
            "type": "object",
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "auth.TokenRefreshResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "grpcapi.CreateFormationWithSegmentsResponse": {
            "type": "object",
            "properties": {
                "formation_id": {
                    "type": "string"
                },
                "segments_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "grpcapi.Device": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "grpcapi.FormationRequest": {
            "type": "object",
            "properties": {
                "ai": {
                    "type": "boolean"
                },
                "tirads": {
                    "$ref": "#/definitions/grpcapi.Tirads"
                }
            }
        },
        "grpcapi.FormationResponse": {
            "type": "object",
            "properties": {
                "ai": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "tirads": {
                    "$ref": "#/definitions/grpcapi.Tirads"
                }
            }
        },
        "grpcapi.FormationWithNestedSegmentsRequest": {
            "type": "object",
            "properties": {
                "ai": {
                    "type": "boolean"
                },
                "segments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/grpcapi.SegmentNestedRequest"
                    }
                },
                "tirads": {
                    "$ref": "#/definitions/grpcapi.Tirads"
                }
            }
        },
        "grpcapi.FormationWithSegments": {
            "type": "object",
            "properties": {
                "formation": {
                    "$ref": "#/definitions/grpcapi.FormationResponse"
                },
                "segments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/grpcapi.SegmentResponse"
                    }
                }
            }
        },
        "grpcapi.ImageResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "grpcapi.ImageWithFormationsSegments": {
            "type": "object",
            "properties": {
                "formations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/grpcapi.FormationResponse"
                    }
                },
                "image": {
                    "$ref": "#/definitions/grpcapi.ImageResponse"
                },
                "segments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/grpcapi.SegmentResponse"
                    }
                }
            }
        },
        "grpcapi.Point": {
            "type": "object",
            "properties": {
                "X": {
                    "type": "integer"
                },
                "Y": {
                    "type": "integer"
                }
            }
        },
        "grpcapi.Report": {
            "type": "object",
            "properties": {
                "formations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/grpcapi.FormationResponse"
                    }
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/grpcapi.ImageResponse"
                    }
                },
                "segments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/grpcapi.SegmentResponse"
                    }
                },
                "uzi": {
                    "$ref": "#/definitions/grpcapi.UziReponse"
                }
            }
        },
        "grpcapi.SegmentNestedRequest": {
            "type": "object",
            "properties": {
                "contor": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/grpcapi.Point"
                    }
                },
                "image_id": {
                    "type": "string"
                },
                "tirads": {
                    "$ref": "#/definitions/grpcapi.Tirads"
                }
            }
        },
        "grpcapi.SegmentRequest": {
            "type": "object",
            "properties": {
                "contor": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/grpcapi.Point"
                    }
                },
                "formation_id": {
                    "type": "string"
                },
                "image_id": {
                    "type": "string"
                },
                "tirads": {
                    "$ref": "#/definitions/grpcapi.Tirads"
                }
            }
        },
        "grpcapi.SegmentResponse": {
            "type": "object",
            "properties": {
                "contor": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/grpcapi.Point"
                    }
                },
                "formation_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_id": {
                    "type": "string"
                },
                "tirads": {
                    "$ref": "#/definitions/grpcapi.Tirads"
                }
            }
        },
        "grpcapi.Tirads": {
            "type": "object",
            "properties": {
                "tirads_23": {
                    "type": "number"
                },
                "tirads_4": {
                    "type": "number"
                },
                "tirads_5": {
                    "type": "number"
                }
            }
        },
        "grpcapi.UpdateUziRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "uzi": {
                    "$ref": "#/definitions/grpcapi.UziUpdateRequest"
                }
            }
        },
        "grpcapi.UziReponse": {
            "type": "object",
            "properties": {
                "device_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "patient_id": {
                    "type": "string"
                },
                "projection": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "grpcapi.UziUpdateRequest": {
            "type": "object",
            "properties": {
                "device_id": {
                    "type": "integer"
                },
                "patient_id": {
                    "type": "string"
                },
                "projection": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{"http"},
	Title:            "API-Gateway",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
